{
    "earlierVM": "OpenJDK7",
    "laterVM": "OpenJDK8",
    "added": [
        {
            "component": "c2",
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/opto/c2_globals.hpp",
            "name": "AggressiveUnboxing",
            "description": "Control optimizations for aggressive boxing elimination",
            "availability": "experimental",
            "type": "bool"
        },
        {
            "component": "c1",
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/c1/c1_globals.hpp",
            "name": "AssertRangeCheckElimination",
            "description": "Assert Range Check Elimination",
            "availability": "develop",
            "type": "bool"
        },
        {
            "component": "runtime",
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "AssumeMP",
            "description": "Instruct the VM to assume multiple processors are available",
            "availability": "product",
            "type": "bool",
            "deprecation": "<span style=\"white-space:nowrap\">Deprecated in JDK10<\/span><br><span style=\"white-space:nowrap\">Obsoleted in JDK12<\/span><br><span style=\"white-space:nowrap\">Expired in JDK13<\/span>"
        },
        {
            "component": "c1",
            "defaultValue": "true",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/c1/c1_globals.hpp",
            "name": "C1PatchInvokeDynamic",
            "description": "Patch invokedynamic appendix not known at compile time",
            "availability": "diagnostic",
            "type": "bool"
        },
        {
            "component": "runtime",
            "defaultValue": "-1",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "CICrashAt",
            "description": "id of compilation to trigger assert in compiler thread for the purpose of testing, e.g. generation of replay data",
            "availability": "notproduct",
            "type": "intx"
        },
        {
            "component": "runtime",
            "defaultValue": "1000",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "CMSCheckInterval",
            "description": "Interval in milliseconds that CMS thread checks if it should start a collection cycle",
            "availability": "develop",
            "type": "uintx"
        },
        {
            "component": "runtime",
            "defaultValue": "-1",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "CMSTriggerInterval",
            "description": "Commence a CMS collection cycle (at least) every so many milliseconds (0 permanently, -1 disabled)",
            "availability": "manageable",
            "type": "intx"
        },
        {
            "component": "runtime",
            "defaultValue": "true",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "ClassUnloadingWithConcurrentMark",
            "description": "Do unloading of classes with a concurrent marking cycle",
            "availability": "product",
            "type": "bool"
        },
        {
            "component": "runtime",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "CodeCacheMinimumUseSpace",
            "description": "Minimum code cache size (in bytes) required to start VM.",
            "availability": "develop_pd",
            "type": "uintx"
        },
        {
            "component": "runtime",
            "defaultValue": "1*G",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "CompressedClassSpaceSize",
            "description": "Maximum size of class area in Metaspace when compressed class pointers are used",
            "availability": "product",
            "type": "uintx"
        },
        {
            "component": "runtime",
            "defaultValue": "128",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "ContendedPaddingWidth",
            "description": "How many bytes to pad the fields/classes marked @Contended with",
            "availability": "product",
            "type": "intx"
        },
        {
            "component": "runtime",
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "CrashOnOutOfMemoryError",
            "description": "JVM aborts, producing an error log and core/mini dump, on the first occurrence of an out-of-memory error",
            "availability": "product",
            "type": "bool"
        },
        {
            "component": "runtime",
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "DisablePrimordialThreadGuardPages",
            "description": "Disable the use of stack guard pages if the JVM is loaded on the primordial process thread",
            "availability": "experimental",
            "type": "bool"
        },
        {
            "component": "runtime",
            "defaultValue": "NULL",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "DumpLoadedClassList",
            "description": "Dump the names all loaded classes, that could be stored into the CDS archive, in the specified file",
            "availability": "product",
            "type": "ccstr"
        },
        {
            "component": "runtime",
            "defaultValue": "true",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "DumpReplayDataOnError",
            "description": "Record replay data for crashing compiler threads",
            "availability": "product",
            "type": "bool"
        },
        {
            "component": "runtime",
            "defaultValue": "true",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "EnableContended",
            "description": "Enable @Contended annotation support",
            "availability": "product",
            "type": "bool"
        },
        {
            "component": "runtime",
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "ExitOnOutOfMemoryError",
            "description": "JVM exits on the first occurrence of an out-of-memory error",
            "availability": "product",
            "type": "bool"
        },
        {
            "component": "runtime",
            "defaultValue": "NULL",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "ExtraSharedClassListFile",
            "description": "Extra classlist for building the CDS archive file",
            "availability": "product",
            "type": "ccstr"
        },
        {
            "component": "runtime",
            "defaultValue": "true",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "FoldStableValues",
            "description": "Optimize loads from stable fields (marked w/ @Stable)",
            "availability": "diagnostic",
            "type": "bool"
        },
        {
            "component": "gc",
            "defaultValue": "true",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/gc_implementation/g1/g1_globals.hpp",
            "name": "G1EagerReclaimHumongousObjects",
            "description": "Try to reclaim dead large objects at every young GC.",
            "availability": "experimental",
            "type": "bool"
        },
        {
            "component": "gc",
            "defaultValue": "true",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/gc_implementation/g1/g1_globals.hpp",
            "name": "G1EagerReclaimHumongousObjectsWithStaleRefs",
            "description": "Try to reclaim dead large objects that have a few stale references at every young GC.",
            "availability": "experimental",
            "type": "bool"
        },
        {
            "component": "gc",
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/gc_implementation/g1/g1_globals.hpp",
            "name": "G1TraceEagerReclaimHumongousObjects",
            "description": "Print some information about large object liveness at every young GC.",
            "availability": "experimental",
            "type": "bool"
        },
        {
            "component": "gc",
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/gc_implementation/g1/g1_globals.hpp",
            "name": "G1VerifyBitmaps",
            "description": "Verifies the consistency of the marking bitmaps",
            "availability": "develop",
            "type": "bool"
        },
        {
            "component": "runtime",
            "defaultValue": "2",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "GCLockerRetryAllocationCount",
            "description": "Number of times to retry allocations when blocked by the GC locker",
            "availability": "diagnostic",
            "type": "uintx"
        },
        {
            "component": "runtime",
            "defaultValue": "0",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "GCWorkerDelayMillis",
            "description": "Delay in scheduling GC workers (in milliseconds)",
            "availability": "develop",
            "type": "uintx"
        },
        {
            "component": "runtime",
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "IgnoreEmptyClassPaths",
            "description": "Ignore empty path elements in -classpath",
            "availability": "product",
            "type": "bool"
        },
        {
            "component": "runtime",
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "IgnoreUnverifiableClassesDuringDump",
            "description": "Do not quit -Xshare:dump even if we encounter unverifiable classes. Just exclude them from the shared dictionary.",
            "availability": "diagnostic",
            "type": "bool",
            "deprecation": "<span style=\"white-space:nowrap\">Deprecated in JDK10<\/span><br><span style=\"white-space:nowrap\">Obsoleted in JDK12<\/span><br><span style=\"white-space:nowrap\">Expired in JDK13<\/span>"
        },
        {
            "component": "runtime",
            "defaultValue": "50",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "IncreaseFirstTierCompileThresholdAt",
            "description": "Increase the compile threshold for C1 compilation if the code cache is filled by the specified percentage",
            "availability": "product",
            "type": "uintx"
        },
        {
            "component": "runtime",
            "defaultValue": "NOT_LP64(2200*K) LP64_ONLY(4*M)",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "InitialBootClassLoaderMetaspaceSize",
            "description": "Initial size of the boot class loader data metaspace",
            "availability": "product",
            "type": "uintx",
            "deprecation": "<span style=\"white-space:nowrap\">Deprecated in JDK15<\/span><br><span style=\"white-space:nowrap\">Obsoleted in JDK16<\/span><br><span style=\"white-space:nowrap\">Expired in JDK17<\/span>"
        },
        {
            "component": "runtime",
            "defaultValue": "NULL",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "InlineDataFile",
            "description": "File containing inlining replay information[default: ./inline_pid%p.log] (%p replaced with pid)",
            "availability": "product",
            "type": "ccstr"
        },
        {
            "component": "runtime",
            "defaultValue": "0",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "MallocMaxTestWords",
            "description": "If non-zero, maximum number of words that malloc/realloc can allocate (for testing only)",
            "availability": "diagnostic",
            "type": "uintx"
        },
        {
            "component": "runtime",
            "defaultValue": "65536",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "MaxJNILocalCapacity",
            "description": "Maximum allowable local JNI handle capacity to EnsureLocalCapacity() and PushLocalFrame(), where <= 0 is unlimited, default: 65536",
            "availability": "product",
            "type": "intx"
        },
        {
            "component": "runtime",
            "defaultValue": "ScaleForWordSize(4*M)",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "MaxMetaspaceExpansion",
            "description": "The maximum expansion of Metaspace without full GC (in bytes)",
            "availability": "product",
            "type": "uintx"
        },
        {
            "component": "runtime",
            "defaultValue": "70",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "MaxMetaspaceFreeRatio",
            "description": "The maximum percentage of Metaspace free after GC to avoid shrinking",
            "availability": "product",
            "type": "uintx"
        },
        {
            "component": "runtime",
            "defaultValue": "max_uintx",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "MaxMetaspaceSize",
            "description": "Maximum size of Metaspaces (in bytes)",
            "availability": "product",
            "type": "uintx"
        },
        {
            "component": "runtime",
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "MetadataAllocationFailALot",
            "description": "Fail metadata allocations at intervals controlled by MetadataAllocationFailALotInterval",
            "availability": "develop",
            "type": "bool"
        },
        {
            "component": "runtime",
            "defaultValue": "1000",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "MetadataAllocationFailALotInterval",
            "description": "Metadata allocation failure a lot interval",
            "availability": "develop",
            "type": "uintx"
        },
        {
            "component": "runtime",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "MetaspaceSize",
            "description": "Initial size of Metaspaces (in bytes)",
            "availability": "product_pd",
            "type": "uintx"
        },
        {
            "component": "runtime",
            "defaultValue": "ScaleForWordSize(256*K)",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "MinMetaspaceExpansion",
            "description": "The minimum expansion of Metaspace (in bytes)",
            "availability": "product",
            "type": "uintx"
        },
        {
            "component": "runtime",
            "defaultValue": "40",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "MinMetaspaceFreeRatio",
            "description": "The minimum percentage of Metaspace free after GC to avoid expansion",
            "availability": "product",
            "type": "uintx"
        },
        {
            "component": "runtime",
            "defaultValue": "10",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "NmethodSweepActivity",
            "description": "Removes cold nmethods from code cache if > 0. Higher values result in more aggressive sweeping",
            "availability": "product",
            "type": "intx"
        },
        {
            "component": "runtime",
            "defaultValue": "5000",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "PerMethodSpecTrapLimit",
            "description": "Limit on speculative traps (of one kind) in a method (includes inlines)",
            "availability": "experimental",
            "type": "intx"
        },
        {
            "component": "runtime",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "PreserveFramePointer",
            "description": "Use the FP register for holding the frame pointer and not as a general purpose register.",
            "availability": "product_pd",
            "type": "bool"
        },
        {
            "os": "linux",
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "src/os/linux/vm/globals_linux.hpp",
            "name": "PrintActiveCpus",
            "description": "Print the number of CPUs detected in os::active_processor_count",
            "availability": "diagnostic",
            "type": "bool"
        },
        {
            "component": "runtime",
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "PrintCodeCacheOnCompilation",
            "description": "Print the code cache memory usage each time a method is compiled",
            "availability": "product",
            "type": "bool"
        },
        {
            "component": "runtime",
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "PrintFieldLayout",
            "description": "Print field layout for each class",
            "availability": "notproduct",
            "type": "bool"
        },
        {
            "component": "runtime",
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "PrintGCID",
            "description": "Print an identifier for each garbage collection",
            "availability": "manageable",
            "type": "bool"
        },
        {
            "component": "runtime",
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "PrintMethodFlushingStatistics",
            "description": "print statistics about method flushing",
            "availability": "diagnostic",
            "type": "bool"
        },
        {
            "component": "c2",
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/opto/c2_globals.hpp",
            "name": "PrintPreciseRTMLockingStatistics",
            "description": "Print per-lock-site statistics of rtm locking in JVM",
            "availability": "diagnostic",
            "type": "bool"
        },
        {
            "component": "runtime",
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "PrintSharedArchiveAndExit",
            "description": "Print shared archive file contents",
            "availability": "product",
            "type": "bool"
        },
        {
            "component": "runtime",
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "PrintSharedDictionary",
            "description": "If PrintSharedArchiveAndExit is true, also print the shared dictionary",
            "availability": "product",
            "type": "bool"
        },
        {
            "component": "runtime",
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "PrintStringDeduplicationStatistics",
            "description": "Print string deduplication statistics",
            "availability": "product",
            "type": "bool"
        },
        {
            "defaultValue": "50",
            "prefix": "-XX:",
            "definedIn": "src/cpu/x86/vm/globals_x86.hpp",
            "name": "RTMAbortRatio",
            "cpu": "x86",
            "description": "Lock abort ratio at which to stop use RTM lock eliding",
            "availability": "experimental",
            "type": "intx"
        },
        {
            "defaultValue": "1000",
            "prefix": "-XX:",
            "definedIn": "src/cpu/x86/vm/globals_x86.hpp",
            "name": "RTMAbortThreshold",
            "cpu": "x86",
            "description": "Calculate abort ratio after this number of aborts",
            "availability": "experimental",
            "type": "intx"
        },
        {
            "defaultValue": "0",
            "prefix": "-XX:",
            "definedIn": "src/cpu/x86/vm/globals_x86.hpp",
            "name": "RTMLockingCalculationDelay",
            "cpu": "x86",
            "description": "Number of milliseconds to wait before start calculating aborts for RTM locking",
            "availability": "experimental",
            "type": "intx"
        },
        {
            "defaultValue": "10000",
            "prefix": "-XX:",
            "definedIn": "src/cpu/x86/vm/globals_x86.hpp",
            "name": "RTMLockingThreshold",
            "cpu": "x86",
            "description": "Lock count at which to do RTM lock eliding without abort ratio calculation",
            "availability": "experimental",
            "type": "intx"
        },
        {
            "defaultValue": "5",
            "prefix": "-XX:",
            "definedIn": "src/cpu/x86/vm/globals_x86.hpp",
            "name": "RTMRetryCount",
            "cpu": "x86",
            "description": "Number of RTM retries on lock abort or busy",
            "availability": "product",
            "type": "uintx"
        },
        {
            "defaultValue": "100",
            "prefix": "-XX:",
            "definedIn": "src/cpu/x86/vm/globals_x86.hpp",
            "name": "RTMSpinLoopCount",
            "cpu": "x86",
            "description": "Spin count for lock to become free before RTM retry",
            "availability": "experimental",
            "type": "intx"
        },
        {
            "defaultValue": "64",
            "prefix": "-XX:",
            "definedIn": "src/cpu/x86/vm/globals_x86.hpp",
            "name": "RTMTotalCountIncrRate",
            "cpu": "x86",
            "description": "Increment total RTM attempted lock count once every n times",
            "availability": "experimental",
            "type": "intx"
        },
        {
            "component": "c2",
            "defaultValue": "true",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/opto/c2_globals.hpp",
            "name": "RenumberLiveNodes",
            "description": "Renumber live nodes",
            "availability": "develop",
            "type": "bool"
        },
        {
            "component": "runtime",
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "ReplayCompiles",
            "description": "Enable replay of compilations from ReplayDataFile",
            "availability": "develop",
            "type": "bool"
        },
        {
            "component": "runtime",
            "defaultValue": "NULL",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "ReplayDataFile",
            "description": "File containing compilation replay information[default: ./replay_pid%p.log] (%p replaced with pid)",
            "availability": "product",
            "type": "ccstr"
        },
        {
            "component": "runtime",
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "ReplayIgnoreInitErrors",
            "description": "Ignore exceptions thrown during initialization for replay",
            "availability": "develop",
            "type": "bool"
        },
        {
            "component": "runtime",
            "defaultValue": "2",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "ReplaySuppressInitializers",
            "description": "Control handling of class initialization during replay: <br>0 - don't do anything special; <br>1 - treat all class initializers as empty; <br>2 - treat class initializers for application classes as empty; <br>3 - allow all class initializers to run during bootstrap but pretend they are empty after starting replay",
            "availability": "develop",
            "type": "intx"
        },
        {
            "component": "runtime",
            "defaultValue": "true",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "RestrictContended",
            "description": "Restrict @Contended to trusted classes",
            "availability": "product",
            "type": "bool"
        },
        {
            "component": "runtime",
            "defaultValue": "NULL",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "SharedArchiveFile",
            "description": "Override the default location of the CDS archive file",
            "availability": "diagnostic",
            "type": "ccstr"
        },
        {
            "component": "runtime",
            "defaultValue": "LP64_ONLY(32*G)NOT_LP64(LINUX_ONLY(2*G) NOT_LINUX(0))",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "SharedBaseAddress",
            "description": "Address to allocate shared memory region for class data",
            "availability": "product",
            "type": "uintx"
        },
        {
            "component": "runtime",
            "defaultValue": "NULL",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "SharedClassListFile",
            "description": "Override the default CDS class list",
            "availability": "product",
            "type": "ccstr"
        },
        {
            "component": "shark",
            "defaultValue": "Default",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/shark/shark_globals.hpp",
            "name": "SharkOptimizationLevel",
            "description": "The optimization level passed to LLVM, possible values: None, Less, Default and Agressive",
            "availability": "product",
            "type": "ccstr"
        },
        {
            "component": "shark",
            "defaultValue": "NULL",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/shark/shark_globals.hpp",
            "name": "SharkVerifyFunction",
            "description": "Runs LLVM verify over LLVM IR",
            "availability": "develop",
            "type": "ccstr"
        },
        {
            "component": "runtime",
            "defaultValue": "3",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "SpecTrapLimitExtraEntries",
            "description": "Extra method data trap entries for speculation",
            "availability": "experimental",
            "type": "intx"
        },
        {
            "component": "c2",
            "defaultValue": "true",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/opto/c2_globals.hpp",
            "name": "SpecialEncodeISOArray",
            "description": "special version of ISO_8859_1$Encoder.encodeISOArray",
            "availability": "product",
            "type": "bool"
        },
        {
            "component": "c2",
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/opto/c2_globals.hpp",
            "name": "StressGCM",
            "description": "Randomize instruction scheduling in GCM",
            "availability": "develop",
            "type": "bool"
        },
        {
            "component": "c2",
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/opto/c2_globals.hpp",
            "name": "StressLCM",
            "description": "Randomize instruction scheduling in LCM",
            "availability": "develop",
            "type": "bool"
        },
        {
            "component": "c1",
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/c1/c1_globals.hpp",
            "name": "StressLoopInvariantCodeMotion",
            "description": "stress loop invariant code motion",
            "availability": "develop",
            "type": "bool"
        },
        {
            "component": "c1",
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/c1/c1_globals.hpp",
            "name": "StressRangeCheckElimination",
            "description": "stress Range Check Elimination",
            "availability": "develop",
            "type": "bool"
        },
        {
            "component": "runtime",
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "StressRewriter",
            "description": "Stress linktime bytecode rewriting",
            "availability": "develop",
            "type": "bool"
        },
        {
            "component": "runtime",
            "defaultValue": "3",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "StringDeduplicationAgeThreshold",
            "description": "A string must reach this age (or be promoted to an old region) to be considered for deduplication",
            "availability": "product",
            "type": "uintx"
        },
        {
            "component": "runtime",
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "StringDeduplicationRehashALot",
            "description": "Force table rehash every time the table is scanned",
            "availability": "diagnostic",
            "type": "bool"
        },
        {
            "component": "runtime",
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "StringDeduplicationResizeALot",
            "description": "Force table resize every time the table is scanned",
            "availability": "diagnostic",
            "type": "bool"
        },
        {
            "component": "runtime",
            "defaultValue": "0",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "SurvivorAlignmentInBytes",
            "description": "Default survivor space alignment in bytes",
            "availability": "experimental",
            "type": "intx"
        },
        {
            "component": "runtime",
            "defaultValue": "defaultSymbolTableSize",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "SymbolTableSize",
            "description": "Number of buckets in the JVM internal Symbol table",
            "availability": "experimental",
            "type": "uintx"
        },
        {
            "component": "runtime",
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "TraceClassLoaderData",
            "description": "Trace class loader loader_data lifetime",
            "availability": "develop",
            "type": "bool"
        },
        {
            "component": "runtime",
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "TraceClassPaths",
            "description": "Trace processing of class paths",
            "availability": "product",
            "type": "bool",
            "deprecation": "<span style=\"white-space:nowrap\">Obsoleted in JDK16<\/span><br><span style=\"white-space:nowrap\">Expired in JDK17<\/span>"
        },
        {
            "component": "runtime",
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "TraceDefaultMethods",
            "description": "Trace the default method processing steps",
            "availability": "develop",
            "type": "bool"
        },
        {
            "component": "runtime",
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "TraceMetadataChunkAllocation",
            "description": "Trace chunk metadata allocations",
            "availability": "develop",
            "type": "bool"
        },
        {
            "component": "runtime",
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "TraceMetadataHumongousAllocation",
            "description": "Trace humongous metadata allocations",
            "availability": "product",
            "type": "bool"
        },
        {
            "component": "runtime",
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "TraceMetavirtualspaceAllocation",
            "description": "Trace virtual space metadata allocations",
            "availability": "develop",
            "type": "bool"
        },
        {
            "component": "c2",
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/opto/c2_globals.hpp",
            "name": "TracePostallocExpand",
            "description": "Trace expanding nodes after register allocation.",
            "availability": "develop",
            "type": "bool"
        },
        {
            "component": "c1",
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/c1/c1_globals.hpp",
            "name": "TracePredicateFailedTraps",
            "description": "trace runtime traps caused by predicate failure",
            "availability": "develop",
            "type": "bool"
        },
        {
            "component": "c1",
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/c1/c1_globals.hpp",
            "name": "TraceRangeCheckElimination",
            "description": "Trace Range Check Elimination",
            "availability": "develop",
            "type": "bool"
        },
        {
            "component": "runtime",
            "defaultValue": "2",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "TypeProfileArgsLimit",
            "description": "max number of call arguments to consider for type profiling",
            "availability": "product",
            "type": "intx"
        },
        {
            "component": "runtime",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "TypeProfileLevel",
            "description": "=XYZ, with Z: Type profiling of arguments at call; Y: Type profiling of return value at call; X: Type profiling of parameters to methods; X, Y and Z in 0=off ; 1=jsr292 only; 2=all methods",
            "availability": "product_pd",
            "type": "uintx"
        },
        {
            "component": "runtime",
            "defaultValue": "2",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "TypeProfileParmsLimit",
            "description": "max number of incoming parameters to consider for type profiling, -1 for all",
            "availability": "product",
            "type": "intx"
        },
        {
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "src/cpu/x86/vm/globals_x86.hpp",
            "name": "UseBMI1Instructions",
            "cpu": "x86",
            "description": "Use BMI1 instructions",
            "availability": "product",
            "type": "bool"
        },
        {
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "src/cpu/x86/vm/globals_x86.hpp",
            "name": "UseBMI2Instructions",
            "cpu": "x86",
            "description": "Use BMI2 instructions",
            "availability": "product",
            "type": "bool"
        },
        {
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "src/cpu/x86/vm/globals_x86.hpp",
            "name": "UseCLMUL",
            "cpu": "x86",
            "description": "Control whether CLMUL instructions can be used on x86/x64",
            "availability": "product",
            "type": "bool"
        },
        {
            "component": "runtime",
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "UseCRC32Intrinsics",
            "description": "use intrinsics for java.util.zip.CRC32",
            "availability": "product",
            "type": "bool"
        },
        {
            "component": "runtime",
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "UseCompressedClassPointers",
            "description": "Use 32-bit class pointers in 64-bit VM. lp64_product means flag is always constant in 32 bit VM",
            "availability": "lp64_product",
            "type": "bool"
        },
        {
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "src/cpu/x86/vm/globals_x86.hpp",
            "name": "UseCountTrailingZerosInstruction",
            "cpu": "x86",
            "description": "Use count trailing zeros instruction",
            "availability": "product",
            "type": "bool"
        },
        {
            "component": "c2",
            "defaultValue": "true",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/opto/c2_globals.hpp",
            "name": "UseImplicitStableValues",
            "description": "Mark well-known stable fields as such (e.g. String.value)",
            "availability": "diagnostic",
            "type": "bool",
            "deprecation": "<span style=\"white-space:nowrap\">Obsoleted in JDK13<\/span><br><span style=\"white-space:nowrap\">Expired in JDK14<\/span>"
        },
        {
            "component": "c2",
            "defaultValue": "true",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/opto/c2_globals.hpp",
            "name": "UseInlineDepthForSpeculativeTypes",
            "description": "Carry inline depth of profile point with speculative type and give priority to profiling from lower inline depth",
            "availability": "diagnostic",
            "type": "bool"
        },
        {
            "component": "runtime",
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "UseLargePagesInMetaspace",
            "description": "Use large page memory in metaspace. Only used if UseLargePages is enabled.",
            "availability": "product",
            "type": "bool",
            "deprecation": "<span style=\"white-space:nowrap\">Deprecated in JDK15<\/span><br><span style=\"white-space:nowrap\">Obsoleted in JDK16<\/span><br><span style=\"white-space:nowrap\">Expired in JDK17<\/span>"
        },
        {
            "component": "c1",
            "defaultValue": "true",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/c1/c1_globals.hpp",
            "name": "UseLoopInvariantCodeMotion",
            "description": "Simple loop invariant code motion for short loops during GVN",
            "availability": "product",
            "type": "bool"
        },
        {
            "component": "c2",
            "defaultValue": "true",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/opto/c2_globals.hpp",
            "name": "UseMathExactIntrinsics",
            "description": "Enables intrinsification of various java.lang.Math functions",
            "availability": "product",
            "type": "bool"
        },
        {
            "component": "c2",
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/opto/c2_globals.hpp",
            "name": "UseMontgomeryMultiplyIntrinsic",
            "description": "Enables intrinsification of BigInteger.montgomeryMultiply()",
            "availability": "product",
            "type": "bool"
        },
        {
            "component": "c2",
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/opto/c2_globals.hpp",
            "name": "UseMontgomerySquareIntrinsic",
            "description": "Enables intrinsification of BigInteger.montgomerySquare()",
            "availability": "product",
            "type": "bool"
        },
        {
            "component": "c2",
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/opto/c2_globals.hpp",
            "name": "UseMulAddIntrinsic",
            "description": "Enables intrinsification of BigInteger.mulAdd()",
            "availability": "product",
            "type": "bool"
        },
        {
            "component": "c2",
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/opto/c2_globals.hpp",
            "name": "UseMultiplyToLenIntrinsic",
            "description": "Enables intrinsification of BigInteger.multiplyToLen()",
            "availability": "product",
            "type": "bool"
        },
        {
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "src/cpu/x86/vm/globals_x86.hpp",
            "name": "UseRTMDeopt",
            "cpu": "x86",
            "description": "Perform deopt and recompilation based on RTM abort ratio",
            "availability": "product",
            "type": "bool"
        },
        {
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "src/cpu/x86/vm/globals_x86.hpp",
            "name": "UseRTMForStackLocks",
            "cpu": "x86",
            "description": "Enable RTM lock eliding for stack locks in compiled code",
            "availability": "experimental",
            "type": "bool"
        },
        {
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "src/cpu/x86/vm/globals_x86.hpp",
            "name": "UseRTMLocking",
            "cpu": "x86",
            "description": "Enable RTM lock eliding for inflated locks in compiled code",
            "availability": "product",
            "type": "bool"
        },
        {
            "defaultValue": "true",
            "prefix": "-XX:",
            "definedIn": "src/cpu/x86/vm/globals_x86.hpp",
            "name": "UseRTMXendForLockBusy",
            "cpu": "x86",
            "description": "Use RTM Xend instead of Xabort when lock busy",
            "availability": "experimental",
            "type": "bool"
        },
        {
            "component": "runtime",
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "UseSHA",
            "description": "Control whether SHA instructions can be used on SPARC",
            "availability": "product",
            "type": "bool"
        },
        {
            "component": "runtime",
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "UseSHA1Intrinsics",
            "description": "Use intrinsics for SHA-1 crypto hash function",
            "availability": "product",
            "type": "bool"
        },
        {
            "component": "runtime",
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "UseSHA256Intrinsics",
            "description": "Use intrinsics for SHA-224 and SHA-256 crypto hash functions",
            "availability": "product",
            "type": "bool"
        },
        {
            "component": "runtime",
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "UseSHA512Intrinsics",
            "description": "Use intrinsics for SHA-384 and SHA-512 crypto hash functions",
            "availability": "product",
            "type": "bool"
        },
        {
            "component": "c2",
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/opto/c2_globals.hpp",
            "name": "UseSquareToLenIntrinsic",
            "description": "Enables intrinsification of BigInteger.squareToLen()",
            "availability": "product",
            "type": "bool"
        },
        {
            "component": "runtime",
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "UseStringDeduplication",
            "description": "Use string deduplication",
            "availability": "product",
            "type": "bool"
        },
        {
            "component": "c2",
            "defaultValue": "true",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/opto/c2_globals.hpp",
            "name": "UseTypeSpeculation",
            "description": "Speculatively propagate types from profiles",
            "availability": "product",
            "type": "bool"
        },
        {
            "component": "runtime",
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "VerifyGenericSignatures",
            "description": "Abort VM on erroneous or inconsistent generic signatures",
            "availability": "develop",
            "type": "bool"
        },
        {
            "component": "runtime",
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "VerifySharedSpaces",
            "description": "Verify shared spaces (false for default archive, true for archive specified by -XX:SharedArchiveFile)",
            "availability": "product",
            "type": "bool"
        },
        {
            "component": "runtime",
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "VerifyStringTableAtExit",
            "description": "verify StringTable contents at exit",
            "availability": "diagnostic",
            "type": "bool"
        },
        {
            "component": "runtime",
            "defaultValue": "Memory sub-systems to verify when Verify*GC flag(s) are enabled. One or more sub-systems can be specified in a comma separated string. Sub-systems are: threads, heap, symbol_table, string_table, codecache, dictionary, classloader_data_graph, metaspace, jni_handles, c-heap, codecache_oops",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "VerifySubSet",
            "availability": "diagnostic",
            "type": "ccstrlist"
        }
    ],
    "removed": [
        {
            "component": "runtime",
            "defaultValue": "20",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "AdaptivePermSizeWeight",
            "description": "Weight for perm gen exponential resizing, between 0 and 100",
            "availability": "product",
            "type": "uintx"
        },
        {
            "component": "runtime",
            "defaultValue": "0",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "Atomics",
            "description": "(Unsafe,Unstable) Diagnostic - Controls emission of atomics",
            "availability": "product",
            "type": "intx"
        },
        {
            "component": "runtime",
            "defaultValue": "true",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "AutoShutdownNMT",
            "description": "Automatically shutdown native memory tracking under stress situation. When set to false, native memory tracking tries to stay alive at the expense of JVM performance",
            "availability": "diagnostic",
            "type": "bool"
        },
        {
            "component": "runtime",
            "defaultValue": "-1",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "CMSInitiatingPermOccupancyFraction",
            "description": "Percentage CMS perm generation occupancy to start a CMScollection cycle. A negative value means that CMSTriggerPermRatio is used",
            "availability": "product",
            "type": "intx"
        },
        {
            "component": "runtime",
            "defaultValue": "true",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "CMSPermGenPrecleaningEnabled",
            "description": "Whether concurrent precleaning enabled in perm gen (effective only when CMSPrecleaningEnabled is true)",
            "availability": "product",
            "type": "bool"
        },
        {
            "component": "runtime",
            "defaultValue": "1*M",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "CMSRevisitStackSize",
            "description": "Size of CMS KlassKlass revisit stack",
            "availability": "product",
            "type": "uintx"
        },
        {
            "component": "runtime",
            "defaultValue": "80",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "CMSTriggerPermRatio",
            "description": "Percentage of MinHeapFreeRatio in the CMS perm generation that is allocated before a CMS collection cycle commences, that also collects the perm generation",
            "availability": "product",
            "type": "intx"
        },
        {
            "component": "runtime",
            "defaultValue": "1500*K",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "CodeCacheFlushingMinimumFreeSpace",
            "description": "When less than X space left, start code cache cleaning",
            "availability": "product",
            "type": "uintx"
        },
        {
            "component": "gc",
            "defaultValue": "true",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/gc_implementation/g1/g1_globals.hpp",
            "name": "G1DeferredRSUpdate",
            "description": "If true, use deferred RS updates",
            "availability": "develop",
            "type": "bool"
        },
        {
            "component": "gc",
            "defaultValue": "33",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/gc_implementation/g1/g1_globals.hpp",
            "name": "G1ExtraRegionSurvRate",
            "description": "If the young survival rate is S, and there's room left in to-space, we will allow regions whose survival rate is up to S + (1 - S)*X, where X is this parameter (as a fraction.)",
            "availability": "develop",
            "type": "intx"
        },
        {
            "component": "gc",
            "defaultValue": "50",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/gc_implementation/g1/g1_globals.hpp",
            "name": "G1InitYoungSurvRatio",
            "description": "Expected Survival Rate for newly allocated bytes",
            "availability": "develop",
            "type": "intx"
        },
        {
            "component": "gc",
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/gc_implementation/g1/g1_globals.hpp",
            "name": "G1PrintOopAppls",
            "description": "When true, print applications of closures to external locs.",
            "availability": "develop",
            "type": "bool"
        },
        {
            "component": "gc",
            "defaultValue": "true",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/gc_implementation/g1/g1_globals.hpp",
            "name": "G1RSBarrierNullFilter",
            "description": "If true, generate null-pointer filtering code in RS barrier",
            "availability": "develop",
            "type": "bool"
        },
        {
            "component": "gc",
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/gc_implementation/g1/g1_globals.hpp",
            "name": "G1RSCountHisto",
            "description": "If true, print a histogram of RS occupancies after each pause",
            "availability": "develop",
            "type": "bool"
        },
        {
            "component": "gc",
            "defaultValue": "true",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/gc_implementation/g1/g1_globals.hpp",
            "name": "G1UseParallelRSetScanning",
            "description": "Enables the parallelization of remembered set scanning during evacuation pauses",
            "availability": "experimental",
            "type": "bool"
        },
        {
            "component": "gc",
            "defaultValue": "true",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/gc_implementation/g1/g1_globals.hpp",
            "name": "G1UseParallelRSetUpdating",
            "description": "Enables the parallelization of remembered set updating during evacuation pauses",
            "availability": "experimental",
            "type": "bool"
        },
        {
            "component": "runtime",
            "defaultValue": "true",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "InitializeJavaLangExceptionsErrors",
            "description": "Initialize various error and exception classes - turn off for individual method debugging",
            "availability": "develop",
            "type": "bool"
        },
        {
            "component": "runtime",
            "defaultValue": "true",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "InitializeJavaLangString",
            "description": "Initialize java.lang.String - turn off for individual method debugging",
            "availability": "develop",
            "type": "bool"
        },
        {
            "component": "runtime",
            "defaultValue": "true",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "InitializeJavaLangSystem",
            "description": "Initialize java.lang.System - turn off for individual method debugging",
            "availability": "develop",
            "type": "bool"
        },
        {
            "component": "runtime",
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "JavaObjectsInPerm",
            "description": "controls whether Classes and interned Strings are allocatedin perm. This purely intended to allow debugging issuesin production.",
            "availability": "diagnostic",
            "type": "bool"
        },
        {
            "component": "runtime",
            "defaultValue": "ScaleForWordSize(4*M)",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "MaxPermHeapExpansion",
            "description": "Max expansion of permanent heap without full GC (in bytes)",
            "availability": "product",
            "type": "uintx"
        },
        {
            "component": "runtime",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "MaxPermSize",
            "description": "Maximum size of permanent generation (in bytes)",
            "availability": "product_pd",
            "type": "uintx",
            "deprecation": "<span style=\"white-space:nowrap\">Obsoleted in JDK8<\/span>"
        },
        {
            "component": "runtime",
            "defaultValue": "30",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "MinCodeCacheFlushingInterval",
            "description": "Min number of seconds between code cache cleaning sessions",
            "availability": "product",
            "type": "intx"
        },
        {
            "component": "runtime",
            "defaultValue": "ScaleForWordSize(256*K)",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "MinPermHeapExpansion",
            "description": "Min expansion of permanent heap (in bytes)",
            "availability": "product",
            "type": "uintx"
        },
        {
            "component": "runtime",
            "defaultValue": "3",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "PermGenPadding",
            "description": "How much buffer to keep for perm gen sizing",
            "availability": "product",
            "type": "uintx"
        },
        {
            "component": "runtime",
            "defaultValue": "20",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "PermMarkSweepDeadRatio",
            "description": "Percentage (0-100) of the perm gen allowed as dead wood.See MarkSweepDeadRatio for collector-specific comments.",
            "availability": "product",
            "type": "uintx"
        },
        {
            "component": "runtime",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "PermSize",
            "description": "Initial size of permanent generation (in bytes)",
            "availability": "product_pd",
            "type": "uintx",
            "deprecation": "<span style=\"white-space:nowrap\">Obsoleted in JDK8<\/span>"
        },
        {
            "component": "runtime",
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "PrintCompactFieldsSavings",
            "description": "Print how many words were saved with CompactFields",
            "availability": "notproduct",
            "type": "bool"
        },
        {
            "component": "runtime",
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "PrintRevisitStats",
            "description": "Print revisit (klass and MDO) stack related information",
            "availability": "product",
            "type": "bool"
        },
        {
            "component": "runtime",
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "RecordMarkSweepCompaction",
            "description": "Enable GC-to-GC recording and querying of compaction during MarkSweep",
            "availability": "notproduct",
            "type": "bool"
        },
        {
            "component": "runtime",
            "defaultValue": "512*M",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "SharedDummyBlockSize",
            "description": "Size of dummy block used to shift heap addresses (in bytes)",
            "availability": "product",
            "type": "uintx"
        },
        {
            "component": "runtime",
            "defaultValue": "true",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "SharedOptimizeColdStart",
            "description": "At dump time, order shared objects to achieve better cold startup time.",
            "availability": "diagnostic",
            "type": "bool"
        },
        {
            "component": "runtime",
            "defaultValue": "2",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "SharedOptimizeColdStartPolicy",
            "description": "Reordering policy for SharedOptimizeColdStart <br>0=favor classload-time locality, 1=balanced, <br>2=favor runtime locality",
            "availability": "develop",
            "type": "intx"
        },
        {
            "component": "runtime",
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "SharedSkipVerify",
            "description": "Skip assert() and verify() which page-in unwanted shared objects.",
            "availability": "diagnostic",
            "type": "bool"
        },
        {
            "component": "runtime",
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "StressNonEntrant",
            "description": "Mark nmethods non-entrant at registration",
            "availability": "develop",
            "type": "bool"
        },
        {
            "component": "c2",
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/opto/c2_globals.hpp",
            "name": "TraceLateExpand",
            "description": "Trace late expand of nodes.",
            "availability": "develop",
            "type": "bool"
        },
        {
            "os": "solaris",
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "src/os/solaris/vm/globals_solaris.hpp",
            "name": "UseISM",
            "description": "Use Intimate Shared Memory (Solaris Only)",
            "availability": "product",
            "type": "bool"
        },
        {
            "os": "solaris",
            "defaultValue": "true",
            "prefix": "-XX:",
            "definedIn": "src/os/solaris/vm/globals_solaris.hpp",
            "name": "UseMPSS",
            "description": "Use Multiple Page Size Support (Solaris 9 Only)",
            "availability": "product",
            "type": "bool"
        },
        {
            "component": "runtime",
            "defaultValue": "true",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "UsePPCLWSYNC",
            "description": "Use lwsync instruction if true, else use slower sync",
            "availability": "product",
            "type": "bool"
        },
        {
            "os": "solaris",
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "src/os/solaris/vm/globals_solaris.hpp",
            "name": "UsePermISM",
            "description": "Obsolete flag for compatibility (same as UseISM)",
            "availability": "product",
            "type": "bool"
        },
        {
            "component": "runtime",
            "defaultValue": "true",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "UseSplitVerifier",
            "description": "use split verifier with StackMapTable attributes",
            "availability": "product",
            "type": "bool"
        },
        {
            "component": "runtime",
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "UseStringCache",
            "description": "Enable String cache capabilities on String.java",
            "availability": "product",
            "type": "bool"
        },
        {
            "defaultValue": "50",
            "prefix": "-XX:",
            "definedIn": "src/cpu/sparc/vm/globals_sparc.hpp",
            "name": "V8AtomicOperationUnderLockSpinCount",
            "cpu": "sparc",
            "description": "Number of times to spin wait on a v8 atomic operation lock",
            "availability": "develop",
            "type": "intx"
        },
        {
            "component": "runtime",
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/runtime/globals.hpp",
            "name": "ValidateMarkSweep",
            "description": "Do extra validation during MarkSweep collection",
            "availability": "notproduct",
            "type": "bool"
        },
        {
            "component": "c1",
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "src/share/vm/c1/c1_globals.hpp",
            "name": "VerifyOopMaps",
            "description": "Adds oopmap verification code to the generated code",
            "availability": "notproduct",
            "type": "bool"
        }
    ]
}