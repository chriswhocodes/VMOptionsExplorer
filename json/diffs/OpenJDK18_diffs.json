{"earlierVM": "OpenJDK17",
"laterVM": "OpenJDK18",
"added":[{"availability":"product","component":"gc","defaultValue":"0","definedIn":"share/gc/g1/g1_globals.hpp","description":"Maximum number of entries per Array of Cards card set \ncontainer. Will be set ergonomically by default.","name":"G1RemSetArrayOfCardsEntries","prefix":"-XX:","range":"range(0, 65536)","type":"uint"},
{"availability":"develop","component":"gc","defaultValue":"4","definedIn":"share/gc/g1/g1_globals.hpp","description":"Maximum number of entries per region in the Array of Cards \ncard set container per MB of a heap region.","name":"G1RemSetArrayOfCardsEntriesBase","prefix":"-XX:","range":"range(1, 65536)","type":"uint"},
{"availability":"product","component":"gc","defaultValue":"90","definedIn":"share/gc/g1/g1_globals.hpp","description":"Percentage at which to coarsen a Howl bitmap to Howl full card \nset container.","name":"G1RemSetCoarsenHowlBitmapToHowlFullPercent","prefix":"-XX:","range":"range(1, 100)","type":"uint"},
{"availability":"product","component":"gc","defaultValue":"90","definedIn":"share/gc/g1/g1_globals.hpp","description":"Percentage at which to coarsen a Howl card set to Full card \nset container.","name":"G1RemSetCoarsenHowlToFullPercent","prefix":"-XX:","range":"range(1, 100)","type":"uint"},
{"availability":"product","component":"gc","defaultValue":"0.1","definedIn":"share/gc/g1/g1_globals.hpp","description":"The percentage of free card set memory that G1 should keep as \npercentage of the currently used memory.","name":"G1RemSetFreeMemoryKeepExcessRatio","prefix":"-XX:","range":"range(0.0, 1.0)","type":"double"},
{"availability":"product","component":"gc","defaultValue":"10","definedIn":"share/gc/g1/g1_globals.hpp","description":"Time after which the card set free memory task reschedules \nitself if there is work remaining.","name":"G1RemSetFreeMemoryRescheduleDelayMillis","prefix":"-XX:","range":"range(1, UINT_MAX)","type":"uint"},
{"availability":"product","component":"gc","defaultValue":"1","definedIn":"share/gc/g1/g1_globals.hpp","description":"The amount of time that the free memory task should spend \nbefore a pause of G1RemSetFreeMemoryRescheduleDelayMillis \nlength.","name":"G1RemSetFreeMemoryStepDurationMillis","prefix":"-XX:","range":"range(1e-3, 1e+6)","type":"double"},
{"availability":"product","component":"gc","defaultValue":"8","definedIn":"share/gc/g1/g1_globals.hpp","description":"Maximum number of buckets per Howl card set container. The \ndefault gives at worst bitmaps of size 8k. This showed to be a \ngood tradeoff between bitmap size (waste) and cacheability of \nthe bucket array. Must be a power of two.","name":"G1RemSetHowlMaxNumBuckets","prefix":"-XX:","range":"range(1, 1024)","type":"uint"},
{"availability":"product","component":"gc","defaultValue":"0","definedIn":"share/gc/g1/g1_globals.hpp","description":"Number of buckets per Howl card set container. Must be a power \nof two. Will be set ergonomically by default.","name":"G1RemSetHowlNumBuckets","prefix":"-XX:","range":"range(0, 1024)","type":"uint"}
],
"removed":[{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","deprecated":"17","description":"(Deprecated) Require the VM to acquire the class loader lock \nbefore calling loadClass() even for class loaders registering \nas parallel capable","expired":"19","name":"AlwaysLockClassLoader","obsoleted":"18","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"gc","defaultValue":"0","definedIn":"share/gc/g1/g1_globals.hpp","deprecated":"","description":"Max number of regions for which we keep bitmaps.\nWill be set ergonomically by default","expired":"19","name":"G1RSetRegionEntries","obsoleted":"18","prefix":"-XX:","range":"range(0, max_jint/wordSize)","type":"intx"},
{"availability":"develop","component":"gc","defaultValue":"256","definedIn":"share/gc/g1/g1_globals.hpp","description":"Max number of regions in a fine-grain table per MB.","name":"G1RSetRegionEntriesBase","prefix":"-XX:","range":"range(1, max_jint/wordSize)","type":"intx"},
{"availability":"product","component":"gc","defaultValue":"0","definedIn":"share/gc/g1/g1_globals.hpp","deprecated":"","description":"Max number of entries per region in a sparse table.\nWill be set ergonomically by default.","expired":"19","name":"G1RSetSparseRegionEntries","obsoleted":"18","prefix":"-XX:","range":"range(0, max_jint/wordSize)","type":"intx"},
{"availability":"develop","component":"gc","defaultValue":"4","definedIn":"share/gc/g1/g1_globals.hpp","description":"Max number of entries per region in a sparse table \nper MB.","name":"G1RSetSparseRegionEntriesBase","prefix":"-XX:","range":"range(1, max_jint/wordSize)","type":"intx"},
{"availability":"product","component":"c1","defaultValue":"true","definedIn":"share/c1/c1_globals.hpp","description":"Intrinsify java.nio.Buffer.checkIndex","name":"InlineNIOCheckIndex","prefix":"-XX:","type":"bool"}
]
}