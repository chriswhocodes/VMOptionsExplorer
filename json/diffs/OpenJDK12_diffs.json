{
    "earlierVM": "OpenJDK11",
    "laterVM": "OpenJDK12",
    "added": [
        {
            "component": "runtime",
            "defaultValue": "NULL",
            "prefix": "-XX:",
            "definedIn": "share/runtime/globals.hpp",
            "name": "AllocateOldGenAt",
            "description": "Path to the directoy where a temporary file will be created to use as the backing store for old generation.File of size Xmx is pre-allocated for performance reason, sowe need that much space available",
            "availability": "experimental",
            "type": "ccstr"
        },
        {
            "component": "runtime",
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "share/runtime/globals.hpp",
            "name": "AllowArchivingWithJavaAgent",
            "description": "Allow Java agent to be run with CDS dumping",
            "availability": "diagnostic",
            "type": "bool"
        },
        {
            "defaultValue": "true",
            "prefix": "-XX:",
            "definedIn": "cpu/aarch64/globals_aarch64.hpp",
            "name": "DisableBCCheck",
            "cpu": "aarch64",
            "description": "tell sim not to invoke bccheck callback",
            "availability": "product",
            "type": "bool"
        },
        {
            "component": "gc",
            "defaultValue": "0",
            "prefix": "-XX:",
            "definedIn": "share/gc/g1/g1_globals.hpp",
            "name": "G1PeriodicGCInterval",
            "description": "Number of milliseconds after a previous GC to wait before triggering a periodic gc. A value of zero disables periodically enforced gc cycles.",
            "availability": "manageable",
            "type": "uintx"
        },
        {
            "component": "gc",
            "defaultValue": "true",
            "prefix": "-XX:",
            "definedIn": "share/gc/g1/g1_globals.hpp",
            "name": "G1PeriodicGCInvokesConcurrent",
            "description": "Determines the kind of periodic GC. Set to true to have G1 perform a concurrent GC as periodic GC, otherwise use a STW Full GC.",
            "availability": "product",
            "type": "bool"
        },
        {
            "component": "gc",
            "defaultValue": "0.0",
            "prefix": "-XX:",
            "definedIn": "share/gc/g1/g1_globals.hpp",
            "name": "G1PeriodicGCSystemLoadThreshold",
            "range": "range(0.0, (double)max_uintx)",
            "description": "Maximum recent system wide load as returned by the 1m value of getloadavg() at which G1 triggers a periodic GC. A load above this value cancels a given periodic GC. A value of zero disables this check.",
            "availability": "manageable",
            "type": "double"
        },
        {
            "component": "gc",
            "defaultValue": "10",
            "prefix": "-XX:",
            "definedIn": "share/gc/g1/g1_globals.hpp",
            "name": "G1YoungExpansionBufferPercent",
            "range": "range(0, 100)",
            "description": "When heterogenous heap is enabled by AllocateOldGenAt option, after every GC, young gen is re-sized which involves system calls to commit/uncommit memory. To reduce these calls, we keep a buffer of extra regions to absorb small changes in young gen length. This flag takes the buffer size as an percentage of young gen length",
            "availability": "experimental",
            "type": "uintx"
        },
        {
            "defaultValue": "UseBuiltinSim",
            "prefix": "-XX:",
            "definedIn": "cpu/aarch64/globals_aarch64.hpp",
            "name": "NotifySimulator",
            "cpu": "aarch64",
            "description": "tell the AArch64 sim where we are in method code",
            "availability": "product",
            "type": "bool"
        },
        {
            "component": "runtime",
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "share/runtime/globals.hpp",
            "name": "PrintCodeHeapAnalytics",
            "description": "Print code heap usage statistics on exit and on full condition",
            "availability": "diagnostic",
            "type": "bool"
        },
        {
            "defaultValue": "true",
            "prefix": "-XX:",
            "definedIn": "cpu/aarch64/globals_aarch64.hpp",
            "name": "ShareVtableStubs",
            "cpu": "aarch64",
            "availability": "define_pd_global",
            "type": "bool"
        },
        {
            "component": "gc",
            "defaultValue": "true",
            "prefix": "-XX:",
            "definedIn": "share/gc/shenandoah/shenandoah_globals.hpp",
            "name": "ShenandoahAcmpBarrier",
            "description": "Turn on/off acmp barriers in Shenandoah",
            "availability": "diagnostic",
            "type": "bool"
        },
        {
            "component": "gc",
            "defaultValue": "10000",
            "prefix": "-XX:",
            "definedIn": "share/gc/shenandoah/shenandoah_globals.hpp",
            "name": "ShenandoahAllocationStallThreshold",
            "description": "When allocation tracing is enabled, the allocation stalls larger than this threshold would be reported as warnings. Time is in microseconds.",
            "availability": "diagnostic",
            "type": "intx"
        },
        {
            "component": "gc",
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "share/gc/shenandoah/shenandoah_globals.hpp",
            "name": "ShenandoahAllocationTrace",
            "description": "Trace allocation latencies and stalls. Can be expensive when lots of allocations happen, and may introduce scalability bottlenecks.",
            "availability": "diagnostic",
            "type": "bool"
        },
        {
            "component": "gc",
            "defaultValue": "true",
            "prefix": "-XX:",
            "definedIn": "share/gc/shenandoah/shenandoah_globals.hpp",
            "name": "ShenandoahAllowMixedAllocs",
            "description": "Allow mixing mutator and collector allocations in a single region",
            "availability": "diagnostic",
            "type": "bool"
        },
        {
            "component": "gc",
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "share/gc/shenandoah/shenandoah_globals.hpp",
            "name": "ShenandoahAlwaysPreTouch",
            "description": "Pre-touch heap memory, overrides global AlwaysPreTouch",
            "availability": "diagnostic",
            "type": "bool"
        },
        {
            "component": "gc",
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "share/gc/shenandoah/shenandoah_globals.hpp",
            "name": "ShenandoahCommonGCStateLoads",
            "description": "Enable commonming for GC state loads in generated code.",
            "availability": "experimental",
            "type": "bool"
        },
        {
            "component": "gc",
            "defaultValue": "true",
            "prefix": "-XX:",
            "definedIn": "share/gc/shenandoah/shenandoah_globals.hpp",
            "name": "ShenandoahConcurrentScanCodeRoots",
            "description": "Scan code roots concurrently, instead of during a pause",
            "availability": "experimental",
            "type": "bool"
        },
        {
            "component": "gc",
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "share/gc/shenandoah/shenandoah_globals.hpp",
            "name": "ShenandoahCriticalControlThreadPriority",
            "description": "Shenandoah control thread runs at critical scheduling priority.",
            "availability": "experimental",
            "type": "bool"
        },
        {
            "component": "gc",
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "share/gc/shenandoah/shenandoah_globals.hpp",
            "name": "ShenandoahDecreaseRegisterPressure",
            "description": "Try to reuse after-barrier values to reduce register pressure",
            "availability": "diagnostic",
            "type": "bool"
        },
        {
            "component": "gc",
            "defaultValue": "true",
            "prefix": "-XX:",
            "definedIn": "share/gc/shenandoah/shenandoah_globals.hpp",
            "name": "ShenandoahDontIncreaseWBFreq",
            "description": "Common 2 WriteBarriers or WriteBarrier and a ReadBarrier only if the resulting WriteBarrier isn't executed more frequently",
            "availability": "experimental",
            "type": "bool"
        },
        {
            "component": "gc",
            "defaultValue": "10",
            "prefix": "-XX:",
            "definedIn": "share/gc/shenandoah/shenandoah_globals.hpp",
            "name": "ShenandoahEvacAssist",
            "description": "How many objects to evacuate on WB assist path. Use zero to disable.",
            "availability": "experimental",
            "type": "uintx"
        },
        {
            "component": "gc",
            "defaultValue": "10",
            "prefix": "-XX:",
            "definedIn": "share/gc/shenandoah/shenandoah_globals.hpp",
            "name": "ShenandoahFreeThreshold",
            "range": "range(0,100)",
            "description": "Set the percentage of free heap at which a GC cycle is started. Does not apply to all heuristics.",
            "availability": "experimental",
            "type": "uintx"
        },
        {
            "component": "gc",
            "defaultValue": "0",
            "prefix": "-XX:",
            "definedIn": "share/gc/shenandoah/shenandoah_globals.hpp",
            "name": "ShenandoahHeapRegionSize",
            "description": "Size of the Shenandoah regions. Set to zero to detect automatically.",
            "availability": "experimental",
            "type": "size_t"
        },
        {
            "component": "gc",
            "defaultValue": "true",
            "prefix": "-XX:",
            "definedIn": "share/gc/shenandoah/shenandoah_globals.hpp",
            "name": "ShenandoahKeepAliveBarrier",
            "description": "Turn on/off keep alive barriers in Shenandoah",
            "availability": "diagnostic",
            "type": "bool"
        },
        {
            "component": "gc",
            "defaultValue": "200",
            "prefix": "-XX:",
            "definedIn": "share/gc/shenandoah/shenandoah_globals.hpp",
            "name": "ShenandoahMergeUpdateRefsMaxGap",
            "description": "If GC is currently running in merged update-refs mode this numbers gives the threshold when to switch to separate update-refs mode. Number is percentage relative to duration(marking)+duration(update-refs).",
            "availability": "experimental",
            "type": "uintx"
        },
        {
            "component": "gc",
            "defaultValue": "100",
            "prefix": "-XX:",
            "definedIn": "share/gc/shenandoah/shenandoah_globals.hpp",
            "name": "ShenandoahMergeUpdateRefsMinGap",
            "description": "If GC is currently running in separate update-refs mode this numbers gives the threshold when to switch to merged update-refs mode. Number is percentage relative toduration(marking)+duration(update-refs).",
            "availability": "experimental",
            "type": "uintx"
        },
        {
            "component": "gc",
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "share/gc/shenandoah/shenandoah_globals.hpp",
            "name": "ShenandoahOptimizeInstanceFinals",
            "description": "Optimize barriers on final instance fields.Turn it off for maximum compatibility with reflection or JNI code that manipulates final fields.",
            "availability": "experimental",
            "type": "bool"
        },
        {
            "component": "gc",
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "share/gc/shenandoah/shenandoah_globals.hpp",
            "name": "ShenandoahOptimizeStableFinals",
            "description": "Optimize barriers on stable fields.Turn it off for maximum compatibility with reflection or JNI code that manipulates final fields.",
            "availability": "experimental",
            "type": "bool"
        },
        {
            "component": "gc",
            "defaultValue": "4",
            "prefix": "-XX:",
            "definedIn": "share/gc/shenandoah/shenandoah_globals.hpp",
            "name": "ShenandoahParallelSafepointThreads",
            "description": "Number of parallel threads used for safepoint prolog/epilog",
            "availability": "experimental",
            "type": "uint"
        },
        {
            "component": "gc",
            "defaultValue": "true",
            "prefix": "-XX:",
            "definedIn": "share/gc/shenandoah/shenandoah_globals.hpp",
            "name": "ShenandoahReadBarrier",
            "description": "Turn on/off read barriers in Shenandoah",
            "availability": "diagnostic",
            "type": "bool"
        },
        {
            "component": "gc",
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "share/gc/shenandoah/shenandoah_globals.hpp",
            "name": "ShenandoahStoreCheck",
            "description": "Emit additional code that checks objects are written to only in to-space",
            "availability": "diagnostic",
            "type": "bool"
        },
        {
            "component": "gc",
            "defaultValue": "true",
            "prefix": "-XX:",
            "definedIn": "share/gc/shenandoah/shenandoah_globals.hpp",
            "name": "ShenandoahStoreValReadBarrier",
            "description": "Turn on/off store val read barriers in Shenandoah",
            "availability": "diagnostic",
            "type": "bool"
        },
        {
            "component": "gc",
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "share/gc/shenandoah/shenandoah_globals.hpp",
            "name": "ShenandoahTerminationTrace",
            "description": "Tracing task termination timings",
            "availability": "diagnostic",
            "type": "bool"
        },
        {
            "component": "gc",
            "defaultValue": "adaptive",
            "prefix": "-XX:",
            "definedIn": "share/gc/shenandoah/shenandoah_globals.hpp",
            "name": "ShenandoahUpdateRefsEarly",
            "description": "Run a separate concurrent reference updating phase afterconcurrent evacuation. Possible values: 'on', 'off', 'adaptive'",
            "availability": "experimental",
            "type": "ccstr"
        },
        {
            "component": "gc",
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "share/gc/shenandoah/shenandoah_globals.hpp",
            "name": "ShenandoahVerifyObjectEquals",
            "description": "Verify that == and != are not used on oops. Only in fastdebug",
            "availability": "develop",
            "type": "bool"
        },
        {
            "component": "gc",
            "defaultValue": "true",
            "prefix": "-XX:",
            "definedIn": "share/gc/shenandoah/shenandoah_globals.hpp",
            "name": "ShenandoahWriteBarrier",
            "description": "Turn on/off write barriers in Shenandoah",
            "availability": "diagnostic",
            "type": "bool"
        },
        {
            "component": "gc",
            "defaultValue": "true",
            "prefix": "-XX:",
            "definedIn": "share/gc/shared/gc_globals.hpp",
            "name": "UseOWSTTaskTerminator",
            "description": "Use Optimized Work Stealing Threads task termination protocol",
            "availability": "diagnostic",
            "type": "bool"
        },
        {
            "component": "gc",
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "share/gc/shared/gc_globals.hpp",
            "name": "UseShenandoahGC",
            "description": "Use the Shenandoah garbage collector",
            "availability": "experimental",
            "type": "bool"
        },
        {
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "cpu/aarch64/globals_aarch64.hpp",
            "name": "UseSimulatorCache",
            "cpu": "aarch64",
            "description": "tell sim to cache memory updates until exclusive op occurs",
            "availability": "product",
            "type": "bool"
        },
        {
            "component": "gc",
            "defaultValue": "8*G",
            "prefix": "-XX:",
            "definedIn": "share/gc/z/z_globals.hpp",
            "name": "ZMarkStackSpaceLimit",
            "range": "range(32*M, 1024*G)",
            "description": "Maximum number of bytes allocated for mark stacks",
            "availability": "product",
            "type": "size_t"
        }
    ],
    "removed": [
        {
            "defaultValue": "4096",
            "prefix": "-XX:",
            "definedIn": "cpu/x86/globals_x86.hpp",
            "name": "AVX3Threshold",
            "range": "range(0, max_jint)",
            "cpu": "x86",
            "description": "Minimum array size in bytes to use AVX512 intrinsicsfor copy, inflate and fill. When this value is set as zerocompare operations can also use AVX512 intrinsics.",
            "availability": "diagnostic",
            "type": "int"
        },
        {
            "component": "runtime",
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "share/runtime/globals.hpp",
            "name": "AggressiveOpts",
            "description": "(Deprecated) Enable aggressive optimizations - see arguments.cpp",
            "availability": "product",
            "type": "bool",
            "deprecation": "<span style=\"white-space:nowrap\">Deprecated in JDK11<\/span><br><span style=\"white-space:nowrap\">Obsoleted in JDK12<\/span><br><span style=\"white-space:nowrap\">Expired in JDK13<\/span>"
        },
        {
            "component": "runtime",
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "share/runtime/globals.hpp",
            "name": "AllowNonVirtualCalls",
            "description": "Obey the ACC_SUPER flag and allow invokenonvirtual calls",
            "availability": "product",
            "type": "bool",
            "deprecation": "<span style=\"white-space:nowrap\">Deprecated in JDK11<\/span><br><span style=\"white-space:nowrap\">Obsoleted in JDK12<\/span><br><span style=\"white-space:nowrap\">Expired in JDK13<\/span>"
        },
        {
            "component": "runtime",
            "defaultValue": "true",
            "prefix": "-XX:",
            "definedIn": "share/runtime/globals.hpp",
            "name": "AssumeMP",
            "description": "(Deprecated) Instruct the VM to assume multiple processors are available",
            "availability": "product",
            "type": "bool",
            "deprecation": "<span style=\"white-space:nowrap\">Deprecated in JDK10<\/span><br><span style=\"white-space:nowrap\">Obsoleted in JDK12<\/span><br><span style=\"white-space:nowrap\">Expired in JDK13<\/span>"
        },
        {
            "component": "runtime",
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "share/runtime/globals.hpp",
            "name": "CompileTheWorld",
            "description": "Compile all methods in all classes in bootstrap class path (stress test)",
            "availability": "develop",
            "type": "bool"
        },
        {
            "component": "runtime",
            "defaultValue": "true",
            "prefix": "-XX:",
            "definedIn": "share/runtime/globals.hpp",
            "name": "CompileTheWorldPreloadClasses",
            "description": "Preload all classes used by a class before start loading",
            "availability": "develop",
            "type": "bool"
        },
        {
            "component": "runtime",
            "defaultValue": "100",
            "prefix": "-XX:",
            "definedIn": "share/runtime/globals.hpp",
            "name": "CompileTheWorldSafepointInterval",
            "description": "Force a safepoint every n compiles so sweeper can keep up",
            "availability": "notproduct",
            "type": "intx"
        },
        {
            "component": "runtime",
            "defaultValue": "1",
            "prefix": "-XX:",
            "definedIn": "share/runtime/globals.hpp",
            "name": "CompileTheWorldStartAt",
            "description": "First class to consider when using +CompileTheWorld",
            "availability": "notproduct",
            "type": "intx"
        },
        {
            "component": "runtime",
            "defaultValue": "max_jint",
            "prefix": "-XX:",
            "definedIn": "share/runtime/globals.hpp",
            "name": "CompileTheWorldStopAt",
            "description": "Last class to consider when using +CompileTheWorld",
            "availability": "notproduct",
            "type": "intx"
        },
        {
            "component": "runtime",
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "share/runtime/globals.hpp",
            "name": "CompilerThreadHintNoPreempt",
            "description": "(Solaris only) Give compiler threads an extra quanta",
            "availability": "product",
            "type": "bool",
            "deprecation": "<span style=\"white-space:nowrap\">Deprecated in JDK11<\/span><br><span style=\"white-space:nowrap\">Obsoleted in JDK12<\/span><br><span style=\"white-space:nowrap\">Expired in JDK13<\/span>"
        },
        {
            "os": "linux",
            "defaultValue": "true",
            "prefix": "-XX:",
            "definedIn": "os/linux/globals_linux.hpp",
            "name": "DumpSharedMappingsInCore",
            "description": "If true, sets bit 3 of /proc/PID/coredump_filter, thus resulting in file-backed shared mappings of the process to be dumped into the corefile.",
            "availability": "diagnostic",
            "type": "bool"
        },
        {
            "component": "runtime",
            "defaultValue": "0",
            "prefix": "-XX:",
            "definedIn": "share/runtime/globals.hpp",
            "name": "EmitSync",
            "description": "(Unsafe, Unstable) Control emission of inline sync fast-path code",
            "availability": "experimental",
            "type": "intx",
            "deprecation": "<span style=\"white-space:nowrap\">Obsoleted in JDK12<\/span><br><span style=\"white-space:nowrap\">Expired in JDK13<\/span>"
        },
        {
            "component": "runtime",
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "share/runtime/globals.hpp",
            "name": "ErrorFileToStderr",
            "description": "If true, error data is printed to stderr instead of a file",
            "availability": "product",
            "type": "bool"
        },
        {
            "component": "runtime",
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "share/runtime/globals.hpp",
            "name": "ErrorFileToStdout",
            "description": "If true, error data is printed to stdout instead of a file",
            "availability": "product",
            "type": "bool"
        },
        {
            "component": "runtime",
            "defaultValue": "NULL",
            "prefix": "-XX:",
            "definedIn": "share/runtime/globals.hpp",
            "name": "ErrorReportServer",
            "description": "Override built-in error report server address",
            "availability": "product",
            "type": "ccstr",
            "deprecation": "<span style=\"white-space:nowrap\">Obsoleted in JDK12<\/span><br><span style=\"white-space:nowrap\">Expired in JDK13<\/span>"
        },
        {
            "component": "gc",
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "share/gc/shared/gc_globals.hpp",
            "name": "ExecuteInternalVMTests",
            "description": "Enable execution of internal VM tests",
            "availability": "notproduct",
            "type": "bool"
        },
        {
            "component": "gc",
            "defaultValue": "true",
            "prefix": "-XX:",
            "definedIn": "share/gc/g1/g1_globals.hpp",
            "name": "G1HRRSUseSparseTable",
            "description": "When true, use sparse table to save space.",
            "availability": "develop",
            "type": "bool"
        },
        {
            "component": "runtime",
            "defaultValue": "true",
            "prefix": "-XX:",
            "definedIn": "share/runtime/globals.hpp",
            "name": "IgnoreUnverifiableClassesDuringDump",
            "description": "Do not quit -Xshare:dump even if we encounter unverifiable classes. Just exclude them from the shared dictionary.",
            "availability": "diagnostic",
            "type": "bool",
            "deprecation": "<span style=\"white-space:nowrap\">Deprecated in JDK10<\/span><br><span style=\"white-space:nowrap\">Obsoleted in JDK12<\/span><br><span style=\"white-space:nowrap\">Expired in JDK13<\/span>"
        },
        {
            "component": "runtime",
            "defaultValue": "true",
            "prefix": "-XX:",
            "definedIn": "share/runtime/globals.hpp",
            "name": "MonitorInUseLists",
            "description": "Track Monitors for Deflation",
            "availability": "product",
            "type": "bool",
            "deprecation": "<span style=\"white-space:nowrap\">Deprecated in JDK10<\/span><br><span style=\"white-space:nowrap\">Obsoleted in JDK12<\/span><br><span style=\"white-space:nowrap\">Expired in JDK13<\/span>"
        },
        {
            "component": "runtime",
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "share/runtime/globals.hpp",
            "name": "PrintSafepointStatistics",
            "description": "(Deprecated) Print statistics about safepoint synchronization",
            "availability": "product",
            "type": "bool",
            "deprecation": "<span style=\"white-space:nowrap\">Deprecated in JDK11<\/span><br><span style=\"white-space:nowrap\">Obsoleted in JDK12<\/span><br><span style=\"white-space:nowrap\">Expired in JDK13<\/span>"
        },
        {
            "component": "runtime",
            "defaultValue": "300",
            "prefix": "-XX:",
            "definedIn": "share/runtime/globals.hpp",
            "name": "PrintSafepointStatisticsCount",
            "range": "range(1, max_intx)",
            "description": "(Deprecated) Total number of safepoint statistics collected before printing them out",
            "availability": "product",
            "type": "intx",
            "deprecation": "<span style=\"white-space:nowrap\">Deprecated in JDK11<\/span><br><span style=\"white-space:nowrap\">Obsoleted in JDK12<\/span><br><span style=\"white-space:nowrap\">Expired in JDK13<\/span>"
        },
        {
            "component": "runtime",
            "defaultValue": "-1",
            "prefix": "-XX:",
            "definedIn": "share/runtime/globals.hpp",
            "name": "PrintSafepointStatisticsTimeout",
            "description": "(Deprecated) Print safepoint statistics only when safepoint takes more than PrintSafepointSatisticsTimeout in millis",
            "availability": "product",
            "type": "intx",
            "deprecation": "<span style=\"white-space:nowrap\">Deprecated in JDK11<\/span><br><span style=\"white-space:nowrap\">Obsoleted in JDK12<\/span><br><span style=\"white-space:nowrap\">Expired in JDK13<\/span>"
        },
        {
            "component": "gc",
            "defaultValue": "satb",
            "prefix": "-XX:",
            "definedIn": "share/gc/shenandoah/shenandoah_globals.hpp",
            "name": "ShenandoahGCMode",
            "description": "GC mode to use. Among other things, this defines which barriers are in in use. Possible values are: satb - snapshot-at-the-beginning concurrent GC (three pass mark-evac-update); iu - incremental-update concurrent GC (three pass mark-evac-update); passive - stop the world GC only (either degenerated or full)",
            "availability": "product",
            "type": "ccstr"
        },
        {
            "component": "gc",
            "defaultValue": "true",
            "prefix": "-XX:",
            "definedIn": "share/gc/shenandoah/shenandoah_globals.hpp",
            "name": "ShenandoahLoadRefBarrier",
            "description": "Turn on/off load-reference barriers in Shenandoah",
            "availability": "diagnostic",
            "type": "bool"
        },
        {
            "component": "gc",
            "defaultValue": "0",
            "prefix": "-XX:",
            "definedIn": "share/gc/shenandoah/shenandoah_globals.hpp",
            "name": "ShenandoahRegionSize",
            "description": "Static heap region size. Set zero to enable automatic sizing.",
            "availability": "experimental",
            "type": "size_t"
        },
        {
            "component": "gc",
            "defaultValue": "true",
            "prefix": "-XX:",
            "definedIn": "share/gc/shenandoah/shenandoah_globals.hpp",
            "name": "ShenandoahSelfFixing",
            "description": "Fix references with load reference barrier. Disabling this might degrade performance.",
            "availability": "diagnostic",
            "type": "bool"
        },
        {
            "component": "gc",
            "defaultValue": "0",
            "prefix": "-XX:",
            "definedIn": "share/gc/shenandoah/shenandoah_globals.hpp",
            "name": "ShenandoahSoftMaxHeapSize",
            "description": "Soft limit for maximum heap size (in bytes)",
            "availability": "manageable",
            "type": "size_t"
        },
        {
            "component": "runtime",
            "defaultValue": "0",
            "prefix": "-XX:",
            "definedIn": "share/runtime/globals.hpp",
            "name": "SyncFlags",
            "description": "(Unsafe, Unstable) Experimental Sync flags",
            "availability": "experimental",
            "type": "intx",
            "deprecation": "<span style=\"white-space:nowrap\">Obsoleted in JDK12<\/span><br><span style=\"white-space:nowrap\">Expired in JDK13<\/span>"
        },
        {
            "component": "runtime",
            "defaultValue": "NULL",
            "prefix": "-XX:",
            "definedIn": "share/runtime/globals.hpp",
            "name": "SyncKnobs",
            "description": "(Unstable) Various monitor synchronization tunables",
            "availability": "experimental",
            "type": "ccstr",
            "deprecation": "<span style=\"white-space:nowrap\">Obsoleted in JDK12<\/span><br><span style=\"white-space:nowrap\">Expired in JDK13<\/span>"
        },
        {
            "component": "runtime",
            "defaultValue": "0",
            "prefix": "-XX:",
            "definedIn": "share/runtime/globals.hpp",
            "name": "SyncVerbose",
            "description": "(Unstable)",
            "availability": "experimental",
            "type": "intx",
            "deprecation": "<span style=\"white-space:nowrap\">Obsoleted in JDK12<\/span><br><span style=\"white-space:nowrap\">Expired in JDK13<\/span>"
        },
        {
            "component": "runtime",
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "share/runtime/globals.hpp",
            "name": "TransmitErrorReport",
            "description": "Enable error report transmission on erroneous termination",
            "availability": "product",
            "type": "bool",
            "deprecation": "<span style=\"white-space:nowrap\">Obsoleted in JDK12<\/span><br><span style=\"white-space:nowrap\">Expired in JDK13<\/span>"
        },
        {
            "component": "runtime",
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "share/runtime/globals.hpp",
            "name": "UnlinkSymbolsALot",
            "description": "Unlink unreferenced symbols from the symbol table at safepoints",
            "availability": "product",
            "type": "bool",
            "deprecation": "<span style=\"white-space:nowrap\">Deprecated in JDK11<\/span><br><span style=\"white-space:nowrap\">Obsoleted in JDK12<\/span><br><span style=\"white-space:nowrap\">Expired in JDK13<\/span>"
        },
        {
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "cpu/ppc/globals_ppc.hpp",
            "name": "UseByteReverseInstructions",
            "cpu": "ppc",
            "description": "Use byte reverse instructions.",
            "availability": "product",
            "type": "bool"
        },
        {
            "component": "runtime",
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "share/runtime/globals.hpp",
            "name": "UseLegacyJNINameEscaping",
            "description": "Use the original JNI name escaping scheme",
            "availability": "product",
            "type": "bool"
        },
        {
            "defaultValue": "true",
            "prefix": "-XX:",
            "definedIn": "cpu/aarch64/globals_aarch64.hpp",
            "name": "UseMembar",
            "cpu": "aarch64",
            "availability": "define_pd_global",
            "type": "bool",
            "deprecation": "<span style=\"white-space:nowrap\">Deprecated in JDK10<\/span><br><span style=\"white-space:nowrap\">Obsoleted in JDK12<\/span>"
        },
        {
            "component": "runtime",
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "share/runtime/globals.hpp",
            "name": "VMThreadHintNoPreempt",
            "description": "(Solaris only) Give VM thread an extra quanta",
            "availability": "product",
            "type": "bool",
            "deprecation": "<span style=\"white-space:nowrap\">Deprecated in JDK11<\/span><br><span style=\"white-space:nowrap\">Obsoleted in JDK12<\/span><br><span style=\"white-space:nowrap\">Expired in JDK13<\/span>"
        },
        {
            "component": "gc",
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "share/gc/shared/gc_globals.hpp",
            "name": "VerboseInternalVMTests",
            "description": "Turn on logging for internal VM tests.",
            "availability": "notproduct",
            "type": "bool"
        },
        {
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "cpu/arm/globals_arm.hpp",
            "name": "VerifyInterpreterStackTop",
            "cpu": "arm",
            "description": "Verify interpreter stack top at every stack expansion (AArch64 only)",
            "availability": "develop",
            "type": "bool"
        },
        {
            "component": "gc",
            "defaultValue": "true",
            "prefix": "-XX:",
            "definedIn": "share/gc/z/z_globals.hpp",
            "name": "ZConcurrentJNIWeakGlobalHandles",
            "description": "Clean JNI WeakGlobalRefs concurrently",
            "availability": "diagnostic",
            "type": "bool"
        },
        {
            "component": "gc",
            "defaultValue": "true",
            "prefix": "-XX:",
            "definedIn": "share/gc/z/z_globals.hpp",
            "name": "ZConcurrentStringTable",
            "description": "Clean StringTable concurrently",
            "availability": "diagnostic",
            "type": "bool"
        },
        {
            "component": "gc",
            "defaultValue": "true",
            "prefix": "-XX:",
            "definedIn": "share/gc/z/z_globals.hpp",
            "name": "ZConcurrentVMWeakHandles",
            "description": "Clean VM WeakHandles concurrently",
            "availability": "diagnostic",
            "type": "bool"
        },
        {
            "component": "gc",
            "defaultValue": "NOT_LP64(512*M) LP64_ONLY(8*G)",
            "prefix": "-XX:",
            "definedIn": "share/gc/z/z_globals.hpp",
            "name": "ZMarkStacksMax",
            "range": "range(32*M, NOT_LP64(512*M) LP64_ONLY(1024*G))",
            "description": "Maximum number of bytes allocated for marking stacks",
            "availability": "product",
            "type": "size_t"
        },
        {
            "component": "gc",
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "share/gc/z/z_globals.hpp",
            "name": "ZSymbolTableUnloading",
            "description": "Unload unused VM symbols",
            "availability": "diagnostic",
            "type": "bool"
        },
        {
            "component": "gc",
            "defaultValue": "true",
            "prefix": "-XX:",
            "definedIn": "share/gc/z/z_globals.hpp",
            "name": "ZWeakRoots",
            "description": "Treat JNI WeakGlobalRefs and StringTable as weak roots",
            "availability": "diagnostic",
            "type": "bool"
        },
        {
            "defaultValue": "false",
            "prefix": "-XX:",
            "definedIn": "cpu/arm/globals_arm.hpp",
            "name": "ZapHighNonSignificantBits",
            "cpu": "arm",
            "description": "Zap high non-significant bits of values (AArch64 only)",
            "availability": "develop",
            "type": "bool"
        }
    ]
}