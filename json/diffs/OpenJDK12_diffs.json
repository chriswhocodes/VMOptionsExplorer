{"earlierVM": "OpenJDK11",
"laterVM": "OpenJDK12",
"added":[{"availability":"experimental","component":"runtime","defaultValue":"NULL","definedIn":"share/runtime/globals.hpp","description":"Path to the directoy where a temporary file will be created to use as the backing store for old generation.File of size Xmx is pre-allocated for performance reason, sowe need that much space available","name":"AllocateOldGenAt","prefix":"-XX:","type":"ccstr"},
{"availability":"diagnostic","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Allow Java agent to be run with CDS dumping","name":"AllowArchivingWithJavaAgent","prefix":"-XX:","type":"bool"},
{"availability":"product","cpu":"aarch64","defaultValue":"true","definedIn":"cpu/aarch64/globals_aarch64.hpp","description":"tell sim not to invoke bccheck callback","name":"DisableBCCheck","prefix":"-XX:","type":"bool"},
{"availability":"manageable","component":"gc","defaultValue":"0","definedIn":"share/gc/g1/g1_globals.hpp","description":"Number of milliseconds after a previous GC to wait before triggering a periodic gc. A value of zero disables periodically enforced gc cycles.","name":"G1PeriodicGCInterval","prefix":"-XX:","type":"uintx"},
{"availability":"product","component":"gc","defaultValue":"true","definedIn":"share/gc/g1/g1_globals.hpp","description":"Determines the kind of periodic GC. Set to true to have G1 perform a concurrent GC as periodic GC, otherwise use a STW Full GC.","name":"G1PeriodicGCInvokesConcurrent","prefix":"-XX:","type":"bool"},
{"availability":"manageable","component":"gc","defaultValue":"0.0","definedIn":"share/gc/g1/g1_globals.hpp","description":"Maximum recent system wide load as returned by the 1m value of getloadavg() at which G1 triggers a periodic GC. A load above this value cancels a given periodic GC. A value of zero disables this check.","name":"G1PeriodicGCSystemLoadThreshold","prefix":"-XX:","range":"range(0.0, (double)max_uintx)","type":"double"},
{"availability":"experimental","component":"gc","defaultValue":"10","definedIn":"share/gc/g1/g1_globals.hpp","description":"When heterogenous heap is enabled by AllocateOldGenAt option, after every GC, young gen is re-sized which involves system calls to commit/uncommit memory. To reduce these calls, we keep a buffer of extra regions to absorb small changes in young gen length. This flag takes the buffer size as an percentage of young gen length","name":"G1YoungExpansionBufferPercent","prefix":"-XX:","range":"range(0, 100)","type":"uintx"},
{"availability":"product","cpu":"aarch64","defaultValue":"UseBuiltinSim","definedIn":"cpu/aarch64/globals_aarch64.hpp","description":"tell the AArch64 sim where we are in method code","name":"NotifySimulator","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Print code heap usage statistics on exit and on full condition","name":"PrintCodeHeapAnalytics","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"aarch64","defaultValue":"true","definedIn":"cpu/aarch64/globals_aarch64.hpp","name":"ShareVtableStubs","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"gc","defaultValue":"true","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"Turn on/off acmp barriers in Shenandoah","name":"ShenandoahAcmpBarrier","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"gc","defaultValue":"10000","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"When allocation tracing is enabled, the allocation stalls larger than this threshold would be reported as warnings. Time is in microseconds.","name":"ShenandoahAllocationStallThreshold","prefix":"-XX:","type":"intx"},
{"availability":"diagnostic","component":"gc","defaultValue":"false","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"Trace allocation latencies and stalls. Can be expensive when lots of allocations happen, and may introduce scalability bottlenecks.","name":"ShenandoahAllocationTrace","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"gc","defaultValue":"true","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"Allow mixing mutator and collector allocations in a single region","name":"ShenandoahAllowMixedAllocs","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"gc","defaultValue":"false","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"Pre-touch heap memory, overrides global AlwaysPreTouch","name":"ShenandoahAlwaysPreTouch","prefix":"-XX:","type":"bool"},
{"availability":"experimental","component":"gc","defaultValue":"false","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"Enable commonming for GC state loads in generated code.","name":"ShenandoahCommonGCStateLoads","prefix":"-XX:","type":"bool"},
{"availability":"experimental","component":"gc","defaultValue":"true","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"Scan code roots concurrently, instead of during a pause","name":"ShenandoahConcurrentScanCodeRoots","prefix":"-XX:","type":"bool"},
{"availability":"experimental","component":"gc","defaultValue":"false","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"Shenandoah control thread runs at critical scheduling priority.","name":"ShenandoahCriticalControlThreadPriority","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"gc","defaultValue":"false","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"Try to reuse after-barrier values to reduce register pressure","name":"ShenandoahDecreaseRegisterPressure","prefix":"-XX:","type":"bool"},
{"availability":"experimental","component":"gc","defaultValue":"true","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"Common 2 WriteBarriers or WriteBarrier and a ReadBarrier only if the resulting WriteBarrier isn't executed more frequently","name":"ShenandoahDontIncreaseWBFreq","prefix":"-XX:","type":"bool"},
{"availability":"experimental","component":"gc","defaultValue":"10","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"How many objects to evacuate on WB assist path. Use zero to disable.","name":"ShenandoahEvacAssist","prefix":"-XX:","type":"uintx"},
{"availability":"experimental","component":"gc","defaultValue":"10","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"Set the percentage of free heap at which a GC cycle is started. Does not apply to all heuristics.","name":"ShenandoahFreeThreshold","prefix":"-XX:","range":"range(0,100)","type":"uintx"},
{"availability":"experimental","component":"gc","defaultValue":"0","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"Size of the Shenandoah regions. Set to zero to detect automatically.","name":"ShenandoahHeapRegionSize","prefix":"-XX:","type":"size_t"},
{"availability":"diagnostic","component":"gc","defaultValue":"true","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"Turn on/off keep alive barriers in Shenandoah","name":"ShenandoahKeepAliveBarrier","prefix":"-XX:","type":"bool"},
{"availability":"experimental","component":"gc","defaultValue":"200","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"If GC is currently running in merged update-refs mode this numbers gives the threshold when to switch to separate update-refs mode. Number is percentage relative to duration(marking)+duration(update-refs).","name":"ShenandoahMergeUpdateRefsMaxGap","prefix":"-XX:","type":"uintx"},
{"availability":"experimental","component":"gc","defaultValue":"100","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"If GC is currently running in separate update-refs mode this numbers gives the threshold when to switch to merged update-refs mode. Number is percentage relative toduration(marking)+duration(update-refs).","name":"ShenandoahMergeUpdateRefsMinGap","prefix":"-XX:","type":"uintx"},
{"availability":"experimental","component":"gc","defaultValue":"false","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"Optimize barriers on final instance fields.Turn it off for maximum compatibility with reflection or JNI code that manipulates final fields.","name":"ShenandoahOptimizeInstanceFinals","prefix":"-XX:","type":"bool"},
{"availability":"experimental","component":"gc","defaultValue":"false","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"Optimize barriers on stable fields.Turn it off for maximum compatibility with reflection or JNI code that manipulates final fields.","name":"ShenandoahOptimizeStableFinals","prefix":"-XX:","type":"bool"},
{"availability":"experimental","component":"gc","defaultValue":"4","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"Number of parallel threads used for safepoint prolog/epilog","name":"ShenandoahParallelSafepointThreads","prefix":"-XX:","type":"uint"},
{"availability":"diagnostic","component":"gc","defaultValue":"true","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"Turn on/off read barriers in Shenandoah","name":"ShenandoahReadBarrier","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"gc","defaultValue":"false","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"Emit additional code that checks objects are written to only in to-space","name":"ShenandoahStoreCheck","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"gc","defaultValue":"false","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"Turn on/off enqueuing of oops for storeval barriers","name":"ShenandoahStoreValEnqueueBarrier","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"gc","defaultValue":"true","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"Turn on/off store val read barriers in Shenandoah","name":"ShenandoahStoreValReadBarrier","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"gc","defaultValue":"false","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"Tracing task termination timings","name":"ShenandoahTerminationTrace","prefix":"-XX:","type":"bool"},
{"availability":"experimental","component":"gc","defaultValue":"adaptive","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"Run a separate concurrent reference updating phase afterconcurrent evacuation. Possible values: 'on', 'off', 'adaptive'","name":"ShenandoahUpdateRefsEarly","prefix":"-XX:","type":"ccstr"},
{"availability":"develop","component":"gc","defaultValue":"false","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"Verify that == and != are not used on oops. Only in fastdebug","name":"ShenandoahVerifyObjectEquals","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"gc","defaultValue":"true","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"Turn on/off write barriers in Shenandoah","name":"ShenandoahWriteBarrier","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"gc","defaultValue":"true","definedIn":"share/gc/shared/gc_globals.hpp","description":"Use Optimized Work Stealing Threads task termination protocol","name":"UseOWSTTaskTerminator","prefix":"-XX:","type":"bool"},
{"availability":"experimental","component":"gc","defaultValue":"false","definedIn":"share/gc/shared/gc_globals.hpp","description":"Use the Shenandoah garbage collector","name":"UseShenandoahGC","prefix":"-XX:","type":"bool"},
{"availability":"product","cpu":"aarch64","defaultValue":"false","definedIn":"cpu/aarch64/globals_aarch64.hpp","description":"tell sim to cache memory updates until exclusive op occurs","name":"UseSimulatorCache","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"gc","defaultValue":"8*G","definedIn":"share/gc/z/z_globals.hpp","description":"Maximum number of bytes allocated for mark stacks","name":"ZMarkStackSpaceLimit","prefix":"-XX:","range":"range(32*M, 1024*G)","type":"size_t"}
],
"removed":[{"availability":"diagnostic","cpu":"x86","defaultValue":"4096","definedIn":"cpu/x86/globals_x86.hpp","description":"Minimum array size in bytes to use AVX512 intrinsicsfor copy, inflate and fill. When this value is set as zerocompare operations can also use AVX512 intrinsics.","name":"AVX3Threshold","prefix":"-XX:","range":"range(0, max_jint)","type":"int"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","deprecated":"11","description":"(Deprecated) Enable aggressive optimizations - see arguments.cpp","expired":"13","name":"AggressiveOpts","obsoleted":"12","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","deprecated":"11","description":"Obey the ACC_SUPER flag and allow invokenonvirtual calls","expired":"13","name":"AllowNonVirtualCalls","obsoleted":"12","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","deprecated":"10","description":"(Deprecated) Instruct the VM to assume multiple processors are available","expired":"13","name":"AssumeMP","obsoleted":"12","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Compile all methods in all classes in bootstrap class path (stress test)","name":"CompileTheWorld","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","description":"Preload all classes used by a class before start loading","name":"CompileTheWorldPreloadClasses","prefix":"-XX:","type":"bool"},
{"availability":"notproduct","component":"runtime","defaultValue":"100","definedIn":"share/runtime/globals.hpp","description":"Force a safepoint every n compiles so sweeper can keep up","name":"CompileTheWorldSafepointInterval","prefix":"-XX:","type":"intx"},
{"availability":"notproduct","component":"runtime","defaultValue":"1","definedIn":"share/runtime/globals.hpp","description":"First class to consider when using +CompileTheWorld","name":"CompileTheWorldStartAt","prefix":"-XX:","type":"intx"},
{"availability":"notproduct","component":"runtime","defaultValue":"max_jint","definedIn":"share/runtime/globals.hpp","description":"Last class to consider when using +CompileTheWorld","name":"CompileTheWorldStopAt","prefix":"-XX:","type":"intx"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","deprecated":"11","description":"(Solaris only) Give compiler threads an extra quanta","expired":"13","name":"CompilerThreadHintNoPreempt","obsoleted":"12","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","defaultValue":"true","definedIn":"os/linux/globals_linux.hpp","description":"If true, sets bit 3 of /proc/PID/coredump_filter, thus resulting in file-backed shared mappings of the process to be dumped into the corefile.","name":"DumpSharedMappingsInCore","os":"linux","prefix":"-XX:","type":"bool"},
{"availability":"experimental","component":"runtime","defaultValue":"0","definedIn":"share/runtime/globals.hpp","deprecated":"","description":"(Unsafe, Unstable) Control emission of inline sync fast-path code","expired":"13","name":"EmitSync","obsoleted":"12","prefix":"-XX:","type":"intx"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"If true, error data is printed to stderr instead of a file","name":"ErrorFileToStderr","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"If true, error data is printed to stdout instead of a file","name":"ErrorFileToStdout","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"NULL","definedIn":"share/runtime/globals.hpp","deprecated":"","description":"Override built-in error report server address","expired":"13","name":"ErrorReportServer","obsoleted":"12","prefix":"-XX:","type":"ccstr"},
{"availability":"notproduct","component":"gc","defaultValue":"false","definedIn":"share/gc/shared/gc_globals.hpp","description":"Enable execution of internal VM tests","name":"ExecuteInternalVMTests","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"gc","defaultValue":"true","definedIn":"share/gc/g1/g1_globals.hpp","description":"When true, use sparse table to save space.","name":"G1HRRSUseSparseTable","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","deprecated":"10","description":"Do not quit -Xshare:dump even if we encounter unverifiable classes. Just exclude them from the shared dictionary.","expired":"13","name":"IgnoreUnverifiableClassesDuringDump","obsoleted":"12","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","deprecated":"10","description":"Track Monitors for Deflation","expired":"13","name":"MonitorInUseLists","obsoleted":"12","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","deprecated":"11","description":"(Deprecated) Print statistics about safepoint synchronization","expired":"13","name":"PrintSafepointStatistics","obsoleted":"12","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"300","definedIn":"share/runtime/globals.hpp","deprecated":"11","description":"(Deprecated) Total number of safepoint statistics collected before printing them out","expired":"13","name":"PrintSafepointStatisticsCount","obsoleted":"12","prefix":"-XX:","range":"range(1, max_intx)","type":"intx"},
{"availability":"product","component":"runtime","defaultValue":"-1","definedIn":"share/runtime/globals.hpp","deprecated":"11","description":"(Deprecated) Print safepoint statistics only when safepoint takes more than PrintSafepointSatisticsTimeout in millis","expired":"13","name":"PrintSafepointStatisticsTimeout","obsoleted":"12","prefix":"-XX:","type":"intx"},
{"availability":"product","component":"gc","defaultValue":"satb","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"GC mode to use. Among other things, this defines which barriers are in in use. Possible values are: satb - snapshot-at-the-beginning concurrent GC (three pass mark-evac-update); iu - incremental-update concurrent GC (three pass mark-evac-update); passive - stop the world GC only (either degenerated or full)","name":"ShenandoahGCMode","prefix":"-XX:","type":"ccstr"},
{"availability":"diagnostic","component":"gc","defaultValue":"false","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"Turn on/off I-U barriers barriers in Shenandoah","name":"ShenandoahIUBarrier","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"gc","defaultValue":"true","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"Turn on/off load-reference barriers in Shenandoah","name":"ShenandoahLoadRefBarrier","prefix":"-XX:","type":"bool"},
{"availability":"experimental","component":"gc","defaultValue":"0","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"Static heap region size. Set zero to enable automatic sizing.","name":"ShenandoahRegionSize","prefix":"-XX:","type":"size_t"},
{"availability":"diagnostic","component":"gc","defaultValue":"true","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"Fix references with load reference barrier. Disabling this might degrade performance.","name":"ShenandoahSelfFixing","prefix":"-XX:","type":"bool"},
{"availability":"manageable","component":"gc","defaultValue":"0","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"Soft limit for maximum heap size (in bytes)","name":"ShenandoahSoftMaxHeapSize","prefix":"-XX:","type":"size_t"},
{"availability":"experimental","component":"runtime","defaultValue":"0","definedIn":"share/runtime/globals.hpp","deprecated":"","description":"(Unsafe, Unstable) Experimental Sync flags","expired":"13","name":"SyncFlags","obsoleted":"12","prefix":"-XX:","type":"intx"},
{"availability":"experimental","component":"runtime","defaultValue":"NULL","definedIn":"share/runtime/globals.hpp","deprecated":"","description":"(Unstable) Various monitor synchronization tunables","expired":"13","name":"SyncKnobs","obsoleted":"12","prefix":"-XX:","type":"ccstr"},
{"availability":"experimental","component":"runtime","defaultValue":"0","definedIn":"share/runtime/globals.hpp","deprecated":"","description":"(Unstable)","expired":"13","name":"SyncVerbose","obsoleted":"12","prefix":"-XX:","type":"intx"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","deprecated":"","description":"Enable error report transmission on erroneous termination","expired":"13","name":"TransmitErrorReport","obsoleted":"12","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","deprecated":"11","description":"Unlink unreferenced symbols from the symbol table at safepoints","expired":"13","name":"UnlinkSymbolsALot","obsoleted":"12","prefix":"-XX:","type":"bool"},
{"availability":"product","cpu":"ppc","defaultValue":"false","definedIn":"cpu/ppc/globals_ppc.hpp","description":"Use byte reverse instructions.","name":"UseByteReverseInstructions","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Use the original JNI name escaping scheme","name":"UseLegacyJNINameEscaping","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"aarch64","defaultValue":"true","definedIn":"cpu/aarch64/globals_aarch64.hpp","deprecated":"10","expired":"","name":"UseMembar","obsoleted":"12","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","deprecated":"11","description":"(Solaris only) Give VM thread an extra quanta","expired":"13","name":"VMThreadHintNoPreempt","obsoleted":"12","prefix":"-XX:","type":"bool"},
{"availability":"notproduct","component":"gc","defaultValue":"false","definedIn":"share/gc/shared/gc_globals.hpp","description":"Turn on logging for internal VM tests.","name":"VerboseInternalVMTests","prefix":"-XX:","type":"bool"},
{"availability":"develop","cpu":"arm","defaultValue":"false","definedIn":"cpu/arm/globals_arm.hpp","description":"Verify interpreter stack top at every stack expansion (AArch64 only)","name":"VerifyInterpreterStackTop","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"gc","defaultValue":"true","definedIn":"share/gc/z/z_globals.hpp","description":"Clean JNI WeakGlobalRefs concurrently","name":"ZConcurrentJNIWeakGlobalHandles","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"gc","defaultValue":"true","definedIn":"share/gc/z/z_globals.hpp","description":"Clean StringTable concurrently","name":"ZConcurrentStringTable","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"gc","defaultValue":"true","definedIn":"share/gc/z/z_globals.hpp","description":"Clean VM WeakHandles concurrently","name":"ZConcurrentVMWeakHandles","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"gc","defaultValue":"NOT_LP64(512*M) LP64_ONLY(8*G)","definedIn":"share/gc/z/z_globals.hpp","description":"Maximum number of bytes allocated for marking stacks","name":"ZMarkStacksMax","prefix":"-XX:","range":"range(32*M, NOT_LP64(512*M) LP64_ONLY(1024*G))","type":"size_t"},
{"availability":"diagnostic","component":"gc","defaultValue":"false","definedIn":"share/gc/z/z_globals.hpp","description":"Unload unused VM symbols","name":"ZSymbolTableUnloading","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"gc","defaultValue":"true","definedIn":"share/gc/z/z_globals.hpp","description":"Treat JNI WeakGlobalRefs and StringTable as weak roots","name":"ZWeakRoots","prefix":"-XX:","type":"bool"},
{"availability":"develop","cpu":"arm","defaultValue":"false","definedIn":"cpu/arm/globals_arm.hpp","description":"Zap high non-significant bits of values (AArch64 only)","name":"ZapHighNonSignificantBits","prefix":"-XX:","type":"bool"}
]
}