{"earlierVM": "OpenJDK15",
"laterVM": "OpenJDK16",
"added":[{"availability":"product","component":"c2","defaultValue":"-1","definedIn":"share/opto/c2_globals.hpp","description":"Partial inline size used for array copy acceleration.","name":"ArrayCopyPartialInlineSize","prefix":"-XX:","range":"range(-1, 64)","type":"intx"},
{"availability":"product","component":"runtime","defaultValue":"1024","definedIn":"share/runtime/globals.hpp","description":"Used to estimate a variable ceiling based on number of threads \nfor use with MonitorUsedDeflationThreshold (0 is off).","name":"AvgMonitorsPerThreadEstimate","prefix":"-XX:","range":"range(0, max_jint)","type":"intx"},
{"availability":"product","component":"runtime","defaultValue":"<br>","definedIn":"share/runtime/globals.hpp","description":"Control intrinsics using a list of +/- (internal) names, \nseparated by commas","name":"ControlIntrinsic","prefix":"-XX:","type":"ccstrlist"},
{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"For testing purposes concurrent threads revert optimizations \nbased on escape analysis at intervals given with \nDeoptimizeObjectsALotInterval=n. The thread count is given \nwith DeoptimizeObjectsALotThreadCountSingle and \nDeoptimizeObjectsALotThreadCountAll.","name":"DeoptimizeObjectsALot","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"5","definedIn":"share/runtime/globals.hpp","description":"Interval for DeoptimizeObjectsALot.","name":"DeoptimizeObjectsALotInterval","prefix":"-XX:","range":"range(0, max_jlong)","type":"uint64_t"},
{"availability":"develop","component":"runtime","defaultValue":"1","definedIn":"share/runtime/globals.hpp","description":"The number of threads that revert optimizations based on \nescape analysis for all threads if DeoptimizeObjectsALot \nis enabled.","name":"DeoptimizeObjectsALotThreadCountAll","prefix":"-XX:","range":"range(0, max_jint)","type":"int"},
{"availability":"develop","component":"runtime","defaultValue":"1","definedIn":"share/runtime/globals.hpp","description":"The number of threads that revert optimizations based on \nescape analysis for a single thread if DeoptimizeObjectsALot \nis enabled. The target thread is selected round robin.","name":"DeoptimizeObjectsALotThreadCountSingle","prefix":"-XX:","range":"range(0, max_jint)","type":"int"},
{"availability":"product","component":"runtime","defaultValue":"0","definedIn":"share/runtime/globals.hpp","description":"Detect and take action upon identifying synchronization on \nvalue based classes. Modes: \n\n0: off; \n\n1: exit with fatal error; \n\n2: log message to stdout. Output file can be specified with \n -Xlog:valuebasedclasses. If JFR is running it will \n also generate JFR events.","name":"DiagnoseSyncOnValueBasedClasses","prefix":"-XX:","range":"range(0, 2)","type":"intx"},
{"availability":"product","defaultValue":"false","definedIn":"os/linux/globals_linux.hpp","description":"Write map file for Linux perf tool at exit","name":"DumpPerfMapAtExit","os":"linux","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"c2","defaultValue":"false","definedIn":"share/opto/c2_globals.hpp","description":"Enables aggressive reboxing of vectors","name":"EnableVectorAggressiveReboxing","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"c2","defaultValue":"false","definedIn":"share/opto/c2_globals.hpp","description":"Enables reboxing of vectors","name":"EnableVectorReboxing","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"c2","defaultValue":"false","definedIn":"share/opto/c2_globals.hpp","description":"Enables VectorSupport intrinsics","name":"EnableVectorSupport","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"gc","defaultValue":"true","definedIn":"share/gc/g1/g1_globals.hpp","description":"Force use of evacuation failure handling during concurrent \nstart evacuation pauses","name":"G1EvacuationFailureALotDuringConcurrentStart","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"c2","defaultValue":"false","definedIn":"share/opto/c2_globals.hpp","description":"do cleanup after every iteration of incremental inlining","name":"IncrementalInlineForceCleanup","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"c2","defaultValue":"true","definedIn":"share/opto/c2_globals.hpp","description":"do post parse inlining of method handle calls","name":"IncrementalInlineMH","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"c2","defaultValue":"true","definedIn":"share/opto/c2_globals.hpp","description":"do post parse inlining of virtual calls","name":"IncrementalInlineVirtual","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"jvmci","defaultValue":"1","definedIn":"share/jvmci/jvmci_globals.hpp","description":"Event log level for JVMCI","name":"JVMCIEventLogLevel","prefix":"-XX:","range":"range(0, 4)","type":"intx"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Metapace allocations are guarded.","name":"MetaspaceGuardAllocations","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","description":"Switch off Metapace deallocation handling.","name":"MetaspaceHandleDeallocations","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"balanced","definedIn":"share/runtime/globals.hpp","description":"options: balanced, aggressive, none","name":"MetaspaceReclaimPolicy","prefix":"-XX:","type":"ccstr"},
{"availability":"product","component":"runtime","defaultValue":"1000000","definedIn":"share/runtime/globals.hpp","description":"The maximum number of monitors to deflate, unlink and delete \nat one time (minimum is 1024).","name":"MonitorDeflationMax","prefix":"-XX:","range":"range(1024, max_jint)","type":"intx"},
{"availability":"notproduct","component":"c2","defaultValue":"0","definedIn":"share/opto/c2_globals.hpp","description":"A depth threshold of ideal graph. Indentation is disabled \nwhen users attempt to dump an ideal graph deeper than it.","name":"PrintIdealIndentThreshold","prefix":"-XX:","type":"uintx"},
{"availability":"product","component":"runtime","defaultValue":"0","definedIn":"share/runtime/globals.hpp","description":"Repeat compilation without installing code (number of times)","name":"RepeatCompilation","prefix":"-XX:","range":"range(0, max_jint)","type":"intx"},
{"availability":"product","component":"gc","defaultValue":"0.5","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"The decay factor (alpha) used for values in the weighted \nmoving average of cycle time and allocation rate. \nLarger values give more weight to recent values.","name":"ShenandoahAdaptiveDecayFactor","prefix":"-XX:","range":"range(0,1.0)","type":"double"},
{"availability":"product","component":"gc","defaultValue":"1.8","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"The number of standard deviations used to determine an initial \nmargin of error for the average cycle time and average \nallocation rate. Increasing this value will cause the \nheuristic to initiate more concurrent cycles.","name":"ShenandoahAdaptiveInitialConfidence","prefix":"-XX:","type":"double"},
{"availability":"product","component":"gc","defaultValue":"1.8","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"If the most recently sampled allocation rate is more than \nthis many standard deviations away from the moving average, \nthen a cycle is initiated. This value controls how sensitive \nthe heuristic is to allocation spikes. Decreasing this number \nincreases the sensitivity.","name":"ShenandoahAdaptiveInitialSpikeThreshold","prefix":"-XX:","type":"double"},
{"availability":"product","component":"gc","defaultValue":"10","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"The number of times per second to update the allocation rate \nmoving average.","name":"ShenandoahAdaptiveSampleFrequencyHz","prefix":"-XX:","type":"uintx"},
{"availability":"product","component":"gc","defaultValue":"10","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"The size of the moving window over which the average \nallocation rate is maintained. The total number of samples \nis the product of this number and the sample frequency.","name":"ShenandoahAdaptiveSampleSizeSeconds","prefix":"-XX:","type":"uintx"},
{"availability":"product","component":"c2","defaultValue":"false","definedIn":"share/opto/c2_globals.hpp","description":"Randomize worklist traversal in IGVN","name":"StressIGVN","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"c2","defaultValue":"0","definedIn":"share/opto/c2_globals.hpp","description":"if > 0, convert int counted loops to long counted loops\nto stress handling of long counted loops: run inner loop\nfor at most jint_max / StressLongCountedLoop","name":"StressLongCountedLoop","prefix":"-XX:","range":"range(0, max_juint)","type":"uintx"},
{"availability":"product","component":"c2","defaultValue":"0","definedIn":"share/opto/c2_globals.hpp","description":"Seed for randomized stress testing (if unset, a random one is \ngenerated)","name":"StressSeed","prefix":"-XX:","range":"range(0, max_juint)","type":"uint"},
{"availability":"product","cpu":"ppc","defaultValue":"false","definedIn":"cpu/ppc/globals_ppc.hpp","description":"Use byte reverse instructions.","name":"UseByteReverseInstructions","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Enables intrinsification of Math.copySign","name":"UseCopySignIntrinsic","prefix":"-XX:","type":"bool"},
{"availability":"notproduct","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Debugging Only: Adjust the VM to be more debugger-friendly. \nTurns on the other UseDebuggerErgo* flags","name":"UseDebuggerErgo","prefix":"-XX:","type":"bool"},
{"availability":"notproduct","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Debugging Only: Enable workarounds for debugger induced \nos::processor_id() >= os::processor_count() problems","name":"UseDebuggerErgo1","prefix":"-XX:","type":"bool"},
{"availability":"notproduct","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Debugging Only: Limit the number of spawned JVM threads","name":"UseDebuggerErgo2","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Use intrinsics for MD5 crypto hash function","name":"UseMD5Intrinsics","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Use intrinsics for SHA3 crypto hash function. \nRequires that UseSHA is enabled.","name":"UseSHA3Intrinsics","prefix":"-XX:","type":"bool"},
{"availability":"product","cpu":"aarch64","defaultValue":"true","definedIn":"cpu/aarch64/globals_aarch64.hpp","description":"Use SIMD instructions for left/right shift of BigInteger","name":"UseSIMDForBigIntegerShiftIntrinsics","prefix":"-XX:","type":"bool"},
{"availability":"product","cpu":"aarch64","defaultValue":"0","definedIn":"cpu/aarch64/globals_aarch64.hpp","description":"Highest supported SVE instruction set version","name":"UseSVE","prefix":"-XX:","range":"range(0, 2)","type":"uint"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Enables intrinsification of Math.signum","name":"UseSignumIntrinsic","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"gc","defaultValue":"trueInDebug","definedIn":"share/gc/shared/gc_globals.hpp","description":"Verify memory when archived oop fields are loaded from CDS)","name":"VerifyArchivedFields","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"false AARCH64_ONLY(DEBUG_ONLY(||true))","definedIn":"share/runtime/globals.hpp","description":"Mark all threads after a safepoint, and clear on a modify \nfence. Add cleanliness checks.","name":"VerifyCrossModifyFence","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"gc","defaultValue":"false","definedIn":"share/gc/z/z_globals.hpp","description":"Always relocate pages in-place","name":"ZStressRelocateInPlace","prefix":"-XX:","type":"bool"}
],
"removed":[{"availability":"experimental","component":"runtime","defaultValue":"NULL","definedIn":"share/runtime/globals.hpp","description":"Path to the directoy where a temporary file will be \ncreated to use as the backing store for old generation.\nFile of size Xmx is pre-allocated for performance reason, so\nwe need that much space available","name":"AllocateOldGenAt","prefix":"-XX:","type":"ccstr"},
{"availability":"diagnostic","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","description":"Deflate idle monitors using the ServiceThread.","name":"AsyncDeflateIdleMonitors","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","deprecated":"","description":"Set when executing debug methods in debug.cpp \n(to prevent triggering assertions)","expired":"17","name":"Debugging","obsoleted":"16","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","deprecated":"15","description":"(Deprecated) Force NUMA optimizations on single-node/UMA systems","expired":"17","name":"ForceNUMA","obsoleted":"16","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"gc","defaultValue":"true","definedIn":"share/gc/g1/g1_globals.hpp","description":"Force use of evacuation failure handling during initial mark \nevacuation pauses","name":"G1EvacuationFailureALotDuringInitialMark","prefix":"-XX:","type":"bool"},
{"availability":"experimental","component":"gc","defaultValue":"10","definedIn":"share/gc/g1/g1_globals.hpp","description":"When heterogenous heap is enabled by AllocateOldGenAt \noption, after every GC, young gen is re-sized which \ninvolves system calls to commit/uncommit memory. To \nreduce these calls, we keep a buffer of extra regions to \nabsorb small changes in young gen length. This flag takes \nthe buffer size as an percentage of young gen length","name":"G1YoungExpansionBufferPercent","prefix":"-XX:","range":"range(0, 100)","type":"uintx"},
{"availability":"product","component":"runtime","defaultValue":"NOT_LP64(2200*K) LP64_ONLY(4*M)","definedIn":"share/runtime/globals.hpp","deprecated":"15","description":"(Deprecated) Initial size of the boot class loader data metaspace","expired":"17","name":"InitialBootClassLoaderMetaspaceSize","obsoleted":"16","prefix":"-XX:","range":"range(30*K, max_uintx/BytesPerWord)","type":"size_t"},
{"availability":"product","cpu":"ppc","defaultValue":"false","definedIn":"cpu/ppc/globals_ppc.hpp","description":"Insert EndGroup instructions to optimize for Power6.","name":"InsertEndGroupPPC64","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"c2","defaultValue":"true","definedIn":"share/opto/c2_globals.hpp","deprecated":"","description":"Insert memory barrier after arraycopy call","expired":"17","name":"InsertMemBarAfterArraycopy","obsoleted":"16","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"50","definedIn":"share/runtime/globals.hpp","description":"Used with +TraceLongCompiles","name":"LongCompileThreshold","prefix":"-XX:","type":"intx"},
{"availability":"develop","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","description":"Print VM messages on console","name":"PrintVMMessages","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","deprecated":"15","description":"(Deprecated) Print out the waiting time in VM operation queue","expired":"17","name":"PrintVMQWaitTime","obsoleted":"16","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"1024","definedIn":"share/runtime/globals.hpp","description":"Size in K to allocate for the Profile Nodes of each thread","name":"ProfilerNodeSize","prefix":"-XX:","range":"range(0, 1024)","type":"intx"},
{"availability":"diagnostic","component":"gc","defaultValue":"2","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"Use this style to scan the code cache roots:\n 0 - sequential iterator;\n 1 - parallel iterator;\n 2 - parallel iterator with cset filters;","name":"ShenandoahCodeRootsStyle","prefix":"-XX:","type":"uintx"},
{"availability":"diagnostic","component":"gc","defaultValue":"true","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"Do concurrent preclean phase before final mark: process \ndefinitely alive references to avoid dealing with them during \npause.","name":"ShenandoahPreclean","prefix":"-XX:","type":"bool"},
{"availability":"experimental","component":"gc","defaultValue":"5","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"Process process weak (soft, phantom, finalizers) references \nevery Nth cycle. Normally affects concurrent GC cycles only, \nas degenerated and full GCs would try to process references \nregardless. Set to zero to disable reference processing \ncompletely.","name":"ShenandoahRefProcFrequency","prefix":"-XX:","type":"uintx"},
{"availability":"notproduct","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Exercise register saving code in critical natives","name":"StressCriticalJNINatives","prefix":"-XX:","type":"bool"},
{"availability":"notproduct","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Force scavenge when a derived pointer is detected on stack \nafter rtm call","name":"StressDerivedPointers","prefix":"-XX:","type":"bool"},
{"availability":"experimental","component":"runtime","defaultValue":"0","definedIn":"share/runtime/globals.hpp","description":"Default survivor space alignment in bytes","name":"SurvivorAlignmentInBytes","prefix":"-XX:","range":"range(8, 256)","type":"intx"},
{"availability":"diagnostic","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","deprecated":"","description":"Trace JVMTI object tagging calls","expired":"17","name":"TraceJVMTIObjectTagging","obsoleted":"16","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Print out every time compilation is longer than \na given threshold","name":"TraceLongCompiles","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Trace profiling at the bytecode level during interpretation. \nThis outputs the profiling information collected to improve \njit compilation.","name":"TraceProfileInterpreter","prefix":"-XX:","type":"bool"},
{"availability":"product","defaultValue":"true","definedIn":"os/bsd/globals_bsd.hpp","deprecated":"","description":"enable fast Bsd Posix clocks where available","expired":"17","name":"UseBsdPosixThreadCPUClocks","obsoleted":"16","os":"bsd","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"c2","defaultValue":"true","definedIn":"share/opto/c2_globals.hpp","description":"Use exact types to eliminate array store checks and v-calls","name":"UseExactTypes","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","deprecated":"15","description":"(Deprecated) Use large page memory in metaspace. \nOnly used if UseLargePages is enabled.","expired":"17","name":"UseLargePagesInMetaspace","obsoleted":"16","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Use the original JNI name escaping scheme","name":"UseLegacyJNINameEscaping","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","deprecated":"15","description":"(Deprecated) Use new algorithm to compute field layouts","expired":"17","name":"UseNewFieldLayout","obsoleted":"16","prefix":"-XX:","type":"bool"},
{"availability":"product","cpu":"ppc","defaultValue":"false","definedIn":"cpu/ppc/globals_ppc.hpp","description":"Use Power6 Scheduler.","name":"UsePower6SchedulerPPC64","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"c2","defaultValue":"false","definedIn":"share/opto/c2_globals.hpp","deprecated":"","description":"Use Sparc RDPC instruction for the constant table base.","expired":"17","name":"UseRDPCForConstantTableBase","obsoleted":"16","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"gc","defaultValue":"true","definedIn":"share/gc/shared/gc_globals.hpp","deprecated":"","description":"Use semaphore synchronization for the GC Threads, \ninstead of synchronization based on mutexes","expired":"17","name":"UseSemaphoreGCThreadsSynchronization","obsoleted":"16","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Include miscellaneous runtime verifications in nmethod code; \ndefault off because it disturbs nmethod size heuristics","name":"VerifyCompiledCode","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","deprecated":"","description":"Verify bytecodes after RedefineClasses constant pool merging","expired":"17","name":"VerifyMergedCPBytecodes","obsoleted":"16","prefix":"-XX:","type":"bool"},
{"availability":"notproduct","component":"c2","defaultValue":"false","definedIn":"share/opto/c2_globals.hpp","description":"Check types of base addresses in field references","name":"VerifyOptoOopOffsets","prefix":"-XX:","type":"bool"}
]
}