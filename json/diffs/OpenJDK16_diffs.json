{"earlierVM": "OpenJDK15","laterVM": "OpenJDK16","added":[{"availability":"product","component":"c2","defaultValue":"-1","definedIn":"share/opto/c2_globals.hpp","description":"DIAGNOSTIC","name":"ArrayCopyPartialInlineSize","prefix":"-XX:","range":"range(-1, 64)","type":"intx"},{"availability":"product","component":"runtime","defaultValue":"1024","definedIn":"share/runtime/globals.hpp","description":"DIAGNOSTIC","name":"AvgMonitorsPerThreadEstimate","prefix":"-XX:","range":"range(0, max_jint)","type":"intx"},{"availability":"product","component":"runtime","defaultValue":"DIAGNOSTIC","definedIn":"share/runtime/globals.hpp","description":"Control intrinsics using a list of +/- (internal) names, separated by commas","name":"ControlIntrinsic","prefix":"-XX:","type":"ccstrlist"},{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"For testing purposes concurrent threads revert optimizations based on escape analysis at intervals given with DeoptimizeObjectsALotInterval=n. The thread count is given with DeoptimizeObjectsALotThreadCountSingle and DeoptimizeObjectsALotThreadCountAll.","name":"DeoptimizeObjectsALot","prefix":"-XX:","type":"bool"},{"availability":"develop","component":"runtime","defaultValue":"5","definedIn":"share/runtime/globals.hpp","description":"Interval for DeoptimizeObjectsALot.","name":"DeoptimizeObjectsALotInterval","prefix":"-XX:","range":"range(0, max_jlong)","type":"uint64_t"},{"availability":"develop","component":"runtime","defaultValue":"1","definedIn":"share/runtime/globals.hpp","description":"The number of threads that revert optimizations based on escape analysis for all threads if DeoptimizeObjectsALot is enabled.","name":"DeoptimizeObjectsALotThreadCountAll","prefix":"-XX:","range":"range(0, max_jint)","type":"int"},{"availability":"develop","component":"runtime","defaultValue":"1","definedIn":"share/runtime/globals.hpp","description":"The number of threads that revert optimizations based on escape analysis for a single thread if DeoptimizeObjectsALot is enabled. The target thread is selected round robin.","name":"DeoptimizeObjectsALotThreadCountSingle","prefix":"-XX:","range":"range(0, max_jint)","type":"int"},{"availability":"product","component":"runtime","defaultValue":"0","definedIn":"share/runtime/globals.hpp","description":"DIAGNOSTIC","name":"DiagnoseSyncOnValueBasedClasses","prefix":"-XX:","range":"range(0, 2)","type":"intx"},{"availability":"product","defaultValue":"false","definedIn":"os/linux/globals_linux.hpp","description":"DIAGNOSTIC","name":"DumpPerfMapAtExit","os":"linux","prefix":"-XX:","type":"bool"},{"availability":"product","component":"c2","defaultValue":"false","definedIn":"share/opto/c2_globals.hpp","description":"EXPERIMENTAL","name":"EnableVectorAggressiveReboxing","prefix":"-XX:","type":"bool"},{"availability":"product","component":"c2","defaultValue":"false","definedIn":"share/opto/c2_globals.hpp","description":"EXPERIMENTAL","name":"EnableVectorReboxing","prefix":"-XX:","type":"bool"},{"availability":"product","component":"c2","defaultValue":"false","definedIn":"share/opto/c2_globals.hpp","description":"EXPERIMENTAL","name":"EnableVectorSupport","prefix":"-XX:","type":"bool"},{"availability":"develop","component":"gc","defaultValue":"true","definedIn":"share/gc/g1/g1_globals.hpp","description":"Force use of evacuation failure handling during concurrent start evacuation pauses","name":"G1EvacuationFailureALotDuringConcurrentStart","prefix":"-XX:","type":"bool"},{"availability":"product","component":"c2","defaultValue":"false","definedIn":"share/opto/c2_globals.hpp","description":"DIAGNOSTIC","name":"IncrementalInlineForceCleanup","prefix":"-XX:","type":"bool"},{"availability":"product","component":"c2","defaultValue":"true","definedIn":"share/opto/c2_globals.hpp","description":"DIAGNOSTIC","name":"IncrementalInlineMH","prefix":"-XX:","type":"bool"},{"availability":"product","component":"c2","defaultValue":"true","definedIn":"share/opto/c2_globals.hpp","description":"DIAGNOSTIC","name":"IncrementalInlineVirtual","prefix":"-XX:","type":"bool"},{"availability":"product","component":"jvmci","defaultValue":"1","definedIn":"share/jvmci/jvmci_globals.hpp","description":"EXPERIMENTAL","name":"JVMCIEventLogLevel","prefix":"-XX:","range":"range(0, 4)","type":"intx"},{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"DIAGNOSTIC","name":"MetaspaceGuardAllocations","prefix":"-XX:","type":"bool"},{"availability":"product","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","description":"DIAGNOSTIC","name":"MetaspaceHandleDeallocations","prefix":"-XX:","type":"bool"},{"availability":"product","component":"runtime","defaultValue":"balanced","definedIn":"share/runtime/globals.hpp","description":"options: balanced, aggressive, none","name":"MetaspaceReclaimPolicy","prefix":"-XX:","type":"ccstr"},{"availability":"product","component":"runtime","defaultValue":"1000000","definedIn":"share/runtime/globals.hpp","description":"DIAGNOSTIC","name":"MonitorDeflationMax","prefix":"-XX:","range":"range(1024, max_jint)","type":"intx"},{"availability":"notproduct","component":"c2","defaultValue":"0","definedIn":"share/opto/c2_globals.hpp","description":"A depth threshold of ideal graph. Indentation is disabled when users attempt to dump an ideal graph deeper than it.","name":"PrintIdealIndentThreshold","prefix":"-XX:","type":"uintx"},{"availability":"product","component":"runtime","defaultValue":"0","definedIn":"share/runtime/globals.hpp","description":"DIAGNOSTIC","name":"RepeatCompilation","prefix":"-XX:","range":"range(0, max_jint)","type":"intx"},{"availability":"product","component":"gc","defaultValue":"0.5","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"EXPERIMENTAL","name":"ShenandoahAdaptiveDecayFactor","prefix":"-XX:","range":"range(0,1.0)","type":"double"},{"availability":"product","component":"gc","defaultValue":"1.8","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"EXPERIMENTAL","name":"ShenandoahAdaptiveInitialConfidence","prefix":"-XX:","type":"double"},{"availability":"product","component":"gc","defaultValue":"1.8","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"EXPERIMENTAL","name":"ShenandoahAdaptiveInitialSpikeThreshold","prefix":"-XX:","type":"double"},{"availability":"product","component":"gc","defaultValue":"10","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"EXPERIMENTAL","name":"ShenandoahAdaptiveSampleFrequencyHz","prefix":"-XX:","type":"uintx"},{"availability":"product","component":"gc","defaultValue":"10","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"EXPERIMENTAL","name":"ShenandoahAdaptiveSampleSizeSeconds","prefix":"-XX:","type":"uintx"},{"availability":"product","component":"c2","defaultValue":"false","definedIn":"share/opto/c2_globals.hpp","description":"DIAGNOSTIC","name":"StressIGVN","prefix":"-XX:","type":"bool"},{"availability":"develop","component":"c2","defaultValue":"0","definedIn":"share/opto/c2_globals.hpp","description":"if > 0, convert int counted loops to long counted loopsto stress handling of long counted loops: run inner loopfor at most jint_max / StressLongCountedLoop","name":"StressLongCountedLoop","prefix":"-XX:","range":"range(0, max_juint)","type":"uintx"},{"availability":"product","component":"c2","defaultValue":"0","definedIn":"share/opto/c2_globals.hpp","description":"DIAGNOSTIC","name":"StressSeed","prefix":"-XX:","range":"range(0, max_juint)","type":"uint"},{"availability":"product","cpu":"ppc","defaultValue":"false","definedIn":"cpu/ppc/globals_ppc.hpp","description":"DIAGNOSTIC","name":"UseByteReverseInstructions","prefix":"-XX:","type":"bool"},{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"DIAGNOSTIC","name":"UseCopySignIntrinsic","prefix":"-XX:","type":"bool"},{"availability":"notproduct","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Debugging Only: Adjust the VM to be more debugger-friendly. Turns on the other UseDebuggerErgo* flags","name":"UseDebuggerErgo","prefix":"-XX:","type":"bool"},{"availability":"notproduct","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Debugging Only: Enable workarounds for debugger induced os::processor_id() >= os::processor_count() problems","name":"UseDebuggerErgo1","prefix":"-XX:","type":"bool"},{"availability":"notproduct","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Debugging Only: Limit the number of spawned JVM threads","name":"UseDebuggerErgo2","prefix":"-XX:","type":"bool"},{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"DIAGNOSTIC","name":"UseMD5Intrinsics","prefix":"-XX:","type":"bool"},{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"DIAGNOSTIC","name":"UseSHA3Intrinsics","prefix":"-XX:","type":"bool"},{"availability":"product","cpu":"aarch64","defaultValue":"true","definedIn":"cpu/aarch64/globals_aarch64.hpp","description":"Use SIMD instructions for left/right shift of BigInteger","name":"UseSIMDForBigIntegerShiftIntrinsics","prefix":"-XX:","type":"bool"},{"availability":"product","cpu":"aarch64","defaultValue":"0","definedIn":"cpu/aarch64/globals_aarch64.hpp","description":"Highest supported SVE instruction set version","name":"UseSVE","prefix":"-XX:","range":"range(0, 2)","type":"uint"},{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"DIAGNOSTIC","name":"UseSignumIntrinsic","prefix":"-XX:","type":"bool"},{"availability":"product","component":"gc","defaultValue":"trueInDebug","definedIn":"share/gc/shared/gc_globals.hpp","description":"DIAGNOSTIC","name":"VerifyArchivedFields","prefix":"-XX:","type":"bool"},{"availability":"develop","component":"runtime","defaultValue":"false AARCH64_ONLY(DEBUG_ONLY(||true))","definedIn":"share/runtime/globals.hpp","description":"Mark all threads after a safepoint, and clear on a modify fence. Add cleanliness checks.","name":"VerifyCrossModifyFence","prefix":"-XX:","type":"bool"},{"availability":"product","component":"gc","defaultValue":"false","definedIn":"share/gc/z/z_globals.hpp","description":"DIAGNOSTIC","name":"ZStressRelocateInPlace","prefix":"-XX:","type":"bool"}],"removed":[{"availability":"experimental","component":"runtime","defaultValue":"NULL","definedIn":"share/runtime/globals.hpp","description":"Path to the directoy where a temporary file will be created to use as the backing store for old generation.File of size Xmx is pre-allocated for performance reason, sowe need that much space available","name":"AllocateOldGenAt","prefix":"-XX:","type":"ccstr"},{"availability":"diagnostic","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","description":"Deflate idle monitors using the ServiceThread.","name":"AsyncDeflateIdleMonitors","prefix":"-XX:","type":"bool"},{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","deprecation":"<span style=\"white-space:nowrap\">Obsoleted in JDK16<\/span><br><span style=\"white-space:nowrap\">Expired in JDK17<\/span>","description":"Set when executing debug methods in debug.cpp (to prevent triggering assertions)","name":"Debugging","prefix":"-XX:","type":"bool"},{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","deprecation":"<span style=\"white-space:nowrap\">Deprecated in JDK15<\/span><br><span style=\"white-space:nowrap\">Obsoleted in JDK16<\/span><br><span style=\"white-space:nowrap\">Expired in JDK17<\/span>","description":"(Deprecated) Force NUMA optimizations on single-node/UMA systems","name":"ForceNUMA","prefix":"-XX:","type":"bool"},{"availability":"develop","component":"gc","defaultValue":"true","definedIn":"share/gc/g1/g1_globals.hpp","description":"Force use of evacuation failure handling during initial mark evacuation pauses","name":"G1EvacuationFailureALotDuringInitialMark","prefix":"-XX:","type":"bool"},{"availability":"experimental","component":"gc","defaultValue":"10","definedIn":"share/gc/g1/g1_globals.hpp","description":"When heterogenous heap is enabled by AllocateOldGenAt option, after every GC, young gen is re-sized which involves system calls to commit/uncommit memory. To reduce these calls, we keep a buffer of extra regions to absorb small changes in young gen length. This flag takes the buffer size as an percentage of young gen length","name":"G1YoungExpansionBufferPercent","prefix":"-XX:","range":"range(0, 100)","type":"uintx"},{"availability":"product","component":"runtime","defaultValue":"NOT_LP64(2200*K) LP64_ONLY(4*M)","definedIn":"share/runtime/globals.hpp","deprecation":"<span style=\"white-space:nowrap\">Deprecated in JDK15<\/span><br><span style=\"white-space:nowrap\">Obsoleted in JDK16<\/span><br><span style=\"white-space:nowrap\">Expired in JDK17<\/span>","description":"(Deprecated) Initial size of the boot class loader data metaspace","name":"InitialBootClassLoaderMetaspaceSize","prefix":"-XX:","range":"range(30*K, max_uintx/BytesPerWord)","type":"size_t"},{"availability":"product","cpu":"ppc","defaultValue":"false","definedIn":"cpu/ppc/globals_ppc.hpp","description":"Insert EndGroup instructions to optimize for Power6.","name":"InsertEndGroupPPC64","prefix":"-XX:","type":"bool"},{"availability":"product","component":"c2","defaultValue":"true","definedIn":"share/opto/c2_globals.hpp","deprecation":"<span style=\"white-space:nowrap\">Obsoleted in JDK16<\/span><br><span style=\"white-space:nowrap\">Expired in JDK17<\/span>","description":"Insert memory barrier after arraycopy call","name":"InsertMemBarAfterArraycopy","prefix":"-XX:","type":"bool"},{"availability":"develop","component":"runtime","defaultValue":"50","definedIn":"share/runtime/globals.hpp","description":"Used with +TraceLongCompiles","name":"LongCompileThreshold","prefix":"-XX:","type":"intx"},{"availability":"develop","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","description":"Print VM messages on console","name":"PrintVMMessages","prefix":"-XX:","type":"bool"},{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","deprecation":"<span style=\"white-space:nowrap\">Deprecated in JDK15<\/span><br><span style=\"white-space:nowrap\">Obsoleted in JDK16<\/span><br><span style=\"white-space:nowrap\">Expired in JDK17<\/span>","description":"(Deprecated) Print out the waiting time in VM operation queue","name":"PrintVMQWaitTime","prefix":"-XX:","type":"bool"},{"availability":"develop","component":"runtime","defaultValue":"1024","definedIn":"share/runtime/globals.hpp","description":"Size in K to allocate for the Profile Nodes of each thread","name":"ProfilerNodeSize","prefix":"-XX:","range":"range(0, 1024)","type":"intx"},{"availability":"diagnostic","component":"gc","defaultValue":"2","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"Use this style to scan the code cache roots: 0 - sequential iterator; 1 - parallel iterator; 2 - parallel iterator with cset filters;","name":"ShenandoahCodeRootsStyle","prefix":"-XX:","type":"uintx"},{"availability":"diagnostic","component":"gc","defaultValue":"true","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"Do concurrent preclean phase before final mark: process definitely alive references to avoid dealing with them during pause.","name":"ShenandoahPreclean","prefix":"-XX:","type":"bool"},{"availability":"experimental","component":"gc","defaultValue":"5","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"Process process weak (soft, phantom, finalizers) references every Nth cycle. Normally affects concurrent GC cycles only, as degenerated and full GCs would try to process references regardless. Set to zero to disable reference processing completely.","name":"ShenandoahRefProcFrequency","prefix":"-XX:","type":"uintx"},{"availability":"notproduct","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Exercise register saving code in critical natives","name":"StressCriticalJNINatives","prefix":"-XX:","type":"bool"},{"availability":"notproduct","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Force scavenge when a derived pointer is detected on stack after rtm call","name":"StressDerivedPointers","prefix":"-XX:","type":"bool"},{"availability":"experimental","component":"runtime","defaultValue":"0","definedIn":"share/runtime/globals.hpp","description":"Default survivor space alignment in bytes","name":"SurvivorAlignmentInBytes","prefix":"-XX:","range":"range(8, 256)","type":"intx"},{"availability":"diagnostic","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","deprecation":"<span style=\"white-space:nowrap\">Obsoleted in JDK16<\/span><br><span style=\"white-space:nowrap\">Expired in JDK17<\/span>","description":"Trace JVMTI object tagging calls","name":"TraceJVMTIObjectTagging","prefix":"-XX:","type":"bool"},{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Print out every time compilation is longer than a given threshold","name":"TraceLongCompiles","prefix":"-XX:","type":"bool"},{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Trace profiling at the bytecode level during interpretation. This outputs the profiling information collected to improve jit compilation.","name":"TraceProfileInterpreter","prefix":"-XX:","type":"bool"},{"availability":"product","defaultValue":"true","definedIn":"os/bsd/globals_bsd.hpp","deprecation":"<span style=\"white-space:nowrap\">Obsoleted in JDK16<\/span><br><span style=\"white-space:nowrap\">Expired in JDK17<\/span>","description":"enable fast Bsd Posix clocks where available","name":"UseBsdPosixThreadCPUClocks","os":"bsd","prefix":"-XX:","type":"bool"},{"availability":"develop","component":"c2","defaultValue":"true","definedIn":"share/opto/c2_globals.hpp","description":"Use exact types to eliminate array store checks and v-calls","name":"UseExactTypes","prefix":"-XX:","type":"bool"},{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","deprecation":"<span style=\"white-space:nowrap\">Deprecated in JDK15<\/span><br><span style=\"white-space:nowrap\">Obsoleted in JDK16<\/span><br><span style=\"white-space:nowrap\">Expired in JDK17<\/span>","description":"(Deprecated) Use large page memory in metaspace. Only used if UseLargePages is enabled.","name":"UseLargePagesInMetaspace","prefix":"-XX:","type":"bool"},{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Use the original JNI name escaping scheme","name":"UseLegacyJNINameEscaping","prefix":"-XX:","type":"bool"},{"availability":"product","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","deprecation":"<span style=\"white-space:nowrap\">Deprecated in JDK15<\/span><br><span style=\"white-space:nowrap\">Obsoleted in JDK16<\/span><br><span style=\"white-space:nowrap\">Expired in JDK17<\/span>","description":"(Deprecated) Use new algorithm to compute field layouts","name":"UseNewFieldLayout","prefix":"-XX:","type":"bool"},{"availability":"product","cpu":"ppc","defaultValue":"false","definedIn":"cpu/ppc/globals_ppc.hpp","description":"Use Power6 Scheduler.","name":"UsePower6SchedulerPPC64","prefix":"-XX:","type":"bool"},{"availability":"product","component":"c2","defaultValue":"false","definedIn":"share/opto/c2_globals.hpp","deprecation":"<span style=\"white-space:nowrap\">Obsoleted in JDK16<\/span><br><span style=\"white-space:nowrap\">Expired in JDK17<\/span>","description":"Use Sparc RDPC instruction for the constant table base.","name":"UseRDPCForConstantTableBase","prefix":"-XX:","type":"bool"},{"availability":"diagnostic","component":"gc","defaultValue":"true","definedIn":"share/gc/shared/gc_globals.hpp","deprecation":"<span style=\"white-space:nowrap\">Obsoleted in JDK16<\/span><br><span style=\"white-space:nowrap\">Expired in JDK17<\/span>","description":"Use semaphore synchronization for the GC Threads, instead of synchronization based on mutexes","name":"UseSemaphoreGCThreadsSynchronization","prefix":"-XX:","type":"bool"},{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Include miscellaneous runtime verifications in nmethod code; default off because it disturbs nmethod size heuristics","name":"VerifyCompiledCode","prefix":"-XX:","type":"bool"},{"availability":"product","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","deprecation":"<span style=\"white-space:nowrap\">Obsoleted in JDK16<\/span><br><span style=\"white-space:nowrap\">Expired in JDK17<\/span>","description":"Verify bytecodes after RedefineClasses constant pool merging","name":"VerifyMergedCPBytecodes","prefix":"-XX:","type":"bool"},{"availability":"notproduct","component":"c2","defaultValue":"false","definedIn":"share/opto/c2_globals.hpp","description":"Check types of base addresses in field references","name":"VerifyOptoOopOffsets","prefix":"-XX:","type":"bool"}]}