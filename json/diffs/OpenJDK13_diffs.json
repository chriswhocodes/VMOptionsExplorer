{"earlierVM": "OpenJDK12",
"laterVM": "OpenJDK13",
"added":[{"availability":"diagnostic","cpu":"x86","defaultValue":"4096","definedIn":"cpu/x86/globals_x86.hpp","description":"Minimum array size in bytes to use AVX512 intrinsicsfor copy, inflate and fill. When this value is set as zerocompare operations can also use AVX512 intrinsics.","name":"AVX3Threshold","prefix":"-XX:","range":"range(0, max_jint)","type":"int"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","deprecated":"13","description":"(Deprecated) Allow redefinition to add and delete private static or final methods for compatibility with old releases","expired":"","name":"AllowRedefinitionToAddDeleteMethods","obsoleted":"","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"NULL","definedIn":"share/runtime/globals.hpp","description":"The path and name of the dynamic archive file","name":"ArchiveClassesAtExit","prefix":"-XX:","type":"ccstr"},
{"availability":"diagnostic","defaultValue":"true","definedIn":"os/linux/globals_linux.hpp","description":"If true, sets bit 3 of /proc/PID/coredump_filter, thus resulting in file-backed shared mappings of the process to be dumped into the corefile.","name":"DumpSharedMappingsInCore","os":"linux","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Dynamic archive","name":"DynamicDumpSharedSpaces","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"If true, error data is printed to stderr instead of a file","name":"ErrorFileToStderr","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"If true, error data is printed to stdout instead of a file","name":"ErrorFileToStdout","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"gc","defaultValue":"5","definedIn":"share/gc/shared/gc_globals.hpp","description":"Number of consecutive collections before gc time limit fires","name":"GCOverheadLimitThreshold","prefix":"-XX:","range":"range(1, max_uintx)","type":"uintx"},
{"availability":"diagnostic","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Generate a lot of handshakes. This works with GuaranteedSafepointInterval","name":"HandshakeALot","prefix":"-XX:","type":"bool"},
{"availability":"experimental","component":"jvmci","defaultValue":"NULL","definedIn":"share/jvmci/jvmci_globals.hpp","description":"Dumps to the given file a description of the classes, fields and methods the JVMCI shared library must provide","name":"JVMCILibDumpJNIConfig","prefix":"-XX:","type":"ccstr"},
{"availability":"experimental","component":"jvmci","defaultValue":"NULL","definedIn":"share/jvmci/jvmci_globals.hpp","description":"LD path for loading the JVMCI shared library","name":"JVMCILibPath","prefix":"-XX:","type":"ccstr"},
{"availability":"product","component":"gc","defaultValue":"0","definedIn":"share/gc/shared/gc_globals.hpp","description":"Minimum heap size (in bytes); zero means use ergonomics","name":"MinHeapSize","prefix":"-XX:","type":"size_t"},
{"availability":"diagnostic","component":"gc","defaultValue":"true","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"Turn on/off load-reference barriers in Shenandoah","name":"ShenandoahLoadRefBarrier","prefix":"-XX:","type":"bool"},
{"availability":"manageable","component":"gc","defaultValue":"0","definedIn":"share/gc/shared/gc_globals.hpp","description":"Soft limit for maximum heap size (in bytes)","name":"SoftMaxHeapSize","prefix":"-XX:","type":"size_t"},
{"availability":"experimental","component":"jvmci","defaultValue":"false","definedIn":"share/jvmci/jvmci_globals.hpp","description":"Execute JVMCI Java code from a shared library instead of loading it from class files and executing it on the HotSpot heap","name":"UseJVMCINativeLibrary","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Use the original JNI name escaping scheme","name":"UseLegacyJNINameEscaping","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"DEBUG_ONLY(500) NOT_DEBUG(0)","definedIn":"share/runtime/globals.hpp","description":"Run periodic metaspace verifications (0 - none, <br>1 - always, >1 every nth interval)","name":"VerifyMetaspaceInterval","prefix":"-XX:","type":"int"},
{"availability":"experimental","component":"gc","defaultValue":"true","definedIn":"share/gc/z/z_globals.hpp","description":"Uncommit unused memory","name":"ZUncommit","prefix":"-XX:","type":"bool"},
{"availability":"experimental","component":"gc","defaultValue":"5 * 60","definedIn":"share/gc/z/z_globals.hpp","description":"Uncommit memory if it has been unused for the specified amount of time (in seconds)","name":"ZUncommitDelay","prefix":"-XX:","type":"uintx"},
{"availability":"diagnostic","component":"gc","defaultValue":"false","definedIn":"share/gc/z/z_globals.hpp","description":"Verify objects","name":"ZVerifyObjects","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"gc","defaultValue":"trueInDebug","definedIn":"share/gc/z/z_globals.hpp","description":"Verify roots","name":"ZVerifyRoots","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"gc","defaultValue":"false","definedIn":"share/gc/z/z_globals.hpp","description":"Verify heap view accesses","name":"ZVerifyViews","prefix":"-XX:","type":"bool"}
],
"removed":[{"availability":"develop","component":"gc","defaultValue":"5","definedIn":"share/gc/shared/gc_globals.hpp","description":"Number of consecutive collections before gc time limit fires","name":"AdaptiveSizePolicyGCTimeLimitThreshold","prefix":"-XX:","range":"range(1, max_uintx)","type":"uintx"},
{"availability":"develop","component":"runtime","defaultValue":"-1","definedIn":"share/runtime/globals.hpp","description":"Fire OutOfMemoryErrors throughout CI for testing the compiler (non-negative value throws OOM after this many CI accesses in each compile)","name":"CIFireOOMAt","prefix":"-XX:","type":"intx"},
{"availability":"develop","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","description":"Delay invoking the compiler until main application class is loaded","name":"DelayCompilationDuringStartup","prefix":"-XX:","type":"bool"},
{"availability":"product","cpu":"aarch64","defaultValue":"true","definedIn":"cpu/aarch64/globals_aarch64.hpp","description":"tell sim not to invoke bccheck callback","name":"DisableBCCheck","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"8","definedIn":"share/runtime/globals.hpp","description":"Depth of hardwired instanceof accelerator array","name":"FastSuperclassLimit","prefix":"-XX:","type":"intx"},
{"availability":"develop","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","description":"Fill delay slots (on SPARC only)","name":"FillDelaySlots","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Suppress workaround for libthread GP fault","name":"IgnoreLibthreadGPFault","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","comment":"// only register window machines need this","cpu":"aarch64","defaultValue":"false","definedIn":"cpu/aarch64/globals_aarch64.hpp","deprecated":"","expired":"14","name":"NeedsDeoptSuspend","obsoleted":"13","prefix":"-XX:","type":"bool"},
{"availability":"product","cpu":"aarch64","defaultValue":"UseBuiltinSim","definedIn":"cpu/aarch64/globals_aarch64.hpp","description":"tell the AArch64 sim where we are in method code","name":"NotifySimulator","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","deprecated":"","description":"Print profiles for each interval (see ProfileIntervalsTicks)","expired":"14","name":"ProfileIntervals","obsoleted":"13","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"100","definedIn":"share/runtime/globals.hpp","deprecated":"","description":"Number of ticks between printing of interval profile (+ProfileIntervals)","expired":"14","name":"ProfileIntervalsTicks","obsoleted":"13","prefix":"-XX:","range":"range(0, max_intx)","type":"intx"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","deprecated":"","description":"Profile ticks that fall within VM (either in the VM Thread or VM code called through stubs)","expired":"14","name":"ProfileVM","obsoleted":"13","prefix":"-XX:","type":"bool"},
{"availability":"notproduct","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","deprecated":"","description":"Collect and print information on spacing of profiler ticks","expired":"14","name":"ProfilerCheckIntervals","obsoleted":"13","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"runtime","defaultValue":"25","definedIn":"share/runtime/globals.hpp","deprecated":"","description":"Number of compiled methods to show in profile","expired":"14","name":"ProfilerNumberOfCompiledMethods","obsoleted":"13","prefix":"-XX:","type":"intx"},
{"availability":"diagnostic","component":"runtime","defaultValue":"25","definedIn":"share/runtime/globals.hpp","deprecated":"","description":"Number of interpreted methods to show in profile","expired":"14","name":"ProfilerNumberOfInterpretedMethods","obsoleted":"13","prefix":"-XX:","type":"intx"},
{"availability":"diagnostic","component":"runtime","defaultValue":"25","definedIn":"share/runtime/globals.hpp","deprecated":"","description":"Number of runtime stub nodes to show in profile","expired":"14","name":"ProfilerNumberOfRuntimeStubNodes","obsoleted":"13","prefix":"-XX:","type":"intx"},
{"availability":"diagnostic","component":"runtime","defaultValue":"25","definedIn":"share/runtime/globals.hpp","deprecated":"","description":"Number of stub methods to show in profile","expired":"14","name":"ProfilerNumberOfStubMethods","obsoleted":"13","prefix":"-XX:","type":"intx"},
{"availability":"develop","component":"runtime","defaultValue":"15","definedIn":"share/runtime/globals.hpp","description":"Number of ticks in a PC buckets to be a hotspot","name":"ProfilerPCTickThreshold","prefix":"-XX:","type":"intx"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","deprecated":"","description":"Print bytecode statistics when dumping profiler output","expired":"14","name":"ProfilerPrintByteCodeStatistics","obsoleted":"13","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","deprecated":"","description":"Collect ticks for each 16 byte interval of compiled code","expired":"14","name":"ProfilerRecordPC","obsoleted":"13","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"aarch64","defaultValue":"true","definedIn":"cpu/aarch64/globals_aarch64.hpp","name":"ShareVtableStubs","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"gc","defaultValue":"true","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"Turn on/off acmp barriers in Shenandoah","name":"ShenandoahAcmpBarrier","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"gc","defaultValue":"false","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"Try to reuse after-barrier values to reduce register pressure","name":"ShenandoahDecreaseRegisterPressure","prefix":"-XX:","type":"bool"},
{"availability":"experimental","component":"gc","defaultValue":"true","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"Common 2 WriteBarriers or WriteBarrier and a ReadBarrier only if the resulting WriteBarrier isn't executed more frequently","name":"ShenandoahDontIncreaseWBFreq","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"gc","defaultValue":"true","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"Turn on/off read barriers in Shenandoah","name":"ShenandoahReadBarrier","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"gc","defaultValue":"true","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"Turn on/off store val read barriers in Shenandoah","name":"ShenandoahStoreValReadBarrier","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"gc","defaultValue":"true","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"Turn on/off write barriers in Shenandoah","name":"ShenandoahWriteBarrier","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Time the compilation policy","name":"TimeCompilationPolicy","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Time computation of bytecode liveness analysis","name":"TimeLivenessAnalysis","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Trace compilation policy","name":"TraceCompilationPolicy","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"jvmci","defaultValue":"false","definedIn":"share/jvmci/jvmci_globals.hpp","description":"Print message when a failed speculation was not collected","name":"TraceUncollectedSpeculations","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Tell whether the VM should use system time or a fake timer","name":"UseFakeTimers","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"c2","defaultValue":"true","definedIn":"share/opto/c2_globals.hpp","deprecated":"","description":"Mark well-known stable fields as such (e.g. String.value)","expired":"14","name":"UseImplicitStableValues","obsoleted":"13","prefix":"-XX:","type":"bool"},
{"availability":"product","cpu":"aarch64","defaultValue":"false","definedIn":"cpu/aarch64/globals_aarch64.hpp","description":"tell sim to cache memory updates until exclusive op occurs","name":"UseSimulatorCache","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Verify metaspace on chunk movements.","name":"VerifyMetaspace","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"gc","defaultValue":"true","definedIn":"share/gc/z/z_globals.hpp","description":"Apply load barrier optimizations","name":"ZOptimizeLoadBarriers","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"gc","defaultValue":"true","definedIn":"share/gc/z/z_globals.hpp","description":"Allow Java threads to stall and wait for GC to complete instead of immediately throwing an OutOfMemoryError","name":"ZStallOnOutOfMemory","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"gc","defaultValue":"false","definedIn":"share/gc/z/z_globals.hpp","description":"Unmap bad (inactive) heap views","name":"ZUnmapBadViews","prefix":"-XX:","type":"bool"}
]
}