{"earlierVM": "OpenJDK14",
"laterVM": "OpenJDK15",
"added":[{"availability":"diagnostic","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","description":"Deflate idle monitors using the ServiceThread.","name":"AsyncDeflateIdleMonitors","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"runtime","defaultValue":"250","definedIn":"share/runtime/globals.hpp","description":"Async deflate idle monitors every so many milliseconds when MonitorUsedDeflationThreshold is exceeded (0 is off).","name":"AsyncDeflationInterval","prefix":"-XX:","range":"range(0, max_jint)","type":"intx"},
{"availability":"product","component":"c1","defaultValue":"10","definedIn":"share/c1/c1_globals.hpp","description":"inlining only allowed for methods which don't exceed this number of expression stack and local slots","name":"C1InlineStackLimit","prefix":"-XX:","range":"range(0, max_jint)","type":"intx"},
{"availability":"product","component":"c1","defaultValue":"9","definedIn":"share/c1/c1_globals.hpp","description":"The maximum number of nested calls that are inlined by C1","name":"C1MaxInlineLevel","prefix":"-XX:","range":"range(0, max_jint)","type":"intx"},
{"availability":"product","component":"c1","defaultValue":"35","definedIn":"share/c1/c1_globals.hpp","description":"The maximum bytecode size of a method to be inlined by C1","name":"C1MaxInlineSize","prefix":"-XX:","range":"range(0, max_jint)","type":"intx"},
{"availability":"product","component":"c1","defaultValue":"1","definedIn":"share/c1/c1_globals.hpp","description":"maximum number of nested recursive calls that are inlined by C1","name":"C1MaxRecursiveInlineLevel","prefix":"-XX:","range":"range(0, max_jint)","type":"intx"},
{"availability":"product","component":"c1","defaultValue":"6","definedIn":"share/c1/c1_globals.hpp","description":"The maximum bytecode size of a trivial method to be inlined by C1","name":"C1MaxTrivialSize","prefix":"-XX:","range":"range(0, max_jint)","type":"intx"},
{"availability":"diagnostic","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Make nmethod barriers deoptimise a lot.","name":"DeoptimizeNMethodBarriersALot","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"c2","defaultValue":"false","definedIn":"share/opto/c2_globals.hpp","description":"Do not use subtype check macro node","name":"ExpandSubTypeCheckAtParseTime","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","cpu":"x86","defaultValue":"true","definedIn":"cpu/x86/globals_x86.hpp","description":"Turn off JVM mitigations related to Intel micro code mitigations for the Intel JCC erratum","name":"IntelJccErratumMitigation","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"0.5","definedIn":"share/runtime/globals.hpp","description":"Threshold controlling when code cache sweeper is invoked.Value is percentage of ReservedCodeCacheSize.","name":"SweeperThreshold","prefix":"-XX:","range":"range(0.0, 100.0)","type":"double"},
{"availability":"product","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","description":"Allow allocating fields in empty slots of super-classes","name":"UseEmptySlotsInSupers","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Use the original JNI name escaping scheme","name":"UseLegacyJNINameEscaping","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","deprecated":"15","description":"(Deprecated) Use new algorithm to compute field layouts","expired":"17","name":"UseNewFieldLayout","obsoleted":"16","prefix":"-XX:","type":"bool"},
{"availability":"product","cpu":"ppc","defaultValue":"false","definedIn":"cpu/ppc/globals_ppc.hpp","description":"Use Power9 xxbr* vector byte reverse instructions.","name":"UseVectorByteReverseInstructionsPPC64","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"c2","defaultValue":"true","definedIn":"share/opto/c2_globals.hpp","description":"Use ternary macro logic instructions","name":"UseVectorMacroLogic","prefix":"-XX:","type":"bool"}
],
"removed":[{"availability":"product","cpu":"sparc","defaultValue":"0","definedIn":"cpu/sparc/globals_sparc.hpp","description":"Distance to prefetch destination array in arraycopy","name":"ArraycopyDstPrefetchDistance","prefix":"-XX:","type":"uintx"},
{"availability":"product","cpu":"sparc","defaultValue":"0","definedIn":"cpu/sparc/globals_sparc.hpp","description":"Distance to prefetch source array in arraycopy","name":"ArraycopySrcPrefetchDistance","prefix":"-XX:","type":"uintx"},
{"availability":"product","cpu":"sparc","defaultValue":"2048","definedIn":"cpu/sparc/globals_sparc.hpp","description":"Minimum size in bytes when block copy will be used","name":"BlockCopyLowLimit","prefix":"-XX:","range":"range(1, max_jint)","type":"intx"},
{"availability":"product","component":"c2","defaultValue":"false","definedIn":"share/opto/c2_globals.hpp","deprecated":"","description":"Use Sparc V9 branch-on-register opcodes","expired":"16","name":"BranchOnRegister","obsoleted":"15","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","deprecated":"14","description":"(Deprecated) Allocate nonstatic fields in gaps between previous fields","expired":"16","name":"CompactFields","obsoleted":"15","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"1","definedIn":"share/runtime/globals.hpp","deprecated":"14","description":"(Deprecated) 0 - type based with oops first, <br>1 - with oops last, <br>2 - oops in super and sub classes are together","expired":"16","name":"FieldsAllocationStyle","obsoleted":"15","prefix":"-XX:","range":"range(0, 2)","type":"intx"},
{"availability":"diagnostic","component":"gc","defaultValue":"false","definedIn":"share/gc/shared/gc_globals.hpp","description":"Force dynamic selection of the number of parallel threads parallel gc will use to aid debugging","name":"ForceDynamicNumberOfGCThreads","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"gc","defaultValue":"64","definedIn":"share/gc/g1/g1_globals.hpp","deprecated":"14","description":"Size of a work unit of cards claimed by a worker threadduring RSet scanning.","expired":"16","name":"G1RSetScanBlockSize","obsoleted":"15","prefix":"-XX:","range":"range(1, max_uintx)","type":"size_t"},
{"availability":"define_pd_global","cpu":"aarch64","defaultValue":"false","definedIn":"cpu/aarch64/c1_globals_aarch64.hpp","deprecated":"","expired":"16","name":"LIRFillDelaySlots","obsoleted":"15","prefix":"-XX:","type":"bool"},
{"availability":"experimental","component":"jvmci","defaultValue":"0","definedIn":"share/jvmci/jvmci_globals.hpp","description":"Number of methods to record in call profile","name":"MethodProfileWidth","prefix":"-XX:","type":"intx"},
{"availability":"product","component":"runtime","defaultValue":"0","definedIn":"share/runtime/globals.hpp","deprecated":"14","description":"(Deprecated) Bound Monitor population","expired":"16","name":"MonitorBound","obsoleted":"15","prefix":"-XX:","range":"range(0, max_jint)","type":"intx"},
{"availability":"define_pd_global","cpu":"aarch64","defaultValue":"true","definedIn":"cpu/aarch64/c1_globals_aarch64.hpp","name":"RoundFPResults","prefix":"-XX:","type":"bool"},
{"availability":"experimental","component":"gc","defaultValue":"false","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"Run control thread runs at critical scheduling priority.","name":"ShenandoahCriticalControlThreadPriority","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"gc","defaultValue":"true","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"Optimize barriers on static final fields. Turn it off for maximum compatibility with reflection or JNI code that manipulates final fields.","name":"ShenandoahOptimizeStaticFinals","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"c2","defaultValue":"true","definedIn":"share/opto/c2_globals.hpp","description":"Assume Sparc V9 I&L registers on V8+ systems are zero-extended","name":"SparcV9RegsHiBitsZero","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","deprecated":"","description":"trace internal invoke dynamic operations","expired":"17","name":"TraceInvokeDynamic","obsoleted":"16","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","deprecated":"","description":"trace internal method handle operations","expired":"17","name":"TraceMethodHandles","obsoleted":"16","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"gc","defaultValue":"false","definedIn":"share/gc/parallel/parallel_globals.hpp","description":"Trace dense prefix computation for ParallelOldGC","name":"TraceParallelOldGCDensePrefix","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"gc","defaultValue":"false","definedIn":"share/gc/parallel/parallel_globals.hpp","description":"Trace marking phase in ParallelOldGC","name":"TraceParallelOldGCMarkingPhase","prefix":"-XX:","type":"bool"},
{"availability":"product","cpu":"ppc","defaultValue":"true","definedIn":"cpu/ppc/globals_ppc.hpp","description":"Raise and handle SIGTRAP if calling not entrant or zombie method.","name":"TrapBasedNotEntrantChecks","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"c2","defaultValue":"true","definedIn":"share/opto/c2_globals.hpp","description":"use FP instructions that produce 24-bit precise results","name":"Use24BitFP","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"c2","defaultValue":"true","definedIn":"share/opto/c2_globals.hpp","description":"Set 24-bit FPU mode on a per-compile basis","name":"Use24BitFPMode","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"gc","defaultValue":"false","definedIn":"share/gc/shared/gc_globals.hpp","deprecated":"","description":"Allow young-old boundary to move","expired":"16","name":"UseAdaptiveGCBoundary","obsoleted":"15","prefix":"-XX:","type":"bool"},
{"availability":"product","cpu":"aarch64","defaultValue":"false","definedIn":"cpu/aarch64/globals_aarch64.hpp","deprecated":"","description":"Use memory barriers to implement volatile accesses","expired":"16","name":"UseBarriersForVolatile","obsoleted":"15","prefix":"-XX:","type":"bool"},
{"availability":"product","cpu":"sparc","defaultValue":"false","definedIn":"cpu/sparc/globals_sparc.hpp","description":"Use special cpu instructions for block copy","name":"UseBlockCopy","prefix":"-XX:","type":"bool"},
{"availability":"develop","cpu":"sparc","defaultValue":"false","definedIn":"cpu/sparc/globals_sparc.hpp","description":"Do not use swap instructions, but only CAS (in a loop) on SPARC","name":"UseCASForSwap","prefix":"-XX:","type":"bool"},
{"availability":"product","cpu":"sparc","defaultValue":"false","definedIn":"cpu/sparc/globals_sparc.hpp","description":"Use compare and branch instruction on SPARC","name":"UseCBCond","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","description":"Use detached threads that are recycled upon termination (for Solaris only)","name":"UseDetachedThreads","prefix":"-XX:","type":"bool"},
{"availability":"product","defaultValue":"true","definedIn":"os/solaris/globals_solaris.hpp","description":"Enable workaround for limitations of stdio FILE structure","name":"UseExtendedFileIO","os":"solaris","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","deprecated":"","description":"Use LWP-based instead of libthread-based synchronization (SPARC only)","expired":"16","name":"UseLWPSynchronization","obsoleted":"15","prefix":"-XX:","type":"bool"},
{"availability":"product","cpu":"sparc","defaultValue":"false","definedIn":"cpu/sparc/globals_sparc.hpp","description":"Use multi-precision multiply instruction (mpmul) on SPARC","name":"UseMPMUL","prefix":"-XX:","type":"bool"},
{"availability":"product","cpu":"sparc","defaultValue":"false","definedIn":"cpu/sparc/globals_sparc.hpp","description":"Use Niagara-efficient instruction subset","name":"UseNiagaraInstrs","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"gc","defaultValue":"true","definedIn":"share/gc/shared/gc_globals.hpp","description":"Use Optimized Work Stealing Threads task termination protocol","name":"UseOWSTTaskTerminator","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"gc","defaultValue":"false","definedIn":"share/gc/shared/gc_globals.hpp","deprecated":"14","description":"Use the Parallel or Serial garbage collector when collecting the old generation. Deprecated.","expired":"16","name":"UseParallelOldGC","obsoleted":"15","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Use pthread-based instead of libthread-based synchronization (SPARC only)","name":"UsePthreads","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","description":"use strict fp if modifier strictfp is set","name":"UseStrictFP","prefix":"-XX:","type":"bool"},
{"availability":"product","cpu":"sparc","defaultValue":"99","definedIn":"cpu/sparc/globals_sparc.hpp","description":"Highest supported VIS instructions set on SPARC","name":"UseVIS","prefix":"-XX:","range":"range(0, 99)","type":"intx"},
{"availability":"experimental","component":"gc","defaultValue":"NULL","definedIn":"share/gc/z/z_globals.hpp","description":"Filesystem path for Java heap backing storage (must be a tmpfs or a hugetlbfs filesystem)","name":"ZPath","prefix":"-XX:","type":"ccstr"}
]
}