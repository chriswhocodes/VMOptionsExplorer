{ "switches" : [ {"availability":"experimental","component":"runtime","defaultValue":"NULL","definedIn":"share/runtime/globals.hpp","description":"AOT library","name":"AOTLibrary","prefix":"-XX:","type":"ccstrlist"},
{"availability":"diagnostic","cpu":"x86","defaultValue":"4096","definedIn":"cpu/x86/globals_x86.hpp","description":"Minimum array size in bytes to use AVX512 intrinsics\nfor copy, inflate and fill. When this value is set as zero\ncompare operations can also use AVX512 intrinsics.","name":"AVX3Threshold","prefix":"-XX:","range":"range(0, max_jint)","type":"int"},
{"availability":"diagnostic","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Abort VM when method had failed to compile.","name":"AbortVMOnCompilationFailure","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"runtime","defaultValue":"NULL","definedIn":"share/runtime/globals.hpp","description":"Call fatal if the exception pointed by AbortVMOnException \nhas this message","name":"AbortVMOnExceptionMessage","prefix":"-XX:","type":"ccstr"},
{"availability":"diagnostic","component":"runtime","defaultValue":"NULL","definedIn":"share/runtime/globals.hpp","description":"Call fatal if this exception is thrown. Example: \njava -XX:AbortVMOnException=java.lang.NullPointerException Foo","name":"AbortVMOnException","prefix":"-XX:","type":"ccstr"},
{"availability":"diagnostic","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Abort upon failure to reach safepoint (see SafepointTimeout)","name":"AbortVMOnSafepointTimeout","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"runtime","defaultValue":"1000","definedIn":"share/runtime/globals.hpp","description":"Delay in milliseconds for option AbortVMOnVMOperationTimeout","name":"AbortVMOnVMOperationTimeoutDelay","prefix":"-XX:","range":"range(0, max_intx)","type":"intx"},
{"availability":"diagnostic","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Abort upon failure to complete VM operation promptly","name":"AbortVMOnVMOperationTimeout","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"gc","defaultValue":"-1","definedIn":"share/gc/shared/gc_globals.hpp","description":"Specify the CPU count the VM should use and report as active","name":"ActiveProcessorCount","prefix":"-XX:","type":"int"},
{"availability":"product","component":"gc","defaultValue":"4","definedIn":"share/gc/shared/gc_globals.hpp","description":"Adaptive size scale down factor for shrinking","name":"AdaptiveSizeDecrementScaleFactor","prefix":"-XX:","range":"range(1, max_uintx)","type":"uintx"},
{"availability":"product","component":"gc","defaultValue":"10","definedIn":"share/gc/shared/gc_globals.hpp","description":"Time scale over which major costs decay","name":"AdaptiveSizeMajorGCDecayTimeScale","prefix":"-XX:","range":"range(0, max_uintx)","type":"uintx"},
{"availability":"product","component":"gc","defaultValue":"50","definedIn":"share/gc/shared/gc_globals.hpp","description":"If collection costs are within margin, reduce both by full \ndelta","name":"AdaptiveSizePolicyCollectionCostMargin","prefix":"-XX:","range":"range(0, 100)","type":"uintx"},
{"availability":"develop","component":"gc","defaultValue":"5","definedIn":"share/gc/shared/gc_globals.hpp","description":"Number of consecutive collections before gc time limit fires","name":"AdaptiveSizePolicyGCTimeLimitThreshold","prefix":"-XX:","range":"range(1, max_uintx)","type":"uintx"},
{"availability":"product","component":"gc","defaultValue":"20","definedIn":"share/gc/shared/gc_globals.hpp","description":"Number of steps where heuristics is used before data is used","name":"AdaptiveSizePolicyInitializingSteps","prefix":"-XX:","range":"range(0, max_uintx)","type":"uintx"},
{"availability":"product","component":"gc","defaultValue":"0","definedIn":"share/gc/shared/gc_globals.hpp","description":"Collection interval for printing information; zero means never","name":"AdaptiveSizePolicyOutputInterval","prefix":"-XX:","range":"range(0, max_uintx)","type":"uintx"},
{"availability":"develop","component":"gc","defaultValue":"5","definedIn":"share/gc/shared/gc_globals.hpp","description":"Number of collections before the adaptive sizing is started","name":"AdaptiveSizePolicyReadyThreshold","prefix":"-XX:","type":"uintx"},
{"availability":"product","component":"gc","defaultValue":"10","definedIn":"share/gc/shared/gc_globals.hpp","description":"Weight given to exponential resizing, between 0 and 100","name":"AdaptiveSizePolicyWeight","prefix":"-XX:","range":"range(0, 100)","type":"uintx"},
{"availability":"product","component":"gc","defaultValue":"0","definedIn":"share/gc/shared/gc_globals.hpp","description":"Policy for changing generation size for throughput goals","name":"AdaptiveSizeThroughPutPolicy","prefix":"-XX:","range":"range(0, 1)","type":"uintx"},
{"availability":"product","component":"gc","defaultValue":"25","definedIn":"share/gc/shared/gc_globals.hpp","description":"Weight given to time in adaptive policy, between 0 and 100","name":"AdaptiveTimeWeight","prefix":"-XX:","range":"range(0, 100)","type":"uintx"},
{"availability":"product","component":"gc","defaultValue":"false","definedIn":"share/gc/shared/gc_globals.hpp","description":"Optimize heap options for long-running memory intensive apps","name":"AggressiveHeap","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","deprecated":"11","description":"(Deprecated) Enable aggressive optimizations - see arguments.cpp","expired":"13","name":"AggressiveOpts","obsoleted":"12","prefix":"-XX:","type":"bool"},
{"availability":"experimental","component":"c2","defaultValue":"false","definedIn":"share/opto/c2_globals.hpp","description":"Control optimizations for aggressive boxing elimination","name":"AggressiveUnboxing","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"c2","defaultValue":"3","definedIn":"share/opto/c2_globals.hpp","description":"0 for no aliasing, 1 for oop/field/static/array split, \n\n2 for class split, 3 for unique instances","name":"AliasLevel","prefix":"-XX:","range":"range(0, 3)","type":"intx"},
{"availability":"product","component":"c2","defaultValue":"true","definedIn":"share/opto/c2_globals.hpp","description":"Perform vector store/load alignment in loop","name":"AlignVector","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"NULL","definedIn":"share/runtime/globals.hpp","description":"Path to the directoy where a temporary file will be created \nto use as the backing store for Java Heap.","name":"AllocateHeapAt","prefix":"-XX:","type":"ccstr"},
{"availability":"product","component":"runtime","defaultValue":"1","definedIn":"share/runtime/globals.hpp","description":"Number of lines to prefetch ahead of instance allocation \npointer","name":"AllocateInstancePrefetchLines","prefix":"-XX:","range":"range(1, 64)","type":"intx"},
{"availability":"product","component":"runtime","defaultValue":"-1","definedIn":"share/runtime/globals.hpp","description":"Distance to prefetch ahead of allocation pointer. \n-1: use system-specific value (automatically determined","name":"AllocatePrefetchDistance","prefix":"-XX:","type":"intx"},
{"availability":"product","component":"runtime","defaultValue":"0","definedIn":"share/runtime/globals.hpp","description":"Select instruction to prefetch ahead of allocation pointer","name":"AllocatePrefetchInstr","prefix":"-XX:","type":"intx"},
{"availability":"product","component":"runtime","defaultValue":"3","definedIn":"share/runtime/globals.hpp","description":"Number of lines to prefetch ahead of array allocation pointer","name":"AllocatePrefetchLines","prefix":"-XX:","range":"range(1, 64)","type":"intx"},
{"availability":"product","component":"runtime","defaultValue":"16","definedIn":"share/runtime/globals.hpp","description":"Step size in bytes of sequential prefetch instructions","name":"AllocatePrefetchStepSize","prefix":"-XX:","range":"range(1, 512)","type":"intx"},
{"availability":"product","component":"runtime","defaultValue":"1","definedIn":"share/runtime/globals.hpp","description":"0 = no prefetch, \n\n1 = generate prefetch instructions for each allocation, \n\n2 = use TLAB watermark to gate allocation prefetch, \n\n3 = generate one prefetch instruction per cache line","name":"AllocatePrefetchStyle","prefix":"-XX:","range":"range(0, 3)","type":"intx"},
{"availability":"product","defaultValue":"false","definedIn":"os/aix/globals_aix.hpp","description":"Allow VM to run with EXTSHM=ON.","name":"AllowExtshm","os":"aix","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","deprecated":"13","description":"Allow JNIEnv proxies for jdbx","expired":"15","name":"AllowJNIEnvProxy","obsoleted":"14","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","deprecated":"11","description":"Obey the ACC_SUPER flag and allow invokenonvirtual calls","expired":"13","name":"AllowNonVirtualCalls","obsoleted":"12","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Allow parallel defineClass requests for class loaders \nregistering as parallel capable","name":"AllowParallelDefineClass","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Do not complain if the application installs signal handlers \n(Solaris & Linux only)","name":"AllowUserSignalHandlers","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"c2","defaultValue":"true","definedIn":"share/opto/c2_globals.hpp","description":"Globally supress vectorization set in VectorizeMethod","name":"AllowVectorizeOnDemand","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"gc","defaultValue":"false","definedIn":"share/gc/shared/gc_globals.hpp","description":"Always act like a server-class machine","name":"AlwaysActAsServerClassMachine","prefix":"-XX:","type":"bool"},
{"availability":"experimental","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Accesses to all variables should always be atomic","name":"AlwaysAtomicAccesses","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"When using recompilation, never interpret methods \ncontaining loops","name":"AlwaysCompileLoopMethods","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"c2","defaultValue":"false","definedIn":"share/opto/c2_globals.hpp","description":"do all inlining incrementally","name":"AlwaysIncrementalInline","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","deprecated":"17","description":"Require the VM to acquire the class loader lock before calling \nloadClass() even for class loaders registering \nas parallel capable","expired":"19","name":"AlwaysLockClassLoader","obsoleted":"18","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"gc","defaultValue":"false","definedIn":"share/gc/shared/gc_globals.hpp","description":"Force all freshly committed pages to be pre-touched","name":"AlwaysPreTouch","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Restore the FPU control word after every JNI call (expensive)","name":"AlwaysRestoreFPU","prefix":"-XX:","type":"bool"},
{"availability":"experimental","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Force safe construction, as if all fields are final.","name":"AlwaysSafeConstructors","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"gc","defaultValue":"false","definedIn":"share/gc/shared/gc_globals.hpp","description":"Always tenure objects in eden (ParallelGC only)","name":"AlwaysTenure","prefix":"-XX:","type":"bool"},
{"availability":"experimental","component":"runtime","defaultValue":"SOLARIS_ONLY(64*K) NOT_SOLARIS((size_t)-1)","definedIn":"share/runtime/globals.hpp","description":"Allocation less than this value will be allocated \nusing malloc. Larger allocations will use mmap.","name":"ArrayAllocatorMallocLimit","prefix":"-XX:","type":"size_t"},
{"availability":"product","component":"c2","defaultValue":"8","definedIn":"share/opto/c2_globals.hpp","description":"Maximum number of arraycopy elements inlined as a sequence of\nloads/stores","name":"ArrayCopyLoadStoreMaxElem","prefix":"-XX:","range":"range(0, max_intx)","type":"intx"},
{"availability":"product","cpu":"sparc","defaultValue":"0","definedIn":"cpu/sparc/globals_sparc.hpp","description":"Distance to prefetch destination array in arraycopy","name":"ArraycopyDstPrefetchDistance","prefix":"-XX:","type":"uintx"},
{"availability":"product","cpu":"sparc","defaultValue":"0","definedIn":"cpu/sparc/globals_sparc.hpp","description":"Distance to prefetch source array in arraycopy","name":"ArraycopySrcPrefetchDistance","prefix":"-XX:","type":"uintx"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","deprecated":"","description":"Assert/Guarantee on external suspend wait failure","expired":"18","name":"AssertOnSuspendWaitFailure","obsoleted":"17","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"c1","defaultValue":"false","definedIn":"share/c1/c1_globals.hpp","description":"Assert Range Check Elimination","name":"AssertRangeCheckElimination","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","deprecated":"10","description":"(Deprecated) Instruct the VM to assume multiple processors are available","expired":"13","name":"AssumeMP","obsoleted":"12","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"c2","defaultValue":"128","definedIn":"share/opto/c2_globals.hpp","description":"Sets max value cached by the java.lang.Integer autobox cache","name":"AutoBoxCacheMax","prefix":"-XX:","range":"range(0, max_jint)","type":"intx"},
{"availability":"product","cpu":"aarch64","defaultValue":"false","definedIn":"cpu/aarch64/globals_aarch64.hpp","description":"Avoid generating unaligned memory accesses","name":"AvoidUnalignedAccesses","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"0","definedIn":"share/runtime/globals.hpp","description":"How much tracing to do of bytecode escape analysis estimates \n(0-3)","name":"BCEATraceLevel","prefix":"-XX:","range":"range(0, 3)","type":"intx"},
{"availability":"define_pd_global","cpu":"aarch64","defaultValue":"true","definedIn":"cpu/aarch64/c1_globals_aarch64.hpp","name":"BackgroundCompilation","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"arm","defaultValue":"true","definedIn":"cpu/arm/c2_globals_arm.hpp","name":"BackgroundCompilation","prefix":"-XX:","type":"bool"},
{"availability":"product_pd","component":"runtime","definedIn":"share/runtime/globals.hpp","description":"A thread requesting compilation is not blocked during \ncompilation","name":"BackgroundCompilation","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"ppc","defaultValue":"true","definedIn":"cpu/ppc/c1_globals_ppc.hpp","name":"BackgroundCompilation","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"s390","defaultValue":"true","definedIn":"cpu/s390/c2_globals_s390.hpp","name":"BackgroundCompilation","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"sparc","defaultValue":"true","definedIn":"cpu/sparc/c1_globals_sparc.hpp","name":"BackgroundCompilation","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"x86","defaultValue":"true","definedIn":"cpu/x86/c1_globals_x86.hpp","name":"BackgroundCompilation","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"c1","defaultValue":"false","definedIn":"share/c1/c1_globals.hpp","description":"bailout of compilation after building of HIR","name":"BailoutAfterHIR","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"c1","defaultValue":"false","definedIn":"share/c1/c1_globals.hpp","description":"bailout of compilation after building of LIR","name":"BailoutAfterLIR","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"c1","defaultValue":"false","definedIn":"share/c1/c1_globals.hpp","description":"bailout of compilation for methods with exception handlers","name":"BailoutOnExceptionHandlers","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"c2","defaultValue":"false","definedIn":"share/opto/c2_globals.hpp","description":"Compiled methods which throws/catches exceptions will be \ndeopt and intp.","name":"BailoutToInterpreterForThrows","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"gc","defaultValue":"256*M","definedIn":"share/gc/shared/gc_globals.hpp","description":"Estimate of footprint other than Java Heap","name":"BaseFootPrintEstimate","prefix":"-XX:","range":"range(0, max_uintx)","type":"size_t"},
{"availability":"develop","component":"runtime","defaultValue":"2","definedIn":"share/runtime/globals.hpp","description":"Number of return bci's to record in ret profile","name":"BciProfileWidth","prefix":"-XX:","type":"intx"},
{"availability":"product","component":"runtime","defaultValue":"20","definedIn":"share/runtime/globals.hpp","deprecated":"15","description":"Threshold of number of revocations per type to try to \nrebias all objects in the heap of that type","expired":"19","name":"BiasedLockingBulkRebiasThreshold","obsoleted":"18","prefix":"-XX:","range":"range(0, max_intx)","type":"intx"},
{"availability":"product","component":"runtime","defaultValue":"40","definedIn":"share/runtime/globals.hpp","deprecated":"15","description":"Threshold of number of revocations per type to permanently \nrevoke biases of all objects in the heap of that type","expired":"19","name":"BiasedLockingBulkRevokeThreshold","obsoleted":"18","prefix":"-XX:","range":"range(0, max_intx)","type":"intx"},
{"availability":"product","component":"runtime","defaultValue":"25000","definedIn":"share/runtime/globals.hpp","deprecated":"15","description":"Decay time (in milliseconds) to re-enable bulk rebiasing of a \ntype after previous bulk rebias","expired":"19","name":"BiasedLockingDecayTime","obsoleted":"18","prefix":"-XX:","range":"range(500, max_intx)","type":"intx"},
{"availability":"product","component":"runtime","defaultValue":"0","definedIn":"share/runtime/globals.hpp","deprecated":"15","description":"Number of milliseconds to wait before enabling biased locking","expired":"19","name":"BiasedLockingStartupDelay","obsoleted":"18","prefix":"-XX:","range":"range(0, (intx)(max_jint-(max_jint%PeriodicTask::interval_gran)))","type":"intx"},
{"availability":"develop","component":"runtime","defaultValue":"5","definedIn":"share/runtime/globals.hpp","description":"Minimal number of lookupswitch entries for rewriting to binary \nswitch","name":"BinarySwitchThreshold","prefix":"-XX:","type":"intx"},
{"availability":"diagnostic","component":"gc","defaultValue":"false","definedIn":"share/gc/cms/cms_globals.hpp","description":"Bind CMS Thread to CPU if possible","name":"BindCMSThreadToCPU","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"gc","defaultValue":"false","definedIn":"share/gc/shared/gc_globals.hpp","deprecated":"","description":"Bind GCTaskThreads to CPUs if possible","expired":"16","name":"BindGCTaskThreadsToCPUs","obsoleted":"14","prefix":"-XX:","type":"bool"},
{"availability":"product","cpu":"sparc","defaultValue":"2048","definedIn":"cpu/sparc/globals_sparc.hpp","description":"Minimum size in bytes when block copy will be used","name":"BlockCopyLowLimit","prefix":"-XX:","range":"range(1, max_jint)","type":"intx"},
{"availability":"product","component":"c2","defaultValue":"true","definedIn":"share/opto/c2_globals.hpp","description":"Use edge frequencies to drive block ordering","name":"BlockLayoutByFrequency","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"c2","defaultValue":"20","definedIn":"share/opto/c2_globals.hpp","description":"Miniumum %% of a successor (predecessor) for which block \nlayout a will allow a fork (join) in a single chain","name":"BlockLayoutMinDiamondPercentage","prefix":"-XX:","range":"range(0, 100)","type":"intx"},
{"availability":"product","component":"c2","defaultValue":"true","definedIn":"share/opto/c2_globals.hpp","description":"Allow back branches to be fall throughs in the block layout","name":"BlockLayoutRotateLoops","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"gc","defaultValue":"false","definedIn":"share/gc/shared/gc_globals.hpp","description":"Maintain _unallocated_block in BlockOffsetArray \n(currently applicable only to CMS collector)","name":"BlockOffsetArrayUseUnallocatedBlock","prefix":"-XX:","type":"bool"},
{"availability":"product","cpu":"aarch64","defaultValue":"256","definedIn":"cpu/aarch64/globals_aarch64.hpp","description":"Minimum size in bytes when block zeroing will be used","name":"BlockZeroingLowLimit","prefix":"-XX:","range":"range(1, max_jint)","type":"intx"},
{"availability":"product","cpu":"sparc","defaultValue":"2048","definedIn":"cpu/sparc/globals_sparc.hpp","description":"Minimum size in bytes when block zeroing will be used","name":"BlockZeroingLowLimit","prefix":"-XX:","range":"range(1, max_jint)","type":"intx"},
{"availability":"experimental","component":"jvmci","defaultValue":"false","definedIn":"share/jvmci/jvmci_globals.hpp","description":"Bootstrap JVMCI before running Java main method","name":"BootstrapJVMCI","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"c2","defaultValue":"false","definedIn":"share/opto/c2_globals.hpp","deprecated":"","description":"Use Sparc V9 branch-on-register opcodes","expired":"16","name":"BranchOnRegister","obsoleted":"15","prefix":"-XX:","type":"bool"},
{"availability":"notproduct","component":"c2","defaultValue":"0","definedIn":"share/opto/c2_globals.hpp","description":"Break at construction of this Node (either _idx or _debug_idx)","name":"BreakAtNode","prefix":"-XX:","type":"intx"},
{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Execute breakpoint upon encountering VM warning","name":"BreakAtWarning","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Enable the Java bytecode verifier for local classes","name":"BytecodeVerificationLocal","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","description":"Enable the Java bytecode verifier for remote classes","name":"BytecodeVerificationRemote","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"c1","defaultValue":"false","definedIn":"share/c1/c1_globals.hpp","description":"Sets a breakpoint at entry of each compiled method","name":"C1Breakpoint","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"c1","defaultValue":"true","definedIn":"share/c1/c1_globals.hpp","description":"Use CHA and exact type results at call sites when updating MDOs","name":"C1OptimizeVirtualCallProfiling","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"c1","defaultValue":"true","definedIn":"share/c1/c1_globals.hpp","description":"Profile branches when generating code for updating MDOs","name":"C1ProfileBranches","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"c1","defaultValue":"true","definedIn":"share/c1/c1_globals.hpp","description":"Profile calls when generating code for updating MDOs","name":"C1ProfileCalls","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"c1","defaultValue":"true","definedIn":"share/c1/c1_globals.hpp","description":"Profile checkcasts when generating code for updating MDOs","name":"C1ProfileCheckcasts","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"c1","defaultValue":"true","definedIn":"share/c1/c1_globals.hpp","description":"Profile inlined calls when generating code for updating MDOs","name":"C1ProfileInlinedCalls","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"c1","defaultValue":"true","definedIn":"share/c1/c1_globals.hpp","description":"Profile virtual calls when generating code for updating MDOs","name":"C1ProfileVirtualCalls","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"c1","defaultValue":"trueInTiered","definedIn":"share/c1/c1_globals.hpp","description":"Update MethodData*s in Tier1-generated code","name":"C1UpdateMethodData","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"-1","definedIn":"share/runtime/globals.hpp","description":"The id of osr compilation to break at","name":"CIBreakAtOSR","prefix":"-XX:","type":"intx"},
{"availability":"develop","component":"runtime","defaultValue":"-1","definedIn":"share/runtime/globals.hpp","description":"The id of compilation to break at","name":"CIBreakAt","prefix":"-XX:","type":"intx"},
{"availability":"develop","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","description":"compile native methods if supported by the compiler","name":"CICompileNatives","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"aarch64","defaultValue":"true","definedIn":"cpu/aarch64/c1_globals_aarch64.hpp","name":"CICompileOSR","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"arm","defaultValue":"true","definedIn":"cpu/arm/c2_globals_arm.hpp","name":"CICompileOSR","prefix":"-XX:","type":"bool"},
{"availability":"develop_pd","component":"runtime","definedIn":"share/runtime/globals.hpp","description":"compile on stack replacement methods if supported by the \ncompiler","name":"CICompileOSR","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"ppc","defaultValue":"true","definedIn":"cpu/ppc/c1_globals_ppc.hpp","name":"CICompileOSR","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"s390","defaultValue":"true","definedIn":"cpu/s390/c2_globals_s390.hpp","name":"CICompileOSR","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"sparc","defaultValue":"true","definedIn":"cpu/sparc/c1_globals_sparc.hpp","name":"CICompileOSR","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"x86","defaultValue":"true","definedIn":"cpu/x86/c1_globals_x86.hpp","name":"CICompileOSR","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"1 compiler thread for log(N CPUs)","name":"CICompilerCountPerCPU","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"CI_COMPILER_COUNT","definedIn":"share/runtime/globals.hpp","description":"Number of compiler threads to run","name":"CICompilerCount","prefix":"-XX:","range":"range(0, max_jint)","type":"intx"},
{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"use a separate counter when assigning ids to osr compilations","name":"CICountOSR","prefix":"-XX:","type":"bool"},
{"availability":"notproduct","component":"runtime","defaultValue":"-1","definedIn":"share/runtime/globals.hpp","description":"id of compilation to trigger assert in compiler thread for \nthe purpose of testing, e.g. generation of replay data","name":"CICrashAt","prefix":"-XX:","type":"intx"},
{"availability":"develop","component":"runtime","defaultValue":"-1","definedIn":"share/runtime/globals.hpp","description":"Fire OutOfMemoryErrors throughout CI for testing the compiler \n(non-negative value throws OOM after this many CI accesses \nin each compile)","name":"CIFireOOMAt","prefix":"-XX:","type":"intx"},
{"availability":"notproduct","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"enable potentially expensive verification in ciObjectFactory","name":"CIObjectFactoryVerify","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"display the contents of the compile queue whenever a \ncompilation is enqueued","name":"CIPrintCompileQueue","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"when CIPrint is active, print the name of the active compiler","name":"CIPrintCompilerName","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"print method bytecodes of the compiled code","name":"CIPrintMethodCodes","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"display every request for compilation","name":"CIPrintRequests","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"print the results of ciTypeFlow analysis","name":"CIPrintTypeFlow","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"0","definedIn":"share/runtime/globals.hpp","description":"The id of the first osr compilation to permit \n(CICountOSR must be on)","name":"CIStartOSR","prefix":"-XX:","type":"intx"},
{"availability":"develop","component":"runtime","defaultValue":"0","definedIn":"share/runtime/globals.hpp","description":"The id of the first compilation to permit","name":"CIStart","prefix":"-XX:","type":"intx"},
{"availability":"develop","component":"runtime","defaultValue":"max_jint","definedIn":"share/runtime/globals.hpp","description":"The id of the last osr compilation to permit \n(CICountOSR must be on)","name":"CIStopOSR","prefix":"-XX:","type":"intx"},
{"availability":"develop","component":"runtime","defaultValue":"max_jint","definedIn":"share/runtime/globals.hpp","description":"The id of the last compilation to permit","name":"CIStop","prefix":"-XX:","type":"intx"},
{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"display timing information after each successful compilation","name":"CITimeEach","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"be more verbose in compilation timings","name":"CITimeVerbose","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"collect timing information for compilation","name":"CITime","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"detailed per-bytecode tracing of ciTypeFlow analysis","name":"CITraceTypeFlow","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"gc","defaultValue":"false","definedIn":"share/gc/cms/cms_globals.hpp","deprecated":"","description":"Whether abort-on-overflow semantics is implemented","expired":"15","name":"CMSAbortSemantics","obsoleted":"14","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"gc","defaultValue":"100","definedIn":"share/gc/cms/cms_globals.hpp","deprecated":"","description":"Nominal minimum work per abortable preclean iteration","expired":"15","name":"CMSAbortablePrecleanMinWorkPerIteration","obsoleted":"14","prefix":"-XX:","range":"range(0, max_uintx)","type":"uintx"},
{"availability":"manageable","component":"gc","defaultValue":"100","definedIn":"share/gc/cms/cms_globals.hpp","description":"Time that we sleep between iterations when not given \nenough work per iteration","name":"CMSAbortablePrecleanWaitMillis","prefix":"-XX:","range":"range(0, max_intx)","type":"intx"},
{"availability":"product","component":"gc","defaultValue":"10*M","definedIn":"share/gc/cms/cms_globals.hpp","deprecated":"","description":"Bitmap operations should process at most this many bits \nbetween yields","expired":"15","name":"CMSBitMapYieldQuantum","obsoleted":"14","prefix":"-XX:","range":"range(1, max_uintx)","type":"size_t"},
{"availability":"product","component":"gc","defaultValue":"50","definedIn":"share/gc/cms/cms_globals.hpp","deprecated":"","description":"Percentage CMS generation occupancy at which to \ninitiate CMS collection for bootstrapping collection stats","expired":"15","name":"CMSBootstrapOccupancy","obsoleted":"14","prefix":"-XX:","range":"range(0, 100)","type":"uintx"},
{"availability":"develop","component":"gc","defaultValue":"1000","definedIn":"share/gc/cms/cms_globals.hpp","description":"Interval in milliseconds that CMS thread checks if it \nshould start a collection cycle","name":"CMSCheckInterval","prefix":"-XX:","type":"uintx"},
{"availability":"product","component":"gc","defaultValue":"true","definedIn":"share/gc/cms/cms_globals.hpp","deprecated":"","description":"Whether class unloading enabled when using CMS GC","expired":"15","name":"CMSClassUnloadingEnabled","obsoleted":"14","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"gc","defaultValue":"0","definedIn":"share/gc/cms/cms_globals.hpp","deprecated":"","description":"When CMS class unloading is enabled, the maximum CMS cycle \ncount for which classes may not be unloaded","expired":"15","name":"CMSClassUnloadingMaxInterval","obsoleted":"14","prefix":"-XX:","range":"range(0, max_uintx)","type":"uintx"},
{"availability":"product","component":"gc","defaultValue":"true","definedIn":"share/gc/cms/cms_globals.hpp","deprecated":"","description":"Clean-on-enter optimization for reducing number of dirty cards","expired":"15","name":"CMSCleanOnEnter","obsoleted":"14","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"gc","defaultValue":"32","definedIn":"share/gc/cms/cms_globals.hpp","deprecated":"","description":"Size (in cards) of CMS concurrent MT marking task","expired":"15","name":"CMSConcMarkMultiple","obsoleted":"14","prefix":"-XX:","range":"range(1, SIZE_MAX / 4096)","type":"size_t"},
{"availability":"product","component":"gc","defaultValue":"true","definedIn":"share/gc/cms/cms_globals.hpp","deprecated":"","description":"Whether multi-threaded concurrent work enabled \n(effective only if ParNewGC)","expired":"15","name":"CMSConcurrentMTEnabled","obsoleted":"14","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"gc","defaultValue":"10","definedIn":"share/gc/cms/cms_globals.hpp","deprecated":"","description":"Number of times the coordinator GC thread will sleep while \nyielding before giving up and resuming GC","expired":"15","name":"CMSCoordinatorYieldSleepCount","obsoleted":"14","prefix":"-XX:","range":"range(0, max_juint)","type":"uintx"},
{"availability":"product","component":"gc","defaultValue":"true","definedIn":"share/gc/cms/cms_globals.hpp","deprecated":"","description":"Always record eden chunks used for the parallel initial mark \nor remark of eden","expired":"15","name":"CMSEdenChunksRecordAlways","obsoleted":"14","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"gc","defaultValue":"50","definedIn":"share/gc/cms/cms_globals.hpp","deprecated":"","description":"Percentage (0-100) used to weight the current sample when \ncomputing exponential averages for CMS statistics","expired":"15","name":"CMSExpAvgFactor","obsoleted":"14","prefix":"-XX:","range":"range(0, 100)","type":"uintx"},
{"availability":"product","component":"gc","defaultValue":"false","definedIn":"share/gc/cms/cms_globals.hpp","deprecated":"","description":"CMS: cushion for block demand during sweep","expired":"15","name":"CMSExtrapolateSweep","obsoleted":"14","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"gc","defaultValue":"10","definedIn":"share/gc/cms/cms_globals.hpp","deprecated":"","description":"Percentage (0-100) used to add conservatism when computing the \nduty cycle","expired":"15","name":"CMSIncrementalSafetyFactor","obsoleted":"14","prefix":"-XX:","range":"range(0, 100)","type":"uintx"},
{"availability":"product","component":"gc","defaultValue":"4","definedIn":"share/gc/cms/cms_globals.hpp","deprecated":"","description":"Replenish an indexed free list with this number of chunks","expired":"15","name":"CMSIndexedFreeListReplenish","obsoleted":"14","prefix":"-XX:","range":"range(1, max_uintx)","type":"uintx"},
{"availability":"product","component":"gc","defaultValue":"-1","definedIn":"share/gc/cms/cms_globals.hpp","deprecated":"","description":"Percentage CMS generation occupancy to start a CMS collection \ncycle. A negative value means that CMSTriggerRatio is used","expired":"15","name":"CMSInitiatingOccupancyFraction","obsoleted":"14","prefix":"-XX:","range":"range(min_intx, 100)","type":"intx"},
{"availability":"product","component":"gc","defaultValue":"98","definedIn":"share/gc/cms/cms_globals.hpp","deprecated":"","description":"An absolute ceiling above which CMS will always consider the \nunloading of classes when class unloading is enabled","expired":"15","name":"CMSIsTooFullPercentage","obsoleted":"14","prefix":"-XX:","range":"range(0, 100)","type":"uintx"},
{"availability":"product","component":"gc","defaultValue":"0.95","definedIn":"share/gc/cms/cms_globals.hpp","deprecated":"","description":"CMS: the factor by which to inflate estimated demand of large \nblock sizes to prevent coalescing with an adjoining block","expired":"15","name":"CMSLargeCoalSurplusPercent","obsoleted":"14","prefix":"-XX:","range":"range(0.0, DBL_MAX)","type":"double"},
{"availability":"product","component":"gc","defaultValue":"1.00","definedIn":"share/gc/cms/cms_globals.hpp","deprecated":"","description":"CMS: the factor by which to inflate estimated demand of large \nblock sizes to prevent splitting to supply demand for smaller \nblocks","expired":"15","name":"CMSLargeSplitSurplusPercent","obsoleted":"14","prefix":"-XX:","range":"range(0.0, DBL_MAX)","type":"double"},
{"availability":"product","component":"gc","defaultValue":"false","definedIn":"share/gc/cms/cms_globals.hpp","deprecated":"","description":"Warn in case of excessive CMS looping","expired":"15","name":"CMSLoopWarn","obsoleted":"14","prefix":"-XX:","type":"bool"},
{"availability":"notproduct","component":"gc","defaultValue":"false","definedIn":"share/gc/cms/cms_globals.hpp","description":"Simulate frequent marking stack / work queue overflow","name":"CMSMarkStackOverflowALot","prefix":"-XX:","type":"bool"},
{"availability":"notproduct","component":"gc","defaultValue":"1000","definedIn":"share/gc/cms/cms_globals.hpp","description":"An 'interval' counter that determines how frequently \nto simulate overflow; a smaller number increases frequency","name":"CMSMarkStackOverflowInterval","prefix":"-XX:","type":"uintx"},
{"availability":"product","component":"gc","defaultValue":"0","definedIn":"share/gc/cms/cms_globals.hpp","deprecated":"","description":"Maximum number of abortable preclean iterations, if > 0","expired":"15","name":"CMSMaxAbortablePrecleanLoops","obsoleted":"14","prefix":"-XX:","range":"range(0, max_uintx)","type":"uintx"},
{"availability":"product","component":"gc","defaultValue":"5000","definedIn":"share/gc/cms/cms_globals.hpp","deprecated":"","description":"Maximum time in abortable preclean (in milliseconds)","expired":"15","name":"CMSMaxAbortablePrecleanTime","obsoleted":"14","prefix":"-XX:","range":"range(0, max_intx)","type":"intx"},
{"availability":"product","component":"gc","defaultValue":"1024","definedIn":"share/gc/cms/cms_globals.hpp","deprecated":"","description":"Maximum size of CMS gen promotion LAB caches per worker \nper block size","expired":"15","name":"CMSOldPLABMax","obsoleted":"14","prefix":"-XX:","range":"range(1, max_uintx)","type":"size_t"},
{"availability":"product","component":"gc","defaultValue":"16","definedIn":"share/gc/cms/cms_globals.hpp","deprecated":"","description":"Minimum size of CMS gen promotion LAB caches per worker \nper block size","expired":"15","name":"CMSOldPLABMin","obsoleted":"14","prefix":"-XX:","range":"range(1, max_uintx)","type":"size_t"},
{"availability":"product","component":"gc","defaultValue":"4","definedIn":"share/gc/cms/cms_globals.hpp","deprecated":"","description":"Nominal number of refills of CMS gen promotion LAB cache \nper worker per block size","expired":"15","name":"CMSOldPLABNumRefills","obsoleted":"14","prefix":"-XX:","range":"range(1, max_uintx)","type":"uintx"},
{"availability":"product","component":"gc","defaultValue":"2","definedIn":"share/gc/cms/cms_globals.hpp","deprecated":"","description":"The gain in the feedback loop for on-the-fly PLAB resizing \nduring a scavenge","expired":"15","name":"CMSOldPLABReactivityFactor","obsoleted":"14","prefix":"-XX:","range":"range(1, max_uintx)","type":"uintx"},
{"availability":"product","component":"gc","defaultValue":"false","definedIn":"share/gc/cms/cms_globals.hpp","deprecated":"","description":"React on-the-fly during a scavenge to a sudden \nchange in block demand rate","expired":"15","name":"CMSOldPLABResizeQuicker","obsoleted":"14","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"gc","defaultValue":"4","definedIn":"share/gc/cms/cms_globals.hpp","deprecated":"","description":"The tolerance of the phase-change detector for on-the-fly \nPLAB resizing during a scavenge","expired":"15","name":"CMSOldPLABToleranceFactor","obsoleted":"14","prefix":"-XX:","range":"range(1, max_uintx)","type":"uintx"},
{"availability":"product","component":"gc","defaultValue":"true","definedIn":"share/gc/cms/cms_globals.hpp","deprecated":"","description":"Always record survivor space PLAB boundaries (effective only \nif CMSParallelSurvivorRemarkEnabled)","expired":"15","name":"CMSPLABRecordAlways","obsoleted":"14","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"gc","defaultValue":"true","definedIn":"share/gc/cms/cms_globals.hpp","deprecated":"","description":"Use the parallel initial mark.","expired":"15","name":"CMSParallelInitialMarkEnabled","obsoleted":"14","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"gc","defaultValue":"true","definedIn":"share/gc/cms/cms_globals.hpp","deprecated":"","description":"Whether parallel remark enabled (only if ParNewGC)","expired":"15","name":"CMSParallelRemarkEnabled","obsoleted":"14","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"gc","defaultValue":"true","definedIn":"share/gc/cms/cms_globals.hpp","deprecated":"","description":"Whether parallel remark of survivor space \nenabled (effective only if CMSParallelRemarkEnabled)","expired":"15","name":"CMSParallelSurvivorRemarkEnabled","obsoleted":"14","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"gc","defaultValue":"3","definedIn":"share/gc/cms/cms_globals.hpp","deprecated":"","description":"CMSPrecleanNumerator:CMSPrecleanDenominator yields convergence \nratio","expired":"15","name":"CMSPrecleanDenominator","obsoleted":"14","prefix":"-XX:","range":"range(1, max_uintx)","type":"uintx"},
{"availability":"product","component":"gc","defaultValue":"3","definedIn":"share/gc/cms/cms_globals.hpp","deprecated":"","description":"Maximum number of precleaning iteration passes","expired":"15","name":"CMSPrecleanIter","obsoleted":"14","prefix":"-XX:","range":"range(0, 9)","type":"uintx"},
{"availability":"product","component":"gc","defaultValue":"2","definedIn":"share/gc/cms/cms_globals.hpp","deprecated":"","description":"CMSPrecleanNumerator:CMSPrecleanDenominator yields convergence \nratio","expired":"15","name":"CMSPrecleanNumerator","obsoleted":"14","prefix":"-XX:","range":"range(0, max_uintx-1)","type":"uintx"},
{"availability":"product","component":"gc","defaultValue":"true","definedIn":"share/gc/cms/cms_globals.hpp","deprecated":"","description":"Preclean ref lists during (initial) preclean phase","expired":"15","name":"CMSPrecleanRefLists1","obsoleted":"14","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"gc","defaultValue":"false","definedIn":"share/gc/cms/cms_globals.hpp","deprecated":"","description":"Preclean ref lists during abortable preclean phase","expired":"15","name":"CMSPrecleanRefLists2","obsoleted":"14","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"gc","defaultValue":"false","definedIn":"share/gc/cms/cms_globals.hpp","deprecated":"","description":"Preclean survivors during (initial) preclean phase","expired":"15","name":"CMSPrecleanSurvivors1","obsoleted":"14","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"gc","defaultValue":"true","definedIn":"share/gc/cms/cms_globals.hpp","deprecated":"","description":"Preclean survivors during abortable preclean phase","expired":"15","name":"CMSPrecleanSurvivors2","obsoleted":"14","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"gc","defaultValue":"1000","definedIn":"share/gc/cms/cms_globals.hpp","deprecated":"","description":"Do not iterate again if number of dirty cards is less than this","expired":"15","name":"CMSPrecleanThreshold","obsoleted":"14","prefix":"-XX:","range":"range(100, max_uintx)","type":"uintx"},
{"availability":"product","component":"gc","defaultValue":"true","definedIn":"share/gc/cms/cms_globals.hpp","deprecated":"","description":"Whether concurrent precleaning enabled","expired":"15","name":"CMSPrecleaningEnabled","obsoleted":"14","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"gc","defaultValue":"false","definedIn":"share/gc/cms/cms_globals.hpp","deprecated":"","description":"If logging for the 'gc' and 'promotion' tags is enabled on\ntrace level include more detailed information about the\nfree chunks","expired":"15","name":"CMSPrintChunksInDump","obsoleted":"14","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"gc","defaultValue":"false","definedIn":"share/gc/cms/cms_globals.hpp","deprecated":"","description":"If logging for the 'gc' and 'promotion' tags is enabled on\ntrace level include more detailed information about the\nallocated objects","expired":"15","name":"CMSPrintObjectsInDump","obsoleted":"14","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"gc","defaultValue":"1","definedIn":"share/gc/cms/cms_globals.hpp","deprecated":"","description":"Choose variant (1,2) of verification following remark","expired":"15","name":"CMSRemarkVerifyVariant","obsoleted":"14","prefix":"-XX:","range":"range(1, 2)","type":"uintx"},
{"availability":"product","component":"gc","defaultValue":"true","definedIn":"share/gc/cms/cms_globals.hpp","deprecated":"","description":"Replenish all intermediate free-list caches","expired":"15","name":"CMSReplenishIntermediate","obsoleted":"14","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"gc","defaultValue":"32","definedIn":"share/gc/cms/cms_globals.hpp","deprecated":"","description":"Size (in cards) of CMS parallel rescan task","expired":"15","name":"CMSRescanMultiple","obsoleted":"14","prefix":"-XX:","range":"range(1, SIZE_MAX / 4096)","type":"size_t"},
{"availability":"product","component":"gc","defaultValue":"16*K","definedIn":"share/gc/cms/cms_globals.hpp","deprecated":"","description":"The minimum distance between eden samples for CMS (see above)","expired":"15","name":"CMSSamplingGrain","obsoleted":"14","prefix":"-XX:","range":"range(ObjectAlignmentInBytes, max_uintx)","type":"uintx"},
{"availability":"product","component":"gc","defaultValue":"false","definedIn":"share/gc/cms/cms_globals.hpp","deprecated":"","description":"Attempt scavenge before the CMS remark step","expired":"15","name":"CMSScavengeBeforeRemark","obsoleted":"14","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"gc","defaultValue":"50","definedIn":"share/gc/cms/cms_globals.hpp","deprecated":"","description":"The Eden occupancy percentage (0-100) at which \nto try and schedule remark pause","expired":"15","name":"CMSScheduleRemarkEdenPenetration","obsoleted":"14","prefix":"-XX:","range":"range(0, 100)","type":"uintx"},
{"availability":"product","component":"gc","defaultValue":"2*M","definedIn":"share/gc/cms/cms_globals.hpp","deprecated":"","description":"If Eden size is below this, do not try to schedule remark","expired":"15","name":"CMSScheduleRemarkEdenSizeThreshold","obsoleted":"14","prefix":"-XX:","range":"range(0, max_uintx)","type":"size_t"},
{"availability":"product","component":"gc","defaultValue":"5","definedIn":"share/gc/cms/cms_globals.hpp","deprecated":"","description":"Start sampling eden top at least before young gen \noccupancy reaches 1/<ratio> of the size at which \nwe plan to schedule remark","expired":"15","name":"CMSScheduleRemarkSamplingRatio","obsoleted":"14","prefix":"-XX:","range":"range(1, max_uintx)","type":"uintx"},
{"availability":"product","component":"gc","defaultValue":"1.05","definedIn":"share/gc/cms/cms_globals.hpp","deprecated":"","description":"CMS: the factor by which to inflate estimated demand of small \nblock sizes to prevent coalescing with an adjoining block","expired":"15","name":"CMSSmallCoalSurplusPercent","obsoleted":"14","prefix":"-XX:","range":"range(0.0, DBL_MAX)","type":"double"},
{"availability":"product","component":"gc","defaultValue":"1.10","definedIn":"share/gc/cms/cms_globals.hpp","deprecated":"","description":"CMS: the factor by which to inflate estimated demand of small \nblock sizes to prevent splitting to supply demand for smaller \nblocks","expired":"15","name":"CMSSmallSplitSurplusPercent","obsoleted":"14","prefix":"-XX:","range":"range(0.0, DBL_MAX)","type":"double"},
{"availability":"product","component":"gc","defaultValue":"true","definedIn":"share/gc/cms/cms_globals.hpp","deprecated":"","description":"When satisfying batched demand, split blocks from the \nIndexedFreeList whose size is a multiple of requested size","expired":"15","name":"CMSSplitIndexedFreeListBlocks","obsoleted":"14","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"gc","defaultValue":"false","definedIn":"share/gc/cms/cms_globals.hpp","description":"Check if the coalesced range is already in the \nfree lists as claimed","name":"CMSTestInFreeList","prefix":"-XX:","type":"bool"},
{"availability":"manageable","component":"gc","defaultValue":"-1","definedIn":"share/gc/cms/cms_globals.hpp","description":"Commence a CMS collection cycle (at least) every so many \nmilliseconds (0 permanently, -1 disabled)","name":"CMSTriggerInterval","prefix":"-XX:","range":"range(-1, max_intx)","type":"intx"},
{"availability":"product","component":"gc","defaultValue":"80","definedIn":"share/gc/cms/cms_globals.hpp","deprecated":"","description":"Percentage of MinHeapFreeRatio in CMS generation that is \nallocated before a CMS collection cycle commences","expired":"15","name":"CMSTriggerRatio","obsoleted":"14","prefix":"-XX:","range":"range(0, 100)","type":"uintx"},
{"availability":"notproduct","component":"gc","defaultValue":"false","definedIn":"share/gc/cms/cms_globals.hpp","description":"Check that all the garbage collected was returned to the \nfree lists","name":"CMSVerifyReturnedBytes","prefix":"-XX:","type":"bool"},
{"availability":"manageable","component":"gc","defaultValue":"2000","definedIn":"share/gc/cms/cms_globals.hpp","description":"Time in milliseconds that CMS thread waits for young GC","name":"CMSWaitDuration","prefix":"-XX:","range":"range(min_jint, max_jint)","type":"intx"},
{"availability":"product","component":"gc","defaultValue":"10","definedIn":"share/gc/cms/cms_globals.hpp","deprecated":"","description":"Don't drain below this size per parallel worker/thief","expired":"15","name":"CMSWorkQueueDrainThreshold","obsoleted":"14","prefix":"-XX:","range":"range(1, max_juint)","type":"uintx"},
{"availability":"product","component":"gc","defaultValue":"0","definedIn":"share/gc/cms/cms_globals.hpp","deprecated":"","description":"Number of times a GC thread (minus the coordinator) \nwill sleep while yielding before giving up and resuming GC","expired":"15","name":"CMSYieldSleepCount","obsoleted":"14","prefix":"-XX:","range":"range(0, max_juint)","type":"uintx"},
{"availability":"product","component":"gc","defaultValue":"true","definedIn":"share/gc/cms/cms_globals.hpp","deprecated":"","description":"Yield between steps of CMS","expired":"15","name":"CMSYield","obsoleted":"14","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","comment":"// default max size of CMS young gen, per GC worker thread","cpu":"aarch64","defaultValue":"64*M","definedIn":"cpu/aarch64/globals_aarch64.hpp","deprecated":"","expired":"15","name":"CMSYoungGenPerWorker","obsoleted":"14","prefix":"-XX:","type":"uintx"},
{"availability":"define_pd_global","comment":"// default max size of CMS young gen, per GC worker thread","cpu":"arm","defaultValue":"16*M","definedIn":"cpu/arm/globals_arm.hpp","deprecated":"","expired":"15","name":"CMSYoungGenPerWorker","obsoleted":"14","prefix":"-XX:","type":"size_t"},
{"availability":"product_pd","component":"gc","definedIn":"share/gc/cms/cms_globals.hpp","deprecated":"","description":"The maximum size of young gen chosen by default per GC worker \nthread available","expired":"15","name":"CMSYoungGenPerWorker","obsoleted":"14","prefix":"-XX:","range":"range(1, max_uintx)","type":"size_t"},
{"availability":"define_pd_global","comment":"// Default max size of CMS young gen, per GC worker thread.","cpu":"ppc","defaultValue":"16*M","definedIn":"cpu/ppc/globals_ppc.hpp","deprecated":"","expired":"15","name":"CMSYoungGenPerWorker","obsoleted":"14","prefix":"-XX:","type":"size_t"},
{"availability":"define_pd_global","comment":"// Default max size of CMS young gen, per GC worker thread.","cpu":"s390","defaultValue":"16*M","definedIn":"cpu/s390/globals_s390.hpp","deprecated":"","expired":"15","name":"CMSYoungGenPerWorker","obsoleted":"14","prefix":"-XX:","type":"size_t"},
{"availability":"define_pd_global","comment":"// default max size of CMS young gen, per GC worker thread","cpu":"sparc","defaultValue":"16*M","definedIn":"cpu/sparc/globals_sparc.hpp","deprecated":"","expired":"15","name":"CMSYoungGenPerWorker","obsoleted":"14","prefix":"-XX:","type":"size_t"},
{"availability":"define_pd_global","comment":"// default max size of CMS young gen, per GC worker thread","cpu":"x86","defaultValue":"64*M","definedIn":"cpu/x86/globals_x86.hpp","deprecated":"","expired":"15","name":"CMSYoungGenPerWorker","obsoleted":"14","prefix":"-XX:","type":"size_t"},
{"availability":"define_pd_global","comment":"// default max size of CMS young gen, per GC worker thread","cpu":"zero","defaultValue":"16*M","definedIn":"cpu/zero/globals_zero.hpp","deprecated":"","expired":"15","name":"CMSYoungGenPerWorker","obsoleted":"14","prefix":"-XX:","type":"size_t"},
{"availability":"product","component":"gc","defaultValue":"1","definedIn":"share/gc/cms/cms_globals.hpp","deprecated":"","description":"The multiple of deviation from mean to use for buffering \nagainst volatility in free list demand","expired":"15","name":"CMS_FLSPadding","obsoleted":"14","prefix":"-XX:","range":"range(0, max_juint)","type":"uintx"},
{"availability":"product","component":"gc","defaultValue":"75","definedIn":"share/gc/cms/cms_globals.hpp","deprecated":"","description":"Percentage (0-100) used to weight the current sample when \ncomputing exponentially decaying averages for CMS FLS \nstatistics","expired":"15","name":"CMS_FLSWeight","obsoleted":"14","prefix":"-XX:","range":"range(0, 100)","type":"uintx"},
{"availability":"product","component":"gc","defaultValue":"1","definedIn":"share/gc/cms/cms_globals.hpp","deprecated":"","description":"The multiple of deviation from mean to use for buffering \nagainst volatility in inter-sweep duration","expired":"15","name":"CMS_SweepPadding","obsoleted":"14","prefix":"-XX:","range":"range(0, max_juint)","type":"uintx"},
{"availability":"product","component":"gc","defaultValue":"10","definedIn":"share/gc/cms/cms_globals.hpp","deprecated":"","description":"Skip block flux-rate sampling for an epoch unless inter-sweep \nduration exceeds this threshold in milliseconds","expired":"15","name":"CMS_SweepTimerThresholdMillis","obsoleted":"14","prefix":"-XX:","range":"range(0, max_uintx)","type":"uintx"},
{"availability":"product","component":"gc","defaultValue":"75","definedIn":"share/gc/cms/cms_globals.hpp","deprecated":"","description":"Percentage (0-100) used to weight the current sample when \ncomputing exponentially decaying average for inter-sweep \nduration","expired":"15","name":"CMS_SweepWeight","obsoleted":"14","prefix":"-XX:","range":"range(0, 100)","type":"uintx"},
{"availability":"diagnostic","component":"gc","defaultValue":"0","definedIn":"share/gc/cms/cms_globals.hpp","description":"When BindCMSThreadToCPU is true, the CPU to bind CMS thread to","name":"CPUForCMSThread","prefix":"-XX:","range":"range(0, max_juint)","type":"uintx"},
{"availability":"define_pd_global","cpu":"aarch64","defaultValue":"false","definedIn":"cpu/aarch64/c1_globals_aarch64.hpp","name":"CSEArrayLength","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"arm","defaultValue":"true","definedIn":"cpu/arm/c1_globals_arm.hpp","name":"CSEArrayLength","prefix":"-XX:","type":"bool"},
{"availability":"develop_pd","component":"c1","definedIn":"share/c1/c1_globals.hpp","description":"Create separate nodes for length in array accesses","name":"CSEArrayLength","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"ppc","defaultValue":"true","definedIn":"cpu/ppc/c1_globals_ppc.hpp","name":"CSEArrayLength","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"s390","defaultValue":"true","definedIn":"cpu/s390/c1_globals_s390.hpp","name":"CSEArrayLength","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"sparc","defaultValue":"true","definedIn":"cpu/sparc/c1_globals_sparc.hpp","name":"CSEArrayLength","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"x86","defaultValue":"false","definedIn":"cpu/x86/c1_globals_x86.hpp","name":"CSEArrayLength","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Calculate class fingerprint","name":"CalculateClassFingerprint","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"c1","defaultValue":"true","definedIn":"share/c1/c1_globals.hpp","description":"Canonicalize graph nodes","name":"CanonicalizeNodes","prefix":"-XX:","type":"bool"},
{"availability":"notproduct","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","description":"Generate checks in encoding/decoding code in debug VM","name":"CheckCompressedOops","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","description":"When a class C is loaded, check that \n(1) all intrinsics defined by the VM for class C are present \nin the loaded class file and are marked with the \n@HotSpotIntrinsicCandidate annotation, that \n(2) there is an intrinsic registered for all loaded methods \nthat are annotated with the @HotSpotIntrinsicCandidate \nannotation, and that \n(3) no orphan methods exist for class C (i.e., methods for \nwhich the VM declares an intrinsic but that are not declared \nin the loaded class C. \nCheck (3) is available only in debug builds.","name":"CheckIntrinsics","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Verify all arguments to JNI calls","name":"CheckJNICalls","prefix":"-XX:","type":"bool"},
{"availability":"notproduct","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Check memory initialization","name":"CheckMemoryInitialization","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Check for unhandled oops in VM code","name":"CheckUnhandledOops","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Check zapping of unused heap space","name":"CheckZapUnusedHeapArea","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","description":"Do unloading of classes with a concurrent marking cycle","name":"ClassUnloadingWithConcurrentMark","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","description":"Do unloading of classes","name":"ClassUnloading","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","description":"Clean the chunk pool asynchronously","name":"CleanChunkPoolAsync","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","description":"Clip inlining if aggregate method exceeds DesiredMethodLimit","name":"ClipInlining","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"aarch64","defaultValue":"32*K","definedIn":"cpu/aarch64/c1_globals_aarch64.hpp","name":"CodeCacheExpansionSize","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"arm","defaultValue":"32*K","definedIn":"cpu/arm/c1_globals_arm.hpp","name":"CodeCacheExpansionSize","prefix":"-XX:","type":"size_t"},
{"availability":"product_pd","component":"runtime","definedIn":"share/runtime/globals.hpp","description":"Code cache expansion size (in bytes)","name":"CodeCacheExpansionSize","prefix":"-XX:","range":"range(32*K, max_uintx)","type":"uintx"},
{"availability":"define_pd_global","cpu":"ppc","defaultValue":"32*K","definedIn":"cpu/ppc/c1_globals_ppc.hpp","name":"CodeCacheExpansionSize","prefix":"-XX:","type":"uintx"},
{"availability":"define_pd_global","cpu":"s390","defaultValue":"64*K","definedIn":"cpu/s390/c2_globals_s390.hpp","name":"CodeCacheExpansionSize","prefix":"-XX:","type":"uintx"},
{"availability":"define_pd_global","cpu":"sparc","defaultValue":"32*K","definedIn":"cpu/sparc/c1_globals_sparc.hpp","name":"CodeCacheExpansionSize","prefix":"-XX:","type":"uintx"},
{"availability":"define_pd_global","cpu":"x86","defaultValue":"32*K","definedIn":"cpu/x86/c1_globals_x86.hpp","name":"CodeCacheExpansionSize","prefix":"-XX:","type":"uintx"},
{"availability":"define_pd_global","cpu":"aarch64","defaultValue":"1","definedIn":"cpu/aarch64/c1_globals_aarch64.hpp","name":"CodeCacheMinBlockLength","prefix":"-XX:","type":"uintx"},
{"availability":"define_pd_global","cpu":"arm","defaultValue":"1","definedIn":"cpu/arm/c1_globals_arm.hpp","name":"CodeCacheMinBlockLength","prefix":"-XX:","type":"uintx"},
{"availability":"diagnostic_pd","component":"runtime","definedIn":"share/runtime/globals.hpp","description":"Minimum number of segments in a code cache block","name":"CodeCacheMinBlockLength","prefix":"-XX:","range":"range(1, 100)","type":"uintx"},
{"availability":"define_pd_global","cpu":"ppc","defaultValue":"1","definedIn":"cpu/ppc/c1_globals_ppc.hpp","name":"CodeCacheMinBlockLength","prefix":"-XX:","type":"uintx"},
{"availability":"define_pd_global","cpu":"s390","defaultValue":"4","definedIn":"cpu/s390/c2_globals_s390.hpp","name":"CodeCacheMinBlockLength","prefix":"-XX:","type":"uintx"},
{"availability":"define_pd_global","cpu":"sparc","defaultValue":"1","definedIn":"cpu/sparc/c1_globals_sparc.hpp","name":"CodeCacheMinBlockLength","prefix":"-XX:","type":"uintx"},
{"availability":"define_pd_global","cpu":"x86","defaultValue":"1","definedIn":"cpu/x86/c1_globals_x86.hpp","name":"CodeCacheMinBlockLength","prefix":"-XX:","type":"uintx"},
{"availability":"define_pd_global","cpu":"aarch64","defaultValue":"400*K","definedIn":"cpu/aarch64/c1_globals_aarch64.hpp","name":"CodeCacheMinimumUseSpace","prefix":"-XX:","type":"uintx"},
{"availability":"define_pd_global","cpu":"arm","defaultValue":"400*K","definedIn":"cpu/arm/c1_globals_arm.hpp","name":"CodeCacheMinimumUseSpace","prefix":"-XX:","type":"size_t"},
{"availability":"develop_pd","component":"runtime","definedIn":"share/runtime/globals.hpp","description":"Minimum code cache size (in bytes) required to start VM.","name":"CodeCacheMinimumUseSpace","prefix":"-XX:","range":"range(0, max_uintx)","type":"uintx"},
{"availability":"define_pd_global","cpu":"ppc","defaultValue":"400*K","definedIn":"cpu/ppc/c1_globals_ppc.hpp","name":"CodeCacheMinimumUseSpace","prefix":"-XX:","type":"uintx"},
{"availability":"define_pd_global","cpu":"s390","defaultValue":"400*K","definedIn":"cpu/s390/c2_globals_s390.hpp","name":"CodeCacheMinimumUseSpace","prefix":"-XX:","type":"uintx"},
{"availability":"define_pd_global","cpu":"sparc","defaultValue":"400*K","definedIn":"cpu/sparc/c1_globals_sparc.hpp","name":"CodeCacheMinimumUseSpace","prefix":"-XX:","type":"uintx"},
{"availability":"define_pd_global","cpu":"x86","defaultValue":"400*K","definedIn":"cpu/x86/c1_globals_x86.hpp","name":"CodeCacheMinimumUseSpace","prefix":"-XX:","type":"uintx"},
{"availability":"define_pd_global","comment":"// Tiered compilation has large code-entry alignment.","cpu":"aarch64","defaultValue":"64 TIERED_ONLY(+64)","definedIn":"cpu/aarch64/globals_aarch64.hpp","name":"CodeCacheSegmentSize","prefix":"-XX:","type":"uintx"},
{"availability":"define_pd_global","comment":"// Tiered compilation has large code-entry alignment.","cpu":"arm","defaultValue":"64 TIERED_ONLY(+64)","definedIn":"cpu/arm/globals_arm.hpp","name":"CodeCacheSegmentSize","prefix":"-XX:","type":"uintx"},
{"availability":"develop_pd","component":"runtime","definedIn":"share/runtime/globals.hpp","description":"Code cache segment size (in bytes) - smallest unit of \nallocation","name":"CodeCacheSegmentSize","prefix":"-XX:","range":"range(1, 1024)","type":"uintx"},
{"availability":"define_pd_global","cpu":"ppc","defaultValue":"128","definedIn":"cpu/ppc/globals_ppc.hpp","name":"CodeCacheSegmentSize","prefix":"-XX:","type":"uintx"},
{"availability":"define_pd_global","cpu":"s390","defaultValue":"256","definedIn":"cpu/s390/globals_s390.hpp","name":"CodeCacheSegmentSize","prefix":"-XX:","type":"uintx"},
{"availability":"define_pd_global","comment":"// Tiered compilation has large code-entry alignment.","cpu":"sparc","defaultValue":"64 TIERED_ONLY(+64)","definedIn":"cpu/sparc/globals_sparc.hpp","name":"CodeCacheSegmentSize","prefix":"-XX:","type":"uintx"},
{"availability":"define_pd_global","comment":"// Tiered compilation has large code-entry alignment.","cpu":"x86","defaultValue":"64 TIERED_ONLY(+64)","definedIn":"cpu/x86/globals_x86.hpp","name":"CodeCacheSegmentSize","prefix":"-XX:","type":"uintx"},
{"availability":"define_pd_global","comment":"// Tiered compilation has large code-entry alignment.","cpu":"zero","defaultValue":"64 TIERED_ONLY(+64)","definedIn":"cpu/zero/globals_zero.hpp","name":"CodeCacheSegmentSize","prefix":"-XX:","type":"uintx"},
{"availability":"define_pd_global","cpu":"aarch64","defaultValue":"64","definedIn":"cpu/aarch64/globals_aarch64.hpp","name":"CodeEntryAlignment","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"arm","defaultValue":"16","definedIn":"cpu/arm/globals_arm.hpp","name":"CodeEntryAlignment","prefix":"-XX:","type":"intx"},
{"availability":"develop_pd","component":"runtime","definedIn":"share/runtime/globals.hpp","description":"Code entry alignment for generated code (in bytes)","name":"CodeEntryAlignment","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"ppc","defaultValue":"128","definedIn":"cpu/ppc/globals_ppc.hpp","name":"CodeEntryAlignment","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"s390","defaultValue":"64","definedIn":"cpu/s390/globals_s390.hpp","name":"CodeEntryAlignment","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"sparc","defaultValue":"32","definedIn":"cpu/sparc/globals_sparc.hpp","name":"CodeEntryAlignment","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"x86","defaultValue":"16","definedIn":"cpu/x86/globals_x86.hpp","name":"CodeEntryAlignment","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"zero","defaultValue":"32","definedIn":"cpu/zero/globals_zero.hpp","name":"CodeEntryAlignment","prefix":"-XX:","type":"intx"},
{"availability":"notproduct","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Collect information about IndexSets","name":"CollectIndexSetStatistics","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"c1","defaultValue":"trueInDebug","definedIn":"share/c1/c1_globals.hpp","description":"Show extra info in PrintNMethods output","name":"CommentedAssembly","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","deprecated":"14","description":"Allocate nonstatic fields in gaps between previous fields","expired":"16","name":"CompactFields","obsoleted":"15","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"aarch64","defaultValue":"true","definedIn":"cpu/aarch64/globals_aarch64.hpp","name":"CompactStrings","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"arm","defaultValue":"false","definedIn":"cpu/arm/globals_arm.hpp","name":"CompactStrings","prefix":"-XX:","type":"bool"},
{"availability":"product_pd","component":"runtime","definedIn":"share/runtime/globals.hpp","description":"Enable Strings to use single byte chars in backing store","name":"CompactStrings","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"ppc","defaultValue":"true","definedIn":"cpu/ppc/globals_ppc.hpp","name":"CompactStrings","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"s390","defaultValue":"true","definedIn":"cpu/s390/globals_s390.hpp","name":"CompactStrings","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"sparc","defaultValue":"true","definedIn":"cpu/sparc/globals_sparc.hpp","name":"CompactStrings","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"x86","defaultValue":"true","definedIn":"cpu/x86/globals_x86.hpp","name":"CompactStrings","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"zero","defaultValue":"false","definedIn":"cpu/zero/globals_zero.hpp","name":"CompactStrings","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"0","definedIn":"share/runtime/globals.hpp","deprecated":"13","description":"which compilation policy (0-2)","expired":"15","name":"CompilationPolicyChoice","obsoleted":"14","prefix":"-XX:","range":"range(0, 2)","type":"intx"},
{"availability":"product","component":"runtime","defaultValue":"NULL","definedIn":"share/runtime/globals.hpp","description":"Read compiler commands from this file [.hotspot_compiler]","name":"CompileCommandFile","prefix":"-XX:","type":"ccstr"},
{"availability":"product","component":"runtime","defaultValue":"<br>","definedIn":"share/runtime/globals.hpp","description":"Prepend to .hotspot_compiler; e.g. log,java/lang/String.<init>","name":"CompileCommand","prefix":"-XX:","type":"ccstrlist"},
{"availability":"product","component":"runtime","defaultValue":"<br>","definedIn":"share/runtime/globals.hpp","description":"List of methods (pkg/class.name) to restrict compilation to","name":"CompileOnly","prefix":"-XX:","type":"ccstrlist"},
{"availability":"develop","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","description":"Preload all classes used by a class before start loading","name":"CompileTheWorldPreloadClasses","prefix":"-XX:","type":"bool"},
{"availability":"notproduct","component":"runtime","defaultValue":"100","definedIn":"share/runtime/globals.hpp","description":"Force a safepoint every n compiles so sweeper can keep up","name":"CompileTheWorldSafepointInterval","prefix":"-XX:","type":"intx"},
{"availability":"notproduct","component":"runtime","defaultValue":"1","definedIn":"share/runtime/globals.hpp","description":"First class to consider when using +CompileTheWorld","name":"CompileTheWorldStartAt","prefix":"-XX:","type":"intx"},
{"availability":"notproduct","component":"runtime","defaultValue":"max_jint","definedIn":"share/runtime/globals.hpp","description":"Last class to consider when using +CompileTheWorld","name":"CompileTheWorldStopAt","prefix":"-XX:","type":"intx"},
{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Compile all methods in all classes in bootstrap class path \n(stress test)","name":"CompileTheWorld","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"1.0","definedIn":"share/runtime/globals.hpp","description":"Factor to control when first compilation happens \n(both with and without tiered compilation): \nvalues greater than 1.0 delay counter overflow, \nvalues between 0 and 1.0 rush counter overflow, \nvalue of 1.0 leaves compilation thresholds unchanged \nvalue of 0.0 is equivalent to -Xint. \n\nFlag can be set as per-method option. \nIf a value is specified for a method, compilation thresholds \nfor that method are scaled by both the value of the global flag \nand the value of the per-method flag.","name":"CompileThresholdScaling","prefix":"-XX:","range":"range(0.0, DBL_MAX)","type":"double"},
{"availability":"define_pd_global","cpu":"aarch64","defaultValue":"1500","definedIn":"cpu/aarch64/c1_globals_aarch64.hpp","name":"CompileThreshold","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"arm","defaultValue":"10000","definedIn":"cpu/arm/c2_globals_arm.hpp","name":"CompileThreshold","prefix":"-XX:","type":"intx"},
{"availability":"product_pd","component":"runtime","definedIn":"share/runtime/globals.hpp","description":"number of interpreted method invocations before (re-)compiling","name":"CompileThreshold","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"ppc","defaultValue":"1000","definedIn":"cpu/ppc/c1_globals_ppc.hpp","name":"CompileThreshold","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"s390","defaultValue":"10000","definedIn":"cpu/s390/c2_globals_s390.hpp","name":"CompileThreshold","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","comment":"// Design center runs on 1.3.1","cpu":"sparc","defaultValue":"1000","definedIn":"cpu/sparc/c1_globals_sparc.hpp","name":"CompileThreshold","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"x86","defaultValue":"1500","definedIn":"cpu/x86/c1_globals_x86.hpp","name":"CompileThreshold","prefix":"-XX:","type":"intx"},
{"availability":"diagnostic","component":"runtime","defaultValue":"NULL","definedIn":"share/runtime/globals.hpp","description":"Read compiler directives from this file","name":"CompilerDirectivesFile","prefix":"-XX:","type":"ccstr"},
{"availability":"diagnostic","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Disable backwards compatibility for compile commands.","name":"CompilerDirectivesIgnoreCompileCommands","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"runtime","defaultValue":"50","definedIn":"share/runtime/globals.hpp","description":"Limit on number of compiler directives.","name":"CompilerDirectivesLimit","prefix":"-XX:","type":"int"},
{"availability":"diagnostic","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Print compiler directives on installation.","name":"CompilerDirectivesPrint","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","deprecated":"11","description":"(Solaris only) Give compiler threads an extra quanta","expired":"13","name":"CompilerThreadHintNoPreempt","obsoleted":"12","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"-1","definedIn":"share/runtime/globals.hpp","description":"The native priority at which compiler threads should run \n(-1 means no change)","name":"CompilerThreadPriority","prefix":"-XX:","range":"range(min_jint, max_jint)","type":"intx"},
{"availability":"define_pd_global","cpu":"ppc","defaultValue":"4096","definedIn":"os_cpu/aix_ppc/globals_aix_ppc.hpp","name":"CompilerThreadStackSize","os":"aix","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"x86","defaultValue":"512","definedIn":"os_cpu/bsd_x86/globals_bsd_x86.hpp","name":"CompilerThreadStackSize","os":"bsd","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"zero","defaultValue":"0","definedIn":"os_cpu/bsd_zero/globals_bsd_zero.hpp","name":"CompilerThreadStackSize","os":"bsd","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"aarch64","defaultValue":"2048","definedIn":"os_cpu/linux_aarch64/globals_linux_aarch64.hpp","name":"CompilerThreadStackSize","os":"linux","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"arm","defaultValue":"512","definedIn":"os_cpu/linux_arm/globals_linux_arm.hpp","name":"CompilerThreadStackSize","os":"linux","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"ppc","defaultValue":"4096","definedIn":"os_cpu/linux_ppc/globals_linux_ppc.hpp","name":"CompilerThreadStackSize","os":"linux","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"s390","defaultValue":"2048","definedIn":"os_cpu/linux_s390/globals_linux_s390.hpp","name":"CompilerThreadStackSize","os":"linux","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"x86","defaultValue":"512","definedIn":"os_cpu/linux_x86/globals_linux_x86.hpp","name":"CompilerThreadStackSize","os":"linux","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"zero","defaultValue":"0","definedIn":"os_cpu/linux_zero/globals_linux_zero.hpp","name":"CompilerThreadStackSize","os":"linux","prefix":"-XX:","type":"intx"},
{"availability":"product_pd","component":"runtime","definedIn":"share/runtime/globals.hpp","description":"Compiler Thread Stack Size (in Kbytes)","name":"CompilerThreadStackSize","prefix":"-XX:","range":"range(0, max_intx/(1 * K))","type":"intx"},
{"availability":"define_pd_global","cpu":"sparc","defaultValue":"1024","definedIn":"cpu/sparc/globals_sparc.hpp","name":"CompilerThreadStackSize","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"x86","defaultValue":"512","definedIn":"os_cpu/solaris_x86/globals_solaris_x86.hpp","name":"CompilerThreadStackSize","os":"solaris","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"x86","defaultValue":"0","definedIn":"os_cpu/windows_x86/globals_windows_x86.hpp","name":"CompilerThreadStackSize","os":"windows","prefix":"-XX:","type":"intx"},
{"availability":"product","component":"runtime","defaultValue":"1*G","definedIn":"share/runtime/globals.hpp","description":"Maximum size of class area in Metaspace when compressed \nclass pointers are used","name":"CompressedClassSpaceSize","prefix":"-XX:","range":"range(1*M, 3*G)","type":"size_t"},
{"availability":"develop","component":"c1","defaultValue":"true","definedIn":"share/c1/c1_globals.hpp","description":"Compute additional live set for fpu registers to simplify fpu stack merge (Intel only)","name":"ComputeExactFPURegisterUsage","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"gc","defaultValue":"0","definedIn":"share/gc/shared/gc_globals.hpp","description":"Number of threads concurrent gc will use","name":"ConcGCThreads","prefix":"-XX:","type":"uint"},
{"availability":"develop","component":"gc","defaultValue":"0","definedIn":"share/gc/shared/gc_globals.hpp","description":"If non-zero, assert that GC threads yield within this \nnumber of milliseconds","name":"ConcGCYieldTimeout","prefix":"-XX:","range":"range(0, max_intx)","type":"intx"},
{"availability":"define_pd_global","cpu":"aarch64","defaultValue":"3","definedIn":"cpu/aarch64/c2_globals_aarch64.hpp","name":"ConditionalMoveLimit","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"arm","defaultValue":"4","definedIn":"cpu/arm/c2_globals_arm.hpp","name":"ConditionalMoveLimit","prefix":"-XX:","type":"intx"},
{"availability":"product_pd","component":"c2","definedIn":"share/opto/c2_globals.hpp","description":"Limit of ops to make speculative when using CMOVE","name":"ConditionalMoveLimit","prefix":"-XX:","range":"range(0, max_jint)","type":"intx"},
{"availability":"define_pd_global","cpu":"ppc","defaultValue":"3","definedIn":"cpu/ppc/c2_globals_ppc.hpp","name":"ConditionalMoveLimit","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"s390","defaultValue":"4","definedIn":"cpu/s390/c2_globals_s390.hpp","name":"ConditionalMoveLimit","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"sparc","defaultValue":"4","definedIn":"cpu/sparc/c2_globals_sparc.hpp","name":"ConditionalMoveLimit","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"x86","defaultValue":"3","definedIn":"cpu/x86/c2_globals_x86.hpp","name":"ConditionalMoveLimit","prefix":"-XX:","type":"intx"},
{"availability":"product","component":"runtime","defaultValue":"128","definedIn":"share/runtime/globals.hpp","description":"How many bytes to pad the fields/classes marked @Contended with","name":"ContendedPaddingWidth","prefix":"-XX:","range":"range(0, 8192)","type":"intx"},
{"availability":"develop","component":"c2","defaultValue":"true","definedIn":"share/opto/c2_globals.hpp","description":"Convert cmpD to cmpF when one input is constant in float range","name":"ConvertCmpD2CmpF","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"c2","defaultValue":"true","definedIn":"share/opto/c2_globals.hpp","description":"Convert float2int clipping idiom to integer clipping","name":"ConvertFloat2IntClipping","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Count number of bytecodes executed","name":"CountBytecodes","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Count method invocations","name":"CountCompiledCalls","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Count jni method invocations","name":"CountJNICalls","prefix":"-XX:","type":"bool"},
{"availability":"notproduct","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Count jvm method invocations","name":"CountJVMCalls","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"c1","defaultValue":"false","definedIn":"share/c1/c1_globals.hpp","description":"collect statistic counters during LinearScan","name":"CountLinearScan","prefix":"-XX:","type":"bool"},
{"availability":"notproduct","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Count exceptions that could be replaced by branches due to \ninlining","name":"CountRemovableExceptions","prefix":"-XX:","type":"bool"},
{"availability":"notproduct","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Count VM runtime calls","name":"CountRuntimeCalls","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"500","definedIn":"share/runtime/globals.hpp","description":"The minimum interval (in milliseconds) between invocation of \nCounterDecay","name":"CounterDecayMinIntervalLength","prefix":"-XX:","type":"intx"},
{"availability":"develop","component":"runtime","defaultValue":"30","definedIn":"share/runtime/globals.hpp","description":"Half-life time of invocation counters (in seconds)","name":"CounterHalfLifeTime","prefix":"-XX:","type":"intx"},
{"availability":"notproduct","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Manually make GC thread crash then dump java stack trace; \nTest only","name":"CrashGCForDumpingJavaThread","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"JVM aborts, producing an error log and core/mini dump, on the \nfirst occurrence of an out-of-memory error","name":"CrashOnOutOfMemoryError","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","description":"Create core/mini dump on VM fatal error","name":"CreateCoredumpOnCrash","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","deprecated":"16","description":"Check for critical JNI entry points","expired":"18","name":"CriticalJNINatives","obsoleted":"17","prefix":"-XX:","type":"bool"},
{"availability":"product","cpu":"ppc","defaultValue":"8","definedIn":"cpu/ppc/globals_ppc.hpp","description":"Power8 or later: DPFD (default prefetch depth) value of the \nData Stream Control Register.\n 0: hardware default, 1: none, 2-7: min-max, 8: don't touch","name":"DSCR_DPFD_PPC64","prefix":"-XX:","type":"uint64_t"},
{"availability":"product","cpu":"ppc","defaultValue":"(uintx)-1","definedIn":"cpu/ppc/globals_ppc.hpp","description":"Power8 or later: Specify encoded value for Data Stream Control \nRegister","name":"DSCR_PPC64","prefix":"-XX:","type":"uint64_t"},
{"availability":"product","cpu":"ppc","defaultValue":"8","definedIn":"cpu/ppc/globals_ppc.hpp","description":"Power8 or later: URG (depth attainment urgency) value of the \nData Stream Control Register.\n 0: hardware default, 1: none, 2-7: min-max, 8: don't touch","name":"DSCR_URG_PPC64","prefix":"-XX:","type":"uint64_t"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Enable dtrace probes for object allocation","name":"DTraceAllocProbes","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Enable dtrace probes for method-entry and method-exit","name":"DTraceMethodProbes","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Enable dtrace probes for monitor events","name":"DTraceMonitorProbes","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Tracing various information while debugging deoptimization","name":"DebugDeoptimization","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"c2","defaultValue":"true","definedIn":"share/opto/c2_globals.hpp","description":"If false, restricts profiled locations to the root method only","name":"DebugInlinedCalls","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"runtime","defaultValue":"trueInDebug","definedIn":"share/runtime/globals.hpp","description":"Generate extra debugging information for non-safepoints in \nnmethods","name":"DebugNonSafepoints","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"add debugging code to vtable dispatch","name":"DebugVtables","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","deprecated":"","description":"Set when executing debug methods in debug.cpp \n(to prevent triggering assertions)","expired":"17","name":"Debugging","obsoleted":"16","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"gc","defaultValue":"false","definedIn":"share/gc/shared/gc_globals.hpp","description":"When +ReduceInitialCardMarks, explicitly defer any that \nmay arise from new_pre_store_barrier","name":"DeferInitialCardMark","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","description":"Delay invoking the compiler until main application class is \nloaded","name":"DelayCompilationDuringStartup","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"c1","defaultValue":"true","definedIn":"share/c1/c1_globals.hpp","description":"Use deoptimization in C1","name":"DeoptC1","prefix":"-XX:","type":"bool"},
{"availability":"notproduct","component":"runtime","defaultValue":"5","definedIn":"share/runtime/globals.hpp","description":"Number of exits until DeoptimizeALot kicks in","name":"DeoptimizeALotInterval","prefix":"-XX:","type":"intx"},
{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Deoptimize at every exit from the runtime system","name":"DeoptimizeALot","prefix":"-XX:","type":"bool"},
{"availability":"notproduct","component":"runtime","defaultValue":"<br>","definedIn":"share/runtime/globals.hpp","description":"A comma separated list of bcis to deoptimize at","name":"DeoptimizeOnlyAt","prefix":"-XX:","type":"ccstrlist"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Deoptimize random frames on random exit from the runtime system","name":"DeoptimizeRandom","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"8000","definedIn":"share/runtime/globals.hpp","description":"The desired maximum method size (in bytecodes) after inlining","name":"DesiredMethodLimit","prefix":"-XX:","type":"intx"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Disable mechanism that allows tools to attach to this VM","name":"DisableAttachMechanism","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"gc","defaultValue":"false","definedIn":"share/gc/shared/gc_globals.hpp","description":"Ignore calls to System.gc()","name":"DisableExplicitGC","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"runtime","defaultValue":"<br>","definedIn":"share/runtime/globals.hpp","description":"do not expand intrinsics whose (internal) names appear here","name":"DisableIntrinsic","prefix":"-XX:","type":"ccstrlist"},
{"availability":"experimental","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Disable the use of stack guard pages if the JVM is loaded \non the primordial process thread","name":"DisablePrimordialThreadGuardPages","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Disable starting of additional Java threads \n(for debugging only)","name":"DisableStartThread","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"If DisplayVMOutput is true, display all VM output to stderr","name":"DisplayVMOutputToStderr","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"If DisplayVMOutput is true, display all VM output to stdout","name":"DisplayVMOutputToStdout","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","description":"Display all VM output on the tty, independently of LogVMOutput","name":"DisplayVMOutput","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"c1","defaultValue":"true","definedIn":"share/c1/c1_globals.hpp","description":"Do Conditional Expression Elimination to simplify CFG","name":"DoCEE","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"c2","defaultValue":"true","definedIn":"share/opto/c2_globals.hpp","description":"Perform escape analysis","name":"DoEscapeAnalysis","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"c2","defaultValue":"true","definedIn":"share/opto/c2_globals.hpp","description":"Create reserve copy of graph in SuperWord.","name":"DoReserveCopyInSuperWord","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"c2","defaultValue":"1000","definedIn":"share/opto/c2_globals.hpp","description":"Iterations limit in Node::dominates","name":"DominatorSearchLimit","prefix":"-XX:","range":"range(0, max_jint)","type":"intx"},
{"availability":"product","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","description":"Do not compile methods > HugeMethodLimit","name":"DontCompileHugeMethods","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"10","definedIn":"share/runtime/globals.hpp","description":"Interval between which yields will be dropped (milliseconds)","name":"DontYieldALotInterval","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"ppc","defaultValue":"false","definedIn":"os_cpu/aix_ppc/globals_aix_ppc.hpp","name":"DontYieldALot","os":"aix","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"x86","defaultValue":"false","definedIn":"os_cpu/bsd_x86/globals_bsd_x86.hpp","name":"DontYieldALot","os":"bsd","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"zero","defaultValue":"false","definedIn":"os_cpu/bsd_zero/globals_bsd_zero.hpp","name":"DontYieldALot","os":"bsd","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"aarch64","defaultValue":"false","definedIn":"os_cpu/linux_aarch64/globals_linux_aarch64.hpp","name":"DontYieldALot","os":"linux","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"arm","defaultValue":"false","definedIn":"os_cpu/linux_arm/globals_linux_arm.hpp","name":"DontYieldALot","os":"linux","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"ppc","defaultValue":"false","definedIn":"os_cpu/linux_ppc/globals_linux_ppc.hpp","name":"DontYieldALot","os":"linux","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"s390","defaultValue":"false","definedIn":"os_cpu/linux_s390/globals_linux_s390.hpp","name":"DontYieldALot","os":"linux","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"x86","defaultValue":"false","definedIn":"os_cpu/linux_x86/globals_linux_x86.hpp","name":"DontYieldALot","os":"linux","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"zero","defaultValue":"false","definedIn":"os_cpu/linux_zero/globals_linux_zero.hpp","name":"DontYieldALot","os":"linux","prefix":"-XX:","type":"bool"},
{"availability":"product_pd","component":"runtime","definedIn":"share/runtime/globals.hpp","description":"Throw away obvious excess yield calls","name":"DontYieldALot","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","comment":"// yield no more than 100 times per second","cpu":"sparc","defaultValue":"true","definedIn":"cpu/sparc/globals_sparc.hpp","name":"DontYieldALot","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","comment":"// Determined in the design center","cpu":"x86","defaultValue":"true","definedIn":"os_cpu/solaris_x86/globals_solaris_x86.hpp","name":"DontYieldALot","os":"solaris","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"x86","defaultValue":"false","definedIn":"os_cpu/windows_x86/globals_windows_x86.hpp","name":"DontYieldALot","os":"windows","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"NULL","definedIn":"share/runtime/globals.hpp","description":"Dump the names all loaded classes, that could be stored into \nthe CDS archive, in the specified file","name":"DumpLoadedClassList","prefix":"-XX:","type":"ccstr"},
{"availability":"diagnostic","defaultValue":"true","definedIn":"os/linux/globals_linux.hpp","description":"If true, sets bit 2 of /proc/PID/coredump_filter, thus \nresulting in file-backed private mappings of the process to \nbe dumped into the corefile.","name":"DumpPrivateMappingsInCore","os":"linux","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","description":"Record replay data for crashing compiler threads","name":"DumpReplayDataOnError","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","defaultValue":"true","definedIn":"os/linux/globals_linux.hpp","description":"If true, sets bit 3 of /proc/PID/coredump_filter, thus \nresulting in file-backed shared mappings of the process to \nbe dumped into the corefile.","name":"DumpSharedMappingsInCore","os":"linux","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Special mode: JVM reads a class list, loads classes, builds \nshared spaces, and dumps the shared spaces to a file to be \nused in future JVM runs","name":"DumpSharedSpaces","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","description":"Dynamically resize system dictionaries as needed","name":"DynamicallyResizeSystemDictionaries","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Eagerly initialize classes if possible","name":"EagerInitialization","prefix":"-XX:","type":"bool"},
{"availability":"experimental","component":"jvmci","defaultValue":"false","definedIn":"share/jvmci/jvmci_globals.hpp","description":"Force eager JVMCI initialization","name":"EagerJVMCI","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Eagerly initialize -Xrun libraries; allows startup profiling, \nbut not all -Xrun libraries may support the state of the VM \nat this time","name":"EagerXrunInit","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"c2","defaultValue":"64","definedIn":"share/opto/c2_globals.hpp","description":"Array size (number of elements) limit for scalar replacement","name":"EliminateAllocationArraySizeLimit","prefix":"-XX:","range":"range(0, max_jint)","type":"intx"},
{"availability":"product","component":"c2","defaultValue":"true","definedIn":"share/opto/c2_globals.hpp","description":"Use escape analysis to eliminate allocations","name":"EliminateAllocations","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"c2","defaultValue":"true","definedIn":"share/opto/c2_globals.hpp","description":"Control optimizations for autobox elimination","name":"EliminateAutoBox","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"c1","defaultValue":"true","definedIn":"share/c1/c1_globals.hpp","description":"Eliminate unneccessary basic blocks","name":"EliminateBlocks","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"c1","defaultValue":"true","definedIn":"share/c1/c1_globals.hpp","description":"Optimize field loads and stores","name":"EliminateFieldAccess","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"c2","defaultValue":"true","definedIn":"share/opto/c2_globals.hpp","description":"Coarsen locks when possible","name":"EliminateLocks","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"c2","defaultValue":"true","definedIn":"share/opto/c2_globals.hpp","description":"Eliminate nested locks of the same object when possible","name":"EliminateNestedLocks","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"c1","defaultValue":"true","definedIn":"share/c1/c1_globals.hpp","description":"Eliminate unneccessary null checks","name":"EliminateNullChecks","prefix":"-XX:","type":"bool"},
{"availability":"experimental","component":"runtime","defaultValue":"0","definedIn":"share/runtime/globals.hpp","deprecated":"","description":"(Unsafe, Unstable) \nControl emission of inline sync fast-path code","expired":"13","name":"EmitSync","obsoleted":"12","prefix":"-XX:","type":"intx"},
{"availability":"product","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","description":"Enable @Contended annotation support","name":"EnableContended","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","description":"Allow tools to load agents with the attach mechanism","name":"EnableDynamicAgentLoading","prefix":"-XX:","type":"bool"},
{"availability":"experimental","component":"jvmci","defaultValue":"false","definedIn":"share/jvmci/jvmci_globals.hpp","description":"Enable JVMCI","name":"EnableJVMCI","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","description":"Enable Thread SMR extra validity checks","name":"EnableThreadSMRExtraValidityChecks","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"runtime","defaultValue":"trueInDebug","definedIn":"share/runtime/globals.hpp","description":"Enable Thread SMR Statistics","name":"EnableThreadSMRStatistics","prefix":"-XX:","type":"bool"},
{"availability":"experimental","component":"gc","defaultValue":"true","definedIn":"share/gc/epsilon/epsilon_globals.hpp","description":"Use timed decays to shrik TLAB sizes. This conserves memory \nfor the threads that allocate in bursts of different sizes, \nfor example the small/rare allocations coming after the initial \nlarge burst.","name":"EpsilonElasticTLABDecay","prefix":"-XX:","type":"bool"},
{"availability":"experimental","component":"gc","defaultValue":"true","definedIn":"share/gc/epsilon/epsilon_globals.hpp","description":"Use elastic policy to manage TLAB sizes. This conserves memory \nfor non-actively allocating threads, even when they request \nlarge TLABs for themselves. Active threads would experience \nsmaller TLABs until policy catches up.","name":"EpsilonElasticTLAB","prefix":"-XX:","type":"bool"},
{"availability":"experimental","component":"gc","defaultValue":"4 * M","definedIn":"share/gc/epsilon/epsilon_globals.hpp","description":"Max TLAB size to use with Epsilon GC. Larger value improves \nperformance at the expense of per-thread memory waste. This \nasks TLAB machinery to cap TLAB sizes at this value.","name":"EpsilonMaxTLABSize","prefix":"-XX:","range":"range(1, max_intx)","type":"size_t"},
{"availability":"experimental","component":"gc","defaultValue":"128 * M","definedIn":"share/gc/epsilon/epsilon_globals.hpp","description":"Min expansion step for heap. Larger value improves performance \nat the potential expense of memory waste.","name":"EpsilonMinHeapExpand","prefix":"-XX:","range":"range(1, max_intx)","type":"size_t"},
{"availability":"experimental","component":"gc","defaultValue":"20","definedIn":"share/gc/epsilon/epsilon_globals.hpp","description":"Print heap occupancy stats with this number of steps. \n\n0 turns the printing off.","name":"EpsilonPrintHeapSteps","prefix":"-XX:","range":"range(0, max_intx)","type":"size_t"},
{"availability":"experimental","component":"gc","defaultValue":"1000","definedIn":"share/gc/epsilon/epsilon_globals.hpp","description":"TLAB sizing policy decays to initial size after thread had not \nallocated for this long. Time is in milliseconds. Lower value \nimproves memory footprint, but penalizes actively allocating \nthreads.","name":"EpsilonTLABDecayTime","prefix":"-XX:","range":"range(1, max_intx)","type":"size_t"},
{"availability":"experimental","component":"gc","defaultValue":"1.1","definedIn":"share/gc/epsilon/epsilon_globals.hpp","description":"Multiplier to use when deciding on next TLAB size. Larger value \nimproves performance at the expense of per-thread memory waste. \nLower value improves memory footprint, but penalizes actively \nallocating threads.","name":"EpsilonTLABElasticity","prefix":"-XX:","range":"range(1.0, DBL_MAX)","type":"double"},
{"availability":"experimental","component":"gc","defaultValue":"1 * M","definedIn":"share/gc/epsilon/epsilon_globals.hpp","description":"Update heap occupancy counters after allocating this much \nmemory. Higher values would make allocations faster at \nthe expense of lower resolution in heap counters.","name":"EpsilonUpdateCountersStep","prefix":"-XX:","range":"range(1, max_intx)","type":"size_t"},
{"availability":"product","component":"gc","defaultValue":"0","definedIn":"share/gc/shared/gc_globals.hpp","description":"Maximum ergonomically set heap size (in bytes); zero means use \nMaxRAM * MaxRAMPercentage / 100","name":"ErgoHeapSizeLimit","prefix":"-XX:","range":"range(0, max_uintx)","type":"size_t"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"If true, error data is printed to stderr instead of a file","name":"ErrorFileToStderr","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"If true, error data is printed to stdout instead of a file","name":"ErrorFileToStdout","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"NULL","definedIn":"share/runtime/globals.hpp","description":"If an error occurs, save the error data to this file \n[default: ./hs_err_pid%p.log] (%p replaced with pid)","name":"ErrorFile","prefix":"-XX:","type":"ccstr"},
{"availability":"notproduct","component":"runtime","defaultValue":"0","definedIn":"share/runtime/globals.hpp","description":"If > 0, provokes an error after VM initialization; the value \ndetermines which error to provoke. See test_error_handler() \nin vmError.cpp.","name":"ErrorHandlerTest","prefix":"-XX:","type":"uintx"},
{"availability":"product","component":"runtime","defaultValue":"2 * 60","definedIn":"share/runtime/globals.hpp","description":"Timeout, in seconds, to limit the time spent on writing an \nerror log in case of a crash.","name":"ErrorLogTimeout","prefix":"-XX:","range":"range(0, (uint64_t)max_jlong/1000)","type":"uint64_t"},
{"availability":"product","component":"runtime","defaultValue":"NULL","definedIn":"share/runtime/globals.hpp","deprecated":"","description":"Override built-in error report server address","expired":"13","name":"ErrorReportServer","obsoleted":"12","prefix":"-XX:","type":"ccstr"},
{"availability":"product","component":"c2","defaultValue":"20. DEBUG_ONLY(+40.)","definedIn":"share/opto/c2_globals.hpp","description":"Abort EA when it reaches time limit (in sec)","name":"EscapeAnalysisTimeout","prefix":"-XX:","range":"range(0, DBL_MAX)","type":"double"},
{"availability":"product","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","description":"Analyze bytecodes to estimate escape state of arguments","name":"EstimateArgEscape","prefix":"-XX:","type":"bool"},
{"availability":"notproduct","component":"gc","defaultValue":"false","definedIn":"share/gc/shared/gc_globals.hpp","description":"Enable execution of internal VM tests","name":"ExecuteInternalVMTests","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"gc","defaultValue":"false","definedIn":"share/gc/shared/gc_globals.hpp","description":"Whether the JVM is running unit tests or not","name":"ExecutingUnitTests","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"c2","defaultValue":"true","definedIn":"share/opto/c2_globals.hpp","description":"Exit or throw assert in EA when it reaches time limit","name":"ExitEscapeAnalysisOnTimeout","prefix":"-XX:","type":"bool"},
{"availability":"notproduct","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Exit the VM if we fill the code cache","name":"ExitOnFullCodeCache","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"JVM exits on the first occurrence of an out-of-memory error","name":"ExitOnOutOfMemoryError","prefix":"-XX:","type":"bool"},
{"availability":"notproduct","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"standard exit from VM if bytecode verify error \n(only in debug mode)","name":"ExitVMOnVerifyError","prefix":"-XX:","type":"bool"},
{"availability":"product","cpu":"s390","defaultValue":"true","definedIn":"cpu/s390/globals_s390.hpp","description":"Expand the assembler \ninstruction required to load the base from DecodeN_NN nodes \nduring matching.","name":"ExpandLoadingBaseDecode_NN","prefix":"-XX:","type":"bool"},
{"availability":"product","cpu":"s390","defaultValue":"true","definedIn":"cpu/s390/globals_s390.hpp","description":"Expand the assembler \ninstruction required to load the base from DecodeN nodes during \nmatching.","name":"ExpandLoadingBaseDecode","prefix":"-XX:","type":"bool"},
{"availability":"product","cpu":"s390","defaultValue":"true","definedIn":"cpu/s390/globals_s390.hpp","description":"Expand the assembler \ninstruction required to load the base from EncodeP_NN nodes \nduring matching.","name":"ExpandLoadingBaseEncode_NN","prefix":"-XX:","type":"bool"},
{"availability":"product","cpu":"s390","defaultValue":"true","definedIn":"cpu/s390/globals_s390.hpp","description":"Expand the assembler \ninstruction required to load the base from EncodeP nodes during \nmatching.","name":"ExpandLoadingBaseEncode","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"gc","defaultValue":"false","definedIn":"share/gc/shared/gc_globals.hpp","description":"A System.gc() request invokes a concurrent collection; \n(effective only when using concurrent collectors)","name":"ExplicitGCInvokesConcurrent","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Enable performance-impacting dtrace probes","name":"ExtendedDTraceProbes","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"PRODUCT_ONLY(false) NOT_PRODUCT(true)","definedIn":"share/runtime/globals.hpp","description":"Error reports are more extensive.","name":"ExtensiveErrorReports","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"NULL","definedIn":"share/runtime/globals.hpp","description":"Extra classlist for building the CDS archive file","name":"ExtraSharedClassListFile","prefix":"-XX:","type":"ccstr"},
{"availability":"define_pd_global","cpu":"aarch64","defaultValue":"64","definedIn":"cpu/aarch64/c2_globals_aarch64.hpp","name":"FLOATPRESSURE","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"arm","defaultValue":"30","definedIn":"cpu/arm/c2_globals_arm.hpp","name":"FLOATPRESSURE","prefix":"-XX:","type":"intx"},
{"availability":"develop_pd","component":"c2","definedIn":"share/opto/c2_globals.hpp","description":"Number of float LRG's that constitute high register pressure","name":"FLOATPRESSURE","prefix":"-XX:","range":"range(0, max_jint)","type":"intx"},
{"availability":"define_pd_global","cpu":"ppc","defaultValue":"28","definedIn":"cpu/ppc/c2_globals_ppc.hpp","name":"FLOATPRESSURE","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"s390","defaultValue":"15","definedIn":"cpu/s390/c2_globals_s390.hpp","name":"FLOATPRESSURE","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","comment":"// C2 on V9 gets to use all the float/double registers","cpu":"sparc","defaultValue":"52","definedIn":"cpu/sparc/c2_globals_sparc.hpp","name":"FLOATPRESSURE","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"x86","defaultValue":"6","definedIn":"cpu/x86/c2_globals_x86.hpp","name":"FLOATPRESSURE","prefix":"-XX:","type":"intx"},
{"availability":"product","component":"gc","defaultValue":"false","definedIn":"share/gc/cms/cms_globals.hpp","deprecated":"","description":"CMS: larger free blocks are always available for coalescing","expired":"15","name":"FLSAlwaysCoalesceLarge","obsoleted":"14","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"gc","defaultValue":"2","definedIn":"share/gc/cms/cms_globals.hpp","deprecated":"","description":"CMS: aggressiveness level for coalescing, increasing \nfrom 0 to 4","expired":"15","name":"FLSCoalescePolicy","obsoleted":"14","prefix":"-XX:","range":"range(0, 4)","type":"uintx"},
{"availability":"product","component":"gc","defaultValue":"0.99","definedIn":"share/gc/cms/cms_globals.hpp","deprecated":"","description":"CMS: the smaller the percentage the greater the coalescing \nforce","expired":"15","name":"FLSLargestBlockCoalesceProximity","obsoleted":"14","prefix":"-XX:","range":"range(0.0, 1.0)","type":"double"},
{"availability":"diagnostic","component":"gc","defaultValue":"false","definedIn":"share/gc/cms/cms_globals.hpp","description":"Verify that all references across the FLS boundary \nare to valid objects","name":"FLSVerifyAllHeapReferences","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Do lots of (expensive) FLS dictionary verification","name":"FLSVerifyDictionary","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"gc","defaultValue":"false","definedIn":"share/gc/cms/cms_globals.hpp","description":"Do lots of (expensive) FLS index table verification","name":"FLSVerifyIndexTable","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"gc","defaultValue":"false","definedIn":"share/gc/cms/cms_globals.hpp","description":"Do lots of (expensive) FreeListSpace verification","name":"FLSVerifyLists","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","deprecated":"","description":"Fail over to old verifier when split verifier fails","expired":"15","name":"FailOverToOldVerifier","obsoleted":"14","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"128*K","definedIn":"share/runtime/globals.hpp","description":"/* Note: This value is zero mod 1<<13 for a cheap sparc set. */Inline allocations larger than this in doublewords must go slow","name":"FastAllocateSizeLimit","prefix":"-XX:","type":"intx"},
{"availability":"develop","component":"runtime","defaultValue":"8","definedIn":"share/runtime/globals.hpp","description":"Depth of hardwired instanceof accelerator array","name":"FastSuperclassLimit","prefix":"-XX:","type":"intx"},
{"availability":"product","component":"runtime","defaultValue":"1","definedIn":"share/runtime/globals.hpp","deprecated":"14","description":"0 - type based with oops first, \n\n1 - with oops last, \n\n2 - oops in super and sub classes are together","expired":"16","name":"FieldsAllocationStyle","obsoleted":"15","prefix":"-XX:","range":"range(0, 2)","type":"intx"},
{"availability":"develop","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","description":"Fill delay slots (on SPARC only)","name":"FillDelaySlots","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","description":"When true prevents OS-level spurious, or premature, wakeups \nfrom Object.wait (Ignored for Windows)","name":"FilterSpuriousWakeups","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"NULL","definedIn":"share/runtime/globals.hpp","description":"Flight Recorder options","name":"FlightRecorderOptions","prefix":"-XX:","type":"ccstr"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","deprecated":"13","description":"Enable Flight Recorder","expired":"","name":"FlightRecorder","obsoleted":"","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","description":"Optimize loads from stable fields (marked w/ @Stable)","name":"FoldStableValues","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"gc","defaultValue":"false","definedIn":"share/gc/shared/gc_globals.hpp","description":"Force dynamic selection of the number of \nparallel threads parallel gc will use to aid debugging","name":"ForceDynamicNumberOfGCThreads","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"trueInDebug","definedIn":"share/runtime/globals.hpp","description":"Force exceptions on FP stack under/overflow","name":"ForceFloatExceptions","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","deprecated":"15","description":"Force NUMA optimizations on single-node/UMA systems","expired":"17","name":"ForceNUMA","obsoleted":"16","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Using high time resolution (for Win32 only)","name":"ForceTimeHighResolution","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Make all non code cache addresses to be unreachable by \nforcing use of 64bit literal fixups","name":"ForceUnreachable","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"c2","defaultValue":"1","definedIn":"share/opto/c2_globals.hpp","description":"Scaling factor for branch frequencies (deprecated)","name":"FreqCountInvocations","prefix":"-XX:","range":"range(1, max_intx)","type":"intx"},
{"availability":"define_pd_global","cpu":"aarch64","defaultValue":"325","definedIn":"cpu/aarch64/c1_globals_aarch64.hpp","name":"FreqInlineSize","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"arm","defaultValue":"175","definedIn":"cpu/arm/c2_globals_arm.hpp","name":"FreqInlineSize","prefix":"-XX:","type":"intx"},
{"availability":"product_pd","component":"runtime","definedIn":"share/runtime/globals.hpp","description":"The maximum bytecode size of a frequent method to be inlined","name":"FreqInlineSize","prefix":"-XX:","range":"range(0, max_jint)","type":"intx"},
{"availability":"define_pd_global","cpu":"ppc","defaultValue":"325","definedIn":"cpu/ppc/c1_globals_ppc.hpp","name":"FreqInlineSize","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"s390","defaultValue":"175","definedIn":"cpu/s390/c2_globals_s390.hpp","name":"FreqInlineSize","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"sparc","defaultValue":"325","definedIn":"cpu/sparc/c1_globals_sparc.hpp","name":"FreqInlineSize","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"x86","defaultValue":"325","definedIn":"cpu/x86/c1_globals_x86.hpp","name":"FreqInlineSize","prefix":"-XX:","type":"intx"},
{"availability":"notproduct","component":"gc","defaultValue":"32*K","definedIn":"share/gc/shared/gc_globals.hpp","description":"Dummy object allocated with +FullGCALot, forcing all objects \nto move","name":"FullGCALotDummies","prefix":"-XX:","type":"intx"},
{"availability":"notproduct","component":"gc","defaultValue":"1","definedIn":"share/gc/shared/gc_globals.hpp","description":"Interval between which full gc will occur with +FullGCALot","name":"FullGCALotInterval","prefix":"-XX:","type":"intx"},
{"availability":"notproduct","component":"gc","defaultValue":"0","definedIn":"share/gc/shared/gc_globals.hpp","description":"For which invocation to start FullGCAlot","name":"FullGCALotStart","prefix":"-XX:","type":"intx"},
{"availability":"develop","component":"gc","defaultValue":"false","definedIn":"share/gc/shared/gc_globals.hpp","description":"Force full gc at every Nth exit from the runtime system \n(N=FullGCALotInterval)","name":"FullGCALot","prefix":"-XX:","type":"bool"},
{"availability":"experimental","component":"gc","defaultValue":"3","definedIn":"share/gc/g1/g1_globals.hpp","description":"How many completed time periods from initial mark to first \nmixed gc are required to use the input values for prediction \nof the optimal occupancy to start marking.","name":"G1AdaptiveIHOPNumInitialSamples","prefix":"-XX:","range":"range(1, max_intx)","type":"size_t"},
{"availability":"product","component":"gc","defaultValue":"10.0","definedIn":"share/gc/g1/g1_globals.hpp","description":"Target duration of individual concurrent marking steps \nin milliseconds.","name":"G1ConcMarkStepDurationMillis","prefix":"-XX:","range":"range(1.0, DBL_MAX)","type":"double"},
{"availability":"product","component":"gc","defaultValue":"4","definedIn":"share/gc/g1/g1_globals.hpp","description":"The threshold that defines (>=) a hot card.","name":"G1ConcRSHotCardLimit","prefix":"-XX:","range":"range(0, max_jubyte)","type":"uintx"},
{"availability":"product","component":"gc","defaultValue":"10","definedIn":"share/gc/g1/g1_globals.hpp","description":"Log base 2 of the length of conc RS hot-card cache.","name":"G1ConcRSLogCacheSize","prefix":"-XX:","range":"range(0, 27)","type":"size_t"},
{"availability":"product","component":"gc","defaultValue":"0","definedIn":"share/gc/g1/g1_globals.hpp","description":"The number of update buffers that are left in the queue by the \nconcurrent processing threads. Will be selected ergonomically \nby default.","name":"G1ConcRefinementGreenZone","prefix":"-XX:","range":"range(0, max_intx)","type":"size_t"},
{"availability":"product","component":"gc","defaultValue":"0","definedIn":"share/gc/g1/g1_globals.hpp","description":"Maximum number of enqueued update buffers before mutator \nthreads start processing new ones instead of enqueueing them. \nWill be selected ergonomically by default.","name":"G1ConcRefinementRedZone","prefix":"-XX:","range":"range(0, max_intx)","type":"size_t"},
{"availability":"product","component":"gc","defaultValue":"300","definedIn":"share/gc/g1/g1_globals.hpp","description":"The last concurrent refinement thread wakes up every \nspecified number of milliseconds to do miscellaneous work.","name":"G1ConcRefinementServiceIntervalMillis","prefix":"-XX:","range":"range(0, max_jint)","type":"uintx"},
{"availability":"product","component":"gc","defaultValue":"0","definedIn":"share/gc/g1/g1_globals.hpp","description":"The number of parallel rem set update threads. \nWill be set ergonomically by default.","name":"G1ConcRefinementThreads","prefix":"-XX:","range":"range(0, (max_jint-1)/wordSize)","type":"uint"},
{"availability":"product","component":"gc","defaultValue":"2","definedIn":"share/gc/g1/g1_globals.hpp","description":"Each time the rset update queue increases by this amount \nactivate the next refinement thread if available. \nThe actual step size will be selected ergonomically by \ndefault, with this value used to determine a lower bound.","name":"G1ConcRefinementThresholdStep","prefix":"-XX:","range":"range(1, SIZE_MAX)","type":"size_t"},
{"availability":"product","component":"gc","defaultValue":"0","definedIn":"share/gc/g1/g1_globals.hpp","description":"Number of enqueued update buffers that will \ntrigger concurrent processing. Will be selected ergonomically \nby default.","name":"G1ConcRefinementYellowZone","prefix":"-XX:","range":"range(0, max_intx)","type":"size_t"},
{"availability":"product","component":"gc","defaultValue":"50","definedIn":"share/gc/g1/g1_globals.hpp","description":"Confidence level for MMU/pause predictions","name":"G1ConfidencePercent","prefix":"-XX:","range":"range(0, 100)","type":"uintx"},
{"availability":"develop","component":"gc","defaultValue":"0","definedIn":"share/gc/g1/g1_globals.hpp","description":"The number of dummy regions G1 will allocate at the end of \neach evacuation pause in order to artificially fill up the \nheap and stress the marking implementation.","name":"G1DummyRegionsPerGC","prefix":"-XX:","type":"uintx"},
{"availability":"experimental","component":"gc","defaultValue":"true","definedIn":"share/gc/g1/g1_globals.hpp","description":"Try to reclaim dead large objects that have a few stale \nreferences at every young GC.","name":"G1EagerReclaimHumongousObjectsWithStaleRefs","prefix":"-XX:","type":"bool"},
{"availability":"experimental","component":"gc","defaultValue":"true","definedIn":"share/gc/g1/g1_globals.hpp","description":"Try to reclaim dead large objects at every young GC.","name":"G1EagerReclaimHumongousObjects","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"gc","defaultValue":"1000","definedIn":"share/gc/g1/g1_globals.hpp","description":"Number of successful evacuations between evacuation failures \noccurring at object copying","name":"G1EvacuationFailureALotCount","prefix":"-XX:","type":"uintx"},
{"availability":"develop","component":"gc","defaultValue":"true","definedIn":"share/gc/g1/g1_globals.hpp","description":"Force use of evacuation failure handling during evacuation \npauses when marking is in progress","name":"G1EvacuationFailureALotDuringConcMark","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"gc","defaultValue":"true","definedIn":"share/gc/g1/g1_globals.hpp","description":"Force use of evacuation failure handling during initial mark \nevacuation pauses","name":"G1EvacuationFailureALotDuringInitialMark","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"gc","defaultValue":"true","definedIn":"share/gc/g1/g1_globals.hpp","description":"Force use of evacuation failure handling during mixed \nevacuation pauses","name":"G1EvacuationFailureALotDuringMixedGC","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"gc","defaultValue":"true","definedIn":"share/gc/g1/g1_globals.hpp","description":"Force use of evacuation failure handling during young \nevacuation pauses","name":"G1EvacuationFailureALotDuringYoungGC","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"gc","defaultValue":"5","definedIn":"share/gc/g1/g1_globals.hpp","description":"Total collections between forced triggering of evacuation \nfailures","name":"G1EvacuationFailureALotInterval","prefix":"-XX:","type":"uintx"},
{"availability":"notproduct","component":"gc","defaultValue":"false","definedIn":"share/gc/g1/g1_globals.hpp","description":"Force use of evacuation failure handling during certain \nevacuation pauses","name":"G1EvacuationFailureALot","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"gc","defaultValue":"false","definedIn":"share/gc/g1/g1_globals.hpp","description":"Raise a fatal VM exit out of memory failure in the event \n that heap expansion fails due to running out of swap.","name":"G1ExitOnExpansionFailure","prefix":"-XX:","type":"bool"},
{"availability":"experimental","component":"gc","defaultValue":"20","definedIn":"share/gc/g1/g1_globals.hpp","description":"When expanding, % of uncommitted space to claim.","name":"G1ExpandByPercentOfAvailable","prefix":"-XX:","range":"range(0, 100)","type":"intx"},
{"availability":"develop","component":"gc","defaultValue":"true","definedIn":"share/gc/g1/g1_globals.hpp","description":"When true, use sparse table to save space.","name":"G1HRRSUseSparseTable","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"gc","defaultValue":"0","definedIn":"share/gc/g1/g1_globals.hpp","description":"Size of the G1 regions.","name":"G1HeapRegionSize","prefix":"-XX:","range":"range(0, 32*M)","type":"size_t"},
{"availability":"product","component":"gc","defaultValue":"5","definedIn":"share/gc/g1/g1_globals.hpp","description":"Amount of space, expressed as a percentage of the heap size, \nthat G1 is willing not to collect to avoid expensive GCs.","name":"G1HeapWastePercent","prefix":"-XX:","range":"range(0, 100)","type":"uintx"},
{"availability":"experimental","component":"gc","defaultValue":"50.0","definedIn":"share/gc/g1/g1_globals.hpp","description":"The expected average occupancy of the last PLAB in \npercent.","name":"G1LastPLABAverageOccupancy","prefix":"-XX:","range":"range(0.001, 100.0)","type":"double"},
{"availability":"experimental","component":"gc","defaultValue":"60","definedIn":"share/gc/g1/g1_globals.hpp","description":"Percentage (0-100) of the heap size to use as default \n maximum young gen size.","name":"G1MaxNewSizePercent","prefix":"-XX:","range":"range(0, 100)","type":"uintx"},
{"availability":"develop","component":"gc","defaultValue":"-1","definedIn":"share/gc/g1/g1_globals.hpp","description":"The maximum number of verification failures to print. \n-1 means print all.","name":"G1MaxVerifyFailures","prefix":"-XX:","range":"range(-1, max_jint)","type":"intx"},
{"availability":"product","component":"gc","defaultValue":"8","definedIn":"share/gc/g1/g1_globals.hpp","description":"The target number of mixed GCs after a marking cycle.","name":"G1MixedGCCountTarget","prefix":"-XX:","range":"range(0, max_uintx)","type":"uintx"},
{"availability":"experimental","component":"gc","defaultValue":"85","definedIn":"share/gc/g1/g1_globals.hpp","description":"Threshold for regions to be considered for inclusion in the \ncollection set of mixed GCs. \nRegions with live bytes exceeding this will not be collected.","name":"G1MixedGCLiveThresholdPercent","prefix":"-XX:","range":"range(0, 100)","type":"uintx"},
{"availability":"experimental","component":"gc","defaultValue":"5","definedIn":"share/gc/g1/g1_globals.hpp","description":"Percentage (0-100) of the heap size to use as default \nminimum young gen size.","name":"G1NewSizePercent","prefix":"-XX:","range":"range(0, 100)","type":"uintx"},
{"availability":"experimental","component":"gc","defaultValue":"10","definedIn":"share/gc/g1/g1_globals.hpp","description":"An upper bound for the number of old CSet regions expressed \nas a percentage of the heap size.","name":"G1OldCSetRegionThresholdPercent","prefix":"-XX:","range":"range(0, 100)","type":"uintx"},
{"availability":"experimental","component":"gc","defaultValue":"false","definedIn":"share/gc/g1/g1_globals.hpp","description":"Pre-touch large auxiliary data structures used by the GC.","name":"G1PretouchAuxiliaryMemory","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"gc","defaultValue":"256","definedIn":"share/gc/g1/g1_globals.hpp","description":"Max number of regions in a fine-grain table per MB.","name":"G1RSetRegionEntriesBase","prefix":"-XX:","range":"range(1, max_jint/wordSize)","type":"intx"},
{"availability":"product","component":"gc","defaultValue":"0","definedIn":"share/gc/g1/g1_globals.hpp","description":"Max number of regions for which we keep bitmaps.\nWill be set ergonomically by default","name":"G1RSetRegionEntries","prefix":"-XX:","range":"range(0, max_jint/wordSize)","type":"intx"},
{"availability":"product","component":"gc","defaultValue":"64","definedIn":"share/gc/g1/g1_globals.hpp","deprecated":"14","description":"Size of a work unit of cards claimed by a worker thread\nduring RSet scanning.","expired":"16","name":"G1RSetScanBlockSize","obsoleted":"15","prefix":"-XX:","range":"range(1, max_uintx)","type":"size_t"},
{"availability":"develop","component":"gc","defaultValue":"4","definedIn":"share/gc/g1/g1_globals.hpp","description":"Max number of entries per region in a sparse table \nper MB.","name":"G1RSetSparseRegionEntriesBase","prefix":"-XX:","range":"range(1, max_jint/wordSize)","type":"intx"},
{"availability":"product","component":"gc","defaultValue":"0","definedIn":"share/gc/g1/g1_globals.hpp","description":"Max number of entries per region in a sparse table.\nWill be set ergonomically by default.","name":"G1RSetSparseRegionEntries","prefix":"-XX:","range":"range(0, max_jint/wordSize)","type":"intx"},
{"availability":"product","component":"gc","defaultValue":"10","definedIn":"share/gc/g1/g1_globals.hpp","description":"A target percentage of time that is allowed to be spend on \nprocess RS update buffers during the collection pause.","name":"G1RSetUpdatingPauseTimePercent","prefix":"-XX:","range":"range(0, 100)","type":"intx"},
{"availability":"experimental","component":"gc","defaultValue":"256 * K","definedIn":"share/gc/g1/g1_globals.hpp","description":"Chunk size used for rebuilding the remembered set.","name":"G1RebuildRemSetChunkSize","prefix":"-XX:","range":"range(4 * K, 32 * M)","type":"size_t"},
{"availability":"product","component":"gc","defaultValue":"1000","definedIn":"share/gc/g1/g1_globals.hpp","description":"The number of discovered reference objects to process before \ndraining concurrent marking work queues.","name":"G1RefProcDrainInterval","prefix":"-XX:","range":"range(1, INT_MAX)","type":"uint"},
{"availability":"product","component":"gc","defaultValue":"10","definedIn":"share/gc/g1/g1_globals.hpp","description":"It determines the minimum reserve we should have in the heap \nto minimize the probability of promotion failure.","name":"G1ReservePercent","prefix":"-XX:","range":"range(0, 50)","type":"uintx"},
{"availability":"product","component":"gc","defaultValue":"60","definedIn":"share/gc/g1/g1_globals.hpp","description":"Before enqueueing them, each mutator thread tries to do some \nfiltering on the SATB buffers it generates. If post-filtering \nthe percentage of retained entries is over this threshold \nthe buffer will be enqueued for processing. A value of 0 \nspecifies that mutator threads should not do such filtering.","name":"G1SATBBufferEnqueueingThresholdPercent","prefix":"-XX:","range":"range(0, 100)","type":"uintx"},
{"availability":"product","component":"gc","defaultValue":"1*K","definedIn":"share/gc/g1/g1_globals.hpp","description":"Number of entries in an SATB log buffer.","name":"G1SATBBufferSize","prefix":"-XX:","range":"range(1, max_uintx)","type":"size_t"},
{"availability":"develop","component":"gc","defaultValue":"20","definedIn":"share/gc/g1/g1_globals.hpp","description":"Number of completed buffers that triggers log processing.","name":"G1SATBProcessCompletedThreshold","prefix":"-XX:","range":"range(0, max_jint)","type":"intx"},
{"availability":"diagnostic","component":"gc","defaultValue":"0","definedIn":"share/gc/g1/g1_globals.hpp","description":"The period (in number of GCs) at which we will generate \nupdate buffer processing info \n(0 means do not periodically generate this info); \nit also requires that logging is enabled on the trace\nlevel for gc+remset","name":"G1SummarizeRSetStatsPeriod","prefix":"-XX:","range":"range(0, max_intx)","type":"intx"},
{"availability":"product","component":"gc","defaultValue":"256","definedIn":"share/gc/g1/g1_globals.hpp","description":"Size of an update buffer","name":"G1UpdateBufferSize","prefix":"-XX:","range":"range(1, NOT_LP64(32*M) LP64_ONLY(1*G))","type":"size_t"},
{"availability":"product","component":"gc","defaultValue":"true","definedIn":"share/gc/g1/g1_globals.hpp","description":"Select green, yellow and red zones adaptively to meet the \nthe pause requirements.","name":"G1UseAdaptiveConcRefinement","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"gc","defaultValue":"true","definedIn":"share/gc/g1/g1_globals.hpp","description":"Adaptively adjust the initiating heap occupancy from the \ninitial value of InitiatingHeapOccupancyPercent. The policy \nattempts to start marking in time based on application \nbehavior.","name":"G1UseAdaptiveIHOP","prefix":"-XX:","type":"bool"},
{"availability":"experimental","component":"gc","defaultValue":"true","definedIn":"share/gc/g1/g1_globals.hpp","description":"Concurrently preclean java.lang.ref.references instances \nbefore the Remark pause.","name":"G1UseReferencePrecleaning","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"gc","defaultValue":"false","definedIn":"share/gc/g1/g1_globals.hpp","description":"Verifies the consistency of the marking bitmaps","name":"G1VerifyBitmaps","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"gc","defaultValue":"false","definedIn":"share/gc/g1/g1_globals.hpp","description":"Verify card table cleanup.","name":"G1VerifyCTCleanup","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"gc","defaultValue":"false","definedIn":"share/gc/g1/g1_globals.hpp","description":"Verify the code root lists attached to each heap region.","name":"G1VerifyHeapRegionCodeRoots","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"gc","defaultValue":"false","definedIn":"share/gc/g1/g1_globals.hpp","description":"If true, perform verification of each heap region's \nremembered set when verifying the heap during a full GC.","name":"G1VerifyRSetsDuringFullGC","prefix":"-XX:","type":"bool"},
{"availability":"notproduct","component":"gc","defaultValue":"false","definedIn":"share/gc/shared/gc_globals.hpp","description":"Enforce ScavengeALot/GCALot at all potential safepoints","name":"GCALotAtAllSafepoints","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"gc","defaultValue":"64","definedIn":"share/gc/shared/gc_globals.hpp","description":"Number of entries we will try to leave on the stack \nduring parallel gc","name":"GCDrainStackTargetSize","prefix":"-XX:","range":"range(0, max_juint)","type":"uintx"},
{"availability":"develop","component":"gc","defaultValue":"0","definedIn":"share/gc/shared/gc_globals.hpp","description":"Delay between expansion and allocation (in milliseconds)","name":"GCExpandToAllocateDelayMillis","prefix":"-XX:","type":"uintx"},
{"availability":"product","component":"gc","defaultValue":"2","definedIn":"share/gc/shared/gc_globals.hpp","description":"Minimum percentage of free space after a full GC before an \nOutOfMemoryError is thrown (used with GCTimeLimit)","name":"GCHeapFreeLimit","prefix":"-XX:","range":"range(0, 100)","type":"uintx"},
{"availability":"product","component":"gc","defaultValue":"5","definedIn":"share/gc/shared/gc_globals.hpp","description":"How much the GC can expand the eden by while the GC locker \nis active (as a percentage)","name":"GCLockerEdenExpansionPercent","prefix":"-XX:","range":"range(0, 100)","type":"uintx"},
{"availability":"product","component":"gc","defaultValue":"false","definedIn":"share/gc/shared/gc_globals.hpp","deprecated":"","description":"The exit of a JNI critical section necessitating a scavenge, \nalso kicks off a background concurrent collection","expired":"15","name":"GCLockerInvokesConcurrent","obsoleted":"14","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"gc","defaultValue":"2","definedIn":"share/gc/shared/gc_globals.hpp","description":"Number of times to retry allocations when \nblocked by the GC locker","name":"GCLockerRetryAllocationCount","prefix":"-XX:","range":"range(0, max_uintx)","type":"uintx"},
{"availability":"diagnostic","component":"gc","defaultValue":"true","definedIn":"share/gc/shared/gc_globals.hpp","description":"Enable parallel memory system verification","name":"GCParallelVerificationEnabled","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"gc","defaultValue":"0","definedIn":"share/gc/shared/gc_globals.hpp","description":"Time slice for MMU specification","name":"GCPauseIntervalMillis","prefix":"-XX:","type":"uintx"},
{"availability":"product","component":"gc","defaultValue":"200","definedIn":"share/gc/shared/gc_globals.hpp","deprecated":"","description":"Number of time stamp entries per gc worker thread","expired":"16","name":"GCTaskTimeStampEntries","obsoleted":"14","prefix":"-XX:","range":"range(1, max_jint)","type":"uint"},
{"availability":"product","component":"gc","defaultValue":"98","definedIn":"share/gc/shared/gc_globals.hpp","description":"Limit of the proportion of time spent in GC before \nan OutOfMemoryError is thrown (used with GCHeapFreeLimit)","name":"GCTimeLimit","prefix":"-XX:","range":"range(0, 100)","type":"uintx"},
{"availability":"product","component":"gc","defaultValue":"99","definedIn":"share/gc/shared/gc_globals.hpp","description":"Adaptive size policy application time to GC time ratio","name":"GCTimeRatio","prefix":"-XX:","range":"range(0, max_juint)","type":"uintx"},
{"availability":"develop","component":"gc","defaultValue":"0","definedIn":"share/gc/parallel/parallel_globals.hpp","description":"Delay in scheduling GC workers (in milliseconds)","name":"GCWorkerDelayMillis","prefix":"-XX:","type":"uintx"},
{"availability":"develop","component":"c1","defaultValue":"true","definedIn":"share/c1/c1_globals.hpp","description":"Generates code for array store checks","name":"GenerateArrayStoreCheck","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","description":"Generate range checks for array accesses","name":"GenerateRangeChecks","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","description":"generate locking/unlocking code for synchronized methods and \nmonitors","name":"GenerateSynchronizationCode","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"runtime","defaultValue":"1000","definedIn":"share/runtime/globals.hpp","description":"Guarantee a safepoint (at least) every so many milliseconds \n(0 means none)","name":"GuaranteedSafepointInterval","prefix":"-XX:","range":"range(0, max_jint)","type":"intx"},
{"availability":"diagnostic","component":"runtime","defaultValue":"0","definedIn":"share/runtime/globals.hpp","description":"If nonzero set a timeout in milliseconds for handshakes","name":"HandshakeTimeout","prefix":"-XX:","type":"uint"},
{"availability":"define_pd_global","cpu":"ppc","defaultValue":"2*G","definedIn":"os_cpu/aix_ppc/globals_aix_ppc.hpp","name":"HeapBaseMinAddress","os":"aix","prefix":"-XX:","type":"size_t"},
{"availability":"define_pd_global","cpu":"x86","defaultValue":"2*G","definedIn":"os_cpu/bsd_x86/globals_bsd_x86.hpp","name":"HeapBaseMinAddress","os":"bsd","prefix":"-XX:","type":"size_t"},
{"availability":"define_pd_global","cpu":"zero","defaultValue":"2*G","definedIn":"os_cpu/bsd_zero/globals_bsd_zero.hpp","name":"HeapBaseMinAddress","os":"bsd","prefix":"-XX:","type":"size_t"},
{"availability":"define_pd_global","cpu":"aarch64","defaultValue":"2*G","definedIn":"os_cpu/linux_aarch64/globals_linux_aarch64.hpp","name":"HeapBaseMinAddress","os":"linux","prefix":"-XX:","type":"uintx"},
{"availability":"define_pd_global","cpu":"arm","defaultValue":"2*G","definedIn":"os_cpu/linux_arm/globals_linux_arm.hpp","name":"HeapBaseMinAddress","os":"linux","prefix":"-XX:","type":"size_t"},
{"availability":"define_pd_global","cpu":"ppc","defaultValue":"2*G","definedIn":"os_cpu/linux_ppc/globals_linux_ppc.hpp","name":"HeapBaseMinAddress","os":"linux","prefix":"-XX:","type":"size_t"},
{"availability":"define_pd_global","cpu":"s390","defaultValue":"2*G","definedIn":"os_cpu/linux_s390/globals_linux_s390.hpp","name":"HeapBaseMinAddress","os":"linux","prefix":"-XX:","type":"size_t"},
{"availability":"define_pd_global","cpu":"sparc","defaultValue":"CONST64(4)*G","definedIn":"os_cpu/linux_sparc/globals_linux_sparc.hpp","name":"HeapBaseMinAddress","os":"linux","prefix":"-XX:","type":"size_t"},
{"availability":"define_pd_global","cpu":"x86","defaultValue":"2*G","definedIn":"os_cpu/linux_x86/globals_linux_x86.hpp","name":"HeapBaseMinAddress","os":"linux","prefix":"-XX:","type":"size_t"},
{"availability":"define_pd_global","cpu":"zero","defaultValue":"2*G","definedIn":"os_cpu/linux_zero/globals_linux_zero.hpp","name":"HeapBaseMinAddress","os":"linux","prefix":"-XX:","type":"size_t"},
{"availability":"product_pd","component":"gc","definedIn":"share/gc/shared/gc_globals.hpp","description":"OS specific low limit for heap base address","name":"HeapBaseMinAddress","prefix":"-XX:","type":"size_t"},
{"availability":"define_pd_global","cpu":"sparc","defaultValue":"CONST64(6)*G","definedIn":"os_cpu/solaris_sparc/globals_solaris_sparc.hpp","name":"HeapBaseMinAddress","os":"solaris","prefix":"-XX:","type":"size_t"},
{"availability":"define_pd_global","cpu":"x86","defaultValue":"2*G","definedIn":"os_cpu/solaris_x86/globals_solaris_x86.hpp","name":"HeapBaseMinAddress","os":"solaris","prefix":"-XX:","type":"size_t"},
{"availability":"define_pd_global","cpu":"x86","defaultValue":"2*G","definedIn":"os_cpu/windows_x86/globals_windows_x86.hpp","name":"HeapBaseMinAddress","os":"windows","prefix":"-XX:","type":"size_t"},
{"availability":"manageable","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Dump heap to file after any major stop-the-world GC","name":"HeapDumpAfterFullGC","prefix":"-XX:","type":"bool"},
{"availability":"manageable","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Dump heap to file before any major stop-the-world GC","name":"HeapDumpBeforeFullGC","prefix":"-XX:","type":"bool"},
{"availability":"manageable","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Dump heap to file when java.lang.OutOfMemoryError is thrown","name":"HeapDumpOnOutOfMemoryError","prefix":"-XX:","type":"bool"},
{"availability":"manageable","component":"runtime","defaultValue":"NULL","definedIn":"share/runtime/globals.hpp","description":"When HeapDumpOnOutOfMemoryError is on, the path (filename or \ndirectory) of the dump file (defaults to java_pid<pid>.hprof \nin the working directory)","name":"HeapDumpPath","prefix":"-XX:","type":"ccstr"},
{"availability":"product","component":"gc","defaultValue":"3","definedIn":"share/gc/parallel/parallel_globals.hpp","description":"The collection count for the first maximum compaction","name":"HeapFirstMaximumCompactionCount","prefix":"-XX:","range":"range(0, max_uintx)","type":"uintx"},
{"availability":"product","component":"gc","defaultValue":"20","definedIn":"share/gc/parallel/parallel_globals.hpp","description":"How often should we maximally compact the heap (not allowing \nany dead space)","name":"HeapMaximumCompactionInterval","prefix":"-XX:","range":"range(0, max_uintx)","type":"uintx"},
{"availability":"product","component":"runtime","defaultValue":"3 PPC64_ONLY(+17)","definedIn":"share/runtime/globals.hpp","description":"Heap allocation steps through preferred address regions to find\n where it can allocate the heap. Number of steps to take per \nregion.","name":"HeapSearchSteps","prefix":"-XX:","range":"range(1, max_uintx)","type":"uintx"},
{"availability":"product","component":"gc","defaultValue":"ScaleForWordSize(32*M)","definedIn":"share/gc/shared/gc_globals.hpp","description":"Size of heap (bytes) per GC thread used in calculating the \nnumber of GC threads","name":"HeapSizePerGCThread","prefix":"-XX:","range":"range((size_t)os::vm_page_size(), (size_t)max_uintx)","type":"size_t"},
{"availability":"develop","component":"c2","defaultValue":"999999","definedIn":"share/opto/c2_globals.hpp","description":"large numbers of calls (per method invocation) force hotness","name":"HotCallCountThreshold","prefix":"-XX:","range":"range(0, ((intx)MIN2((int64_t)max_intx,(int64_t)(+1.0e10))))","type":"intx"},
{"availability":"develop","component":"c2","defaultValue":"999999","definedIn":"share/opto/c2_globals.hpp","description":"highly profitable inlining opportunities force hotness","name":"HotCallProfitThreshold","prefix":"-XX:","range":"range(0, ((intx)MIN2((int64_t)max_intx,(int64_t)(+1.0e10))))","type":"intx"},
{"availability":"develop","component":"c2","defaultValue":"-1","definedIn":"share/opto/c2_globals.hpp","description":"trivial methods (no larger than this) force calls to be hot","name":"HotCallTrivialSize","prefix":"-XX:","range":"range(-1, ((intx)MIN2((int64_t)max_intx,(int64_t)(+1.0e10))))","type":"intx"},
{"availability":"develop","component":"c2","defaultValue":"-1","definedIn":"share/opto/c2_globals.hpp","description":"trivial execution time (no larger than this) forces hotness","name":"HotCallTrivialWork","prefix":"-XX:","range":"range(-1, ((intx)MIN2((int64_t)max_intx,(int64_t)(+1.0e10))))","type":"intx"},
{"availability":"diagnostic","component":"runtime","defaultValue":"100000","definedIn":"share/runtime/globals.hpp","description":"Number of compiled code invocations after which \nthe method is considered as hot by the flusher","name":"HotMethodDetectionLimit","prefix":"-XX:","range":"range(1, max_jint)","type":"intx"},
{"availability":"develop","component":"runtime","defaultValue":"8000","definedIn":"share/runtime/globals.hpp","description":"Don't compile methods larger than this if \n+DontCompileHugeMethods","name":"HugeMethodLimit","prefix":"-XX:","type":"intx"},
{"availability":"notproduct","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Produce histogram of IC misses","name":"ICMissHistogram","prefix":"-XX:","type":"bool"},
{"availability":"develop","cpu":"x86","defaultValue":"true","definedIn":"cpu/x86/globals_x86.hpp","description":"Enables IEEE precision (for INTEL only)","name":"IEEEPrecision","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"aarch64","defaultValue":"24","definedIn":"cpu/aarch64/c2_globals_aarch64.hpp","name":"INTPRESSURE","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"arm","defaultValue":"12","definedIn":"cpu/arm/c2_globals_arm.hpp","name":"INTPRESSURE","prefix":"-XX:","type":"intx"},
{"availability":"develop_pd","component":"c2","definedIn":"share/opto/c2_globals.hpp","description":"Number of integer LRG's that constitute high register pressure","name":"INTPRESSURE","prefix":"-XX:","range":"range(0, max_jint)","type":"intx"},
{"availability":"define_pd_global","cpu":"ppc","defaultValue":"26","definedIn":"cpu/ppc/c2_globals_ppc.hpp","name":"INTPRESSURE","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","comment":"// Medium size register set, 6 special purpose regs, 3 SOE regs.","cpu":"s390","defaultValue":"10","definedIn":"cpu/s390/c2_globals_s390.hpp","name":"INTPRESSURE","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","comment":"// large register set","cpu":"sparc","defaultValue":"48","definedIn":"cpu/sparc/c2_globals_sparc.hpp","name":"INTPRESSURE","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"x86","defaultValue":"6","definedIn":"cpu/x86/c2_globals_x86.hpp","name":"INTPRESSURE","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"aarch64","defaultValue":"true","definedIn":"cpu/aarch64/c2_globals_aarch64.hpp","name":"IdealizeClearArrayNode","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic_pd","component":"c2","definedIn":"share/opto/c2_globals.hpp","description":"Replace ClearArrayNode by subgraph of basic operations.","name":"IdealizeClearArrayNode","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"ppc","defaultValue":"true","definedIn":"cpu/ppc/c2_globals_ppc.hpp","name":"IdealizeClearArrayNode","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"s390","defaultValue":"false","definedIn":"cpu/s390/c2_globals_s390.hpp","name":"IdealizeClearArrayNode","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"sparc","defaultValue":"true","definedIn":"cpu/sparc/c2_globals_sparc.hpp","name":"IdealizeClearArrayNode","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"x86","defaultValue":"true","definedIn":"cpu/x86/c2_globals_x86.hpp","name":"IdealizeClearArrayNode","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"c2","defaultValue":"false","definedIn":"share/opto/c2_globals.hpp","description":"Check performance difference allowing FP \nassociativity and commutativity...","name":"IdealizedNumerics","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Ignore empty path elements in -classpath","name":"IgnoreEmptyClassPaths","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Suppress workaround for libthread GP fault","name":"IgnoreLibthreadGPFault","prefix":"-XX:","type":"bool"},
{"availability":"notproduct","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"disable locking assertions (for speed)","name":"IgnoreLockingAssertions","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Suppress rewrites of bytecodes in the oopmap generator. \nThis is unsafe!","name":"IgnoreRewrites","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Ignore unrecognized VM options","name":"IgnoreUnrecognizedVMOptions","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","deprecated":"10","description":"Do not quit -Xshare:dump even if we encounter unverifiable \nclasses. Just exclude them from the shared dictionary.","expired":"13","name":"IgnoreUnverifiableClassesDuringDump","obsoleted":"12","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"c1","defaultValue":"true","definedIn":"share/c1/c1_globals.hpp","description":"Use implicit division by zero checks","name":"ImplicitDiv0Checks","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"c2","defaultValue":"3","definedIn":"share/opto/c2_globals.hpp","description":"Don't do implicit null checks if NPE's in a method exceeds \nlimit","name":"ImplicitNullCheckThreshold","prefix":"-XX:","range":"range(0, max_jint)","type":"intx"},
{"availability":"define_pd_global","comment":"// Generate code for implicit null checks","cpu":"aarch64","defaultValue":"true","definedIn":"cpu/aarch64/globals_aarch64.hpp","name":"ImplicitNullChecks","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","comment":"// Generate code for implicit null checks","cpu":"arm","defaultValue":"true","definedIn":"cpu/arm/globals_arm.hpp","name":"ImplicitNullChecks","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic_pd","component":"runtime","definedIn":"share/runtime/globals.hpp","description":"Generate code for implicit null checks","name":"ImplicitNullChecks","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","comment":"// Generate code for implicit null checks.","cpu":"ppc","defaultValue":"true","definedIn":"cpu/ppc/globals_ppc.hpp","name":"ImplicitNullChecks","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","comment":"// Generate code for implicit null checks.","cpu":"s390","defaultValue":"true","definedIn":"cpu/s390/globals_s390.hpp","name":"ImplicitNullChecks","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","comment":"// Generate code for implicit null checks","cpu":"sparc","defaultValue":"true","definedIn":"cpu/sparc/globals_sparc.hpp","name":"ImplicitNullChecks","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","comment":"// Generate code for implicit null checks","cpu":"x86","defaultValue":"true","definedIn":"cpu/x86/globals_x86.hpp","name":"ImplicitNullChecks","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"zero","defaultValue":"true","definedIn":"cpu/zero/globals_zero.hpp","name":"ImplicitNullChecks","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"50","definedIn":"share/runtime/globals.hpp","description":"Increase the compile threshold for C1 compilation if the code \ncache is filled by the specified percentage","name":"IncreaseFirstTierCompileThresholdAt","prefix":"-XX:","range":"range(0, 99)","type":"uintx"},
{"availability":"product","component":"c2","defaultValue":"true","definedIn":"share/opto/c2_globals.hpp","description":"do post parse inlining","name":"IncrementalInline","prefix":"-XX:","type":"bool"},
{"availability":"notproduct","component":"c2","defaultValue":"0","definedIn":"share/opto/c2_globals.hpp","description":"Trace all operations on this IndexSet (-1 means all, 0 none)","name":"IndexSetWatch","prefix":"-XX:","range":"range(-1, 0)","type":"intx"},
{"availability":"define_pd_global","cpu":"aarch64","defaultValue":"BytesPerLong","definedIn":"cpu/aarch64/globals_aarch64.hpp","name":"InitArrayShortSize","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"arm","defaultValue":"8*BytesPerLong","definedIn":"cpu/arm/globals_arm.hpp","name":"InitArrayShortSize","prefix":"-XX:","type":"intx"},
{"availability":"diagnostic_pd","component":"runtime","definedIn":"share/runtime/globals.hpp","description":"Threshold small size (in bytes) for clearing arrays. \nAnything this size or smaller may get converted to discrete \nscalar stores.","name":"InitArrayShortSize","prefix":"-XX:","range":"range(0, max_intx)","type":"intx"},
{"availability":"define_pd_global","cpu":"ppc","defaultValue":"9*BytesPerLong","definedIn":"cpu/ppc/globals_ppc.hpp","name":"InitArrayShortSize","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"s390","defaultValue":"1*BytesPerLong","definedIn":"cpu/s390/globals_s390.hpp","name":"InitArrayShortSize","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"sparc","defaultValue":"8*BytesPerLong","definedIn":"cpu/sparc/globals_sparc.hpp","name":"InitArrayShortSize","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"x86","defaultValue":"8*BytesPerLong","definedIn":"cpu/x86/globals_x86.hpp","name":"InitArrayShortSize","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"zero","defaultValue":"0","definedIn":"cpu/zero/globals_zero.hpp","name":"InitArrayShortSize","prefix":"-XX:","type":"intx"},
{"availability":"product","component":"runtime","defaultValue":"NOT_LP64(2200*K) LP64_ONLY(4*M)","definedIn":"share/runtime/globals.hpp","deprecated":"15","description":"Initial size of the boot class loader data metaspace","expired":"17","name":"InitialBootClassLoaderMetaspaceSize","obsoleted":"16","prefix":"-XX:","range":"range(30*K, max_uintx/BytesPerWord)","type":"size_t"},
{"availability":"define_pd_global","cpu":"aarch64","defaultValue":"160*K","definedIn":"cpu/aarch64/c1_globals_aarch64.hpp","name":"InitialCodeCacheSize","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"arm","defaultValue":"160*K","definedIn":"cpu/arm/c1_globals_arm.hpp","name":"InitialCodeCacheSize","prefix":"-XX:","type":"size_t"},
{"availability":"product_pd","component":"runtime","definedIn":"share/runtime/globals.hpp","description":"Initial code cache size (in bytes)","name":"InitialCodeCacheSize","prefix":"-XX:","range":"range(os::vm_page_size(), max_uintx)","type":"uintx"},
{"availability":"define_pd_global","cpu":"ppc","defaultValue":"160*K","definedIn":"cpu/ppc/c1_globals_ppc.hpp","name":"InitialCodeCacheSize","prefix":"-XX:","type":"uintx"},
{"availability":"define_pd_global","comment":"// Integral multiple of CodeCacheExpansionSize","cpu":"s390","defaultValue":"2048*K","definedIn":"cpu/s390/c2_globals_s390.hpp","name":"InitialCodeCacheSize","prefix":"-XX:","type":"uintx"},
{"availability":"define_pd_global","cpu":"sparc","defaultValue":"160*K","definedIn":"cpu/sparc/c1_globals_sparc.hpp","name":"InitialCodeCacheSize","prefix":"-XX:","type":"uintx"},
{"availability":"define_pd_global","cpu":"x86","defaultValue":"160*K","definedIn":"cpu/x86/c1_globals_x86.hpp","name":"InitialCodeCacheSize","prefix":"-XX:","type":"uintx"},
{"availability":"product","component":"gc","defaultValue":"0","definedIn":"share/gc/shared/gc_globals.hpp","description":"Initial heap size (in bytes); zero means use ergonomics","name":"InitialHeapSize","prefix":"-XX:","type":"size_t"},
{"availability":"product","component":"gc","defaultValue":"64","definedIn":"share/gc/shared/gc_globals.hpp","deprecated":"10","description":"Fraction (1/n) of real memory used for initial heap size. \nDeprecated, use InitialRAMPercentage instead","expired":"","name":"InitialRAMFraction","obsoleted":"","prefix":"-XX:","range":"range(1, max_uintx)","type":"uintx"},
{"availability":"product","component":"gc","defaultValue":"1.5625","definedIn":"share/gc/shared/gc_globals.hpp","description":"Percentage of real memory used for initial heap size","name":"InitialRAMPercentage","prefix":"-XX:","range":"range(0.0, 100.0)","type":"double"},
{"availability":"product","component":"gc","defaultValue":"8","definedIn":"share/gc/shared/gc_globals.hpp","description":"Initial ratio of young generation/survivor space size","name":"InitialSurvivorRatio","prefix":"-XX:","range":"range(0, max_uintx)","type":"uintx"},
{"availability":"product","component":"gc","defaultValue":"7","definedIn":"share/gc/shared/gc_globals.hpp","description":"Initial value for tenuring threshold","name":"InitialTenuringThreshold","prefix":"-XX:","range":"range(0, markOopDesc::max_age + 1)","type":"uintx"},
{"availability":"product","component":"gc","defaultValue":"45","definedIn":"share/gc/shared/gc_globals.hpp","description":"The percent occupancy (IHOP) of the current old generation \ncapacity above which a concurrent mark cycle will be initiated \nIts value may change over time if adaptive IHOP is enabled, \notherwise the value remains constant. \nIn the latter case a value of 0 will result as frequent as \npossible concurrent marking cycles. A value of 100 disables \nconcurrent marking. \nFragmentation waste in the old generation is not considered \nfree space in this calculation. (G1 collector only)","name":"InitiatingHeapOccupancyPercent","prefix":"-XX:","range":"range(0, 100)","type":"uintx"},
{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Inject thread creation failures for \nUseDynamicNumberOfCompilerThreads","name":"InjectCompilerCreationFailure","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"gc","defaultValue":"false","definedIn":"share/gc/shared/gc_globals.hpp","description":"Inject thread creation failures for \nUseDynamicNumberOfGCThreads","name":"InjectGCWorkerCreationFailure","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"c2","defaultValue":"true","definedIn":"share/opto/c2_globals.hpp","description":"inline accessor methods (get/set)","name":"InlineAccessors","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","description":"Inline arraycopy native that is known to be part of \nbase library DLL","name":"InlineArrayCopy","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","description":"Inline Class.isInstance, etc","name":"InlineClassNatives","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"NULL","definedIn":"share/runtime/globals.hpp","description":"File containing inlining replay information\n[default: ./inline_pid%p.log] (%p replaced with pid)","name":"InlineDataFile","prefix":"-XX:","type":"ccstr"},
{"availability":"define_pd_global","cpu":"aarch64","defaultValue":"100","definedIn":"cpu/aarch64/globals_aarch64.hpp","name":"InlineFrequencyCount","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"arm","defaultValue":"50","definedIn":"cpu/arm/globals_arm.hpp","name":"InlineFrequencyCount","prefix":"-XX:","type":"intx"},
{"availability":"diagnostic_pd","component":"runtime","definedIn":"share/runtime/globals.hpp","description":"Count of call site execution necessary to trigger frequent \ninlining","name":"InlineFrequencyCount","prefix":"-XX:","range":"range(0, max_jint)","type":"intx"},
{"availability":"define_pd_global","cpu":"ppc","defaultValue":"100","definedIn":"cpu/ppc/globals_ppc.hpp","name":"InlineFrequencyCount","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"s390","defaultValue":"100","definedIn":"cpu/s390/globals_s390.hpp","name":"InlineFrequencyCount","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","comment":"// we can use more inlining on the SPARC","cpu":"sparc","defaultValue":"50","definedIn":"cpu/sparc/globals_sparc.hpp","name":"InlineFrequencyCount","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"x86","defaultValue":"100","definedIn":"cpu/x86/globals_x86.hpp","name":"InlineFrequencyCount","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"zero","defaultValue":"100","definedIn":"cpu/zero/globals_zero.hpp","name":"InlineFrequencyCount","prefix":"-XX:","type":"intx"},
{"availability":"develop","component":"runtime","defaultValue":"20","definedIn":"share/runtime/globals.hpp","description":"Ratio of call site execution to caller method invocation","name":"InlineFrequencyRatio","prefix":"-XX:","range":"range(0, max_jint)","type":"intx"},
{"availability":"define_pd_global","cpu":"aarch64","defaultValue":"true","definedIn":"cpu/aarch64/c1_globals_aarch64.hpp","name":"InlineIntrinsics","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"arm","defaultValue":"false","definedIn":"cpu/arm/c2_globals_arm.hpp","name":"InlineIntrinsics","prefix":"-XX:","type":"bool"},
{"availability":"develop_pd","component":"runtime","definedIn":"share/runtime/globals.hpp","description":"Inline intrinsics that can be statically resolved","name":"InlineIntrinsics","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"ppc","defaultValue":"true","definedIn":"cpu/ppc/c1_globals_ppc.hpp","name":"InlineIntrinsics","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"s390","defaultValue":"true","definedIn":"cpu/s390/c2_globals_s390.hpp","name":"InlineIntrinsics","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"sparc","defaultValue":"true","definedIn":"cpu/sparc/c1_globals_sparc.hpp","name":"InlineIntrinsics","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"x86","defaultValue":"true","definedIn":"cpu/x86/c1_globals_x86.hpp","name":"InlineIntrinsics","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","description":"Inline SinD, CosD, etc.","name":"InlineMathNatives","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"c1","defaultValue":"true","definedIn":"share/c1/c1_globals.hpp","description":"Inline methods containing exception handlers \n(NOTE: does not work with current backend)","name":"InlineMethodsWithExceptionHandlers","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"c1","defaultValue":"true","definedIn":"share/c1/c1_globals.hpp","description":"Intrinsify java.nio.Buffer.checkIndex","name":"InlineNIOCheckIndex","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","description":"Inline natives that are known to be part of base library DLL","name":"InlineNatives","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"c2","defaultValue":"true","definedIn":"share/opto/c2_globals.hpp","description":"inline Object.clone and Arrays.copyOf[Range] intrinsics","name":"InlineObjectCopy","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","description":"Inline Object::hashCode() native that is known to be part \nof base library DLL","name":"InlineObjectHash","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"c2","defaultValue":"true","definedIn":"share/opto/c2_globals.hpp","description":"inline sun.reflect.Reflection.getCallerClass(), known to be \npart of base library DLL","name":"InlineReflectionGetCallerClass","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"aarch64","defaultValue":"1000","definedIn":"cpu/aarch64/globals_aarch64.hpp","name":"InlineSmallCode","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"arm","defaultValue":"1500","definedIn":"cpu/arm/globals_arm.hpp","name":"InlineSmallCode","prefix":"-XX:","type":"intx"},
{"availability":"product_pd","component":"runtime","definedIn":"share/runtime/globals.hpp","description":"Only inline already compiled methods if their code size is \nless than this","name":"InlineSmallCode","prefix":"-XX:","range":"range(0, max_jint)","type":"intx"},
{"availability":"define_pd_global","cpu":"ppc","defaultValue":"1500","definedIn":"cpu/ppc/globals_ppc.hpp","name":"InlineSmallCode","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"s390","defaultValue":"2000","definedIn":"cpu/s390/globals_s390.hpp","name":"InlineSmallCode","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"sparc","defaultValue":"1500","definedIn":"cpu/sparc/globals_sparc.hpp","name":"InlineSmallCode","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"x86","defaultValue":"1000","definedIn":"cpu/x86/globals_x86.hpp","name":"InlineSmallCode","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"zero","defaultValue":"1000","definedIn":"cpu/zero/globals_zero.hpp","name":"InlineSmallCode","prefix":"-XX:","type":"intx"},
{"availability":"product","component":"c1","defaultValue":"true","definedIn":"share/c1/c1_globals.hpp","description":"Inline synchronized methods","name":"InlineSynchronizedMethods","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","description":"Inline Thread.currentThread, etc","name":"InlineThreadNatives","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"50","definedIn":"share/runtime/globals.hpp","description":"Force inlining of interpreted methods that throw this often","name":"InlineThrowCount","prefix":"-XX:","range":"range(0, max_jint)","type":"intx"},
{"availability":"develop","component":"runtime","defaultValue":"200","definedIn":"share/runtime/globals.hpp","description":"Force inlining of throwing methods smaller than this","name":"InlineThrowMaxSize","prefix":"-XX:","range":"range(0, max_jint)","type":"intx"},
{"availability":"diagnostic","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","description":"Inline memory ops (native methods) from Unsafe","name":"InlineUnsafeOps","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"c2","defaultValue":"false","definedIn":"share/opto/c2_globals.hpp","description":"Use a heat-based priority queue to govern inlining","name":"InlineWarmCalls","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","description":"Enable inlining","name":"Inline","prefix":"-XX:","type":"bool"},
{"availability":"product","cpu":"ppc","defaultValue":"false","definedIn":"cpu/ppc/globals_ppc.hpp","description":"Insert EndGroup instructions to optimize for Power6.","name":"InsertEndGroupPPC64","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"c2","defaultValue":"true","definedIn":"share/opto/c2_globals.hpp","deprecated":"","description":"Insert memory barrier after arraycopy call","expired":"17","name":"InsertMemBarAfterArraycopy","obsoleted":"16","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"c1","defaultValue":"true","definedIn":"share/c1/c1_globals.hpp","description":"Install methods at the end of successful compilations","name":"InstallMethods","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"c1","defaultValue":"37000","definedIn":"share/c1/c1_globals.hpp","description":"If GraphBuilder adds this many instructions, bails out","name":"InstructionCountCutoff","prefix":"-XX:","range":"range(0, max_jint)","type":"intx"},
{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Start debugger when an implicit OS (e.g. NULL) \nexception happens","name":"InterceptOSException","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"aarch64","defaultValue":"16","definedIn":"cpu/aarch64/c2_globals_aarch64.hpp","name":"InteriorEntryAlignment","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","comment":"// = CodeEntryAlignment","cpu":"arm","defaultValue":"16","definedIn":"cpu/arm/c2_globals_arm.hpp","name":"InteriorEntryAlignment","prefix":"-XX:","type":"intx"},
{"availability":"product_pd","component":"c2","definedIn":"share/opto/c2_globals.hpp","description":"Code alignment for interior entry points \nin generated code (in bytes)","name":"InteriorEntryAlignment","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"ppc","defaultValue":"16","definedIn":"cpu/ppc/c2_globals_ppc.hpp","name":"InteriorEntryAlignment","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"s390","defaultValue":"2","definedIn":"cpu/s390/c2_globals_s390.hpp","name":"InteriorEntryAlignment","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","comment":"// = CodeEntryAlignment","cpu":"sparc","defaultValue":"16","definedIn":"cpu/sparc/c2_globals_sparc.hpp","name":"InteriorEntryAlignment","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"x86","defaultValue":"4","definedIn":"cpu/x86/c2_globals_x86.hpp","name":"InteriorEntryAlignment","prefix":"-XX:","type":"intx"},
{"availability":"product","component":"runtime","defaultValue":"33","definedIn":"share/runtime/globals.hpp","description":"NON_TIERED number of method invocations/branches (expressed as \n% of CompileThreshold) before profiling in the interpreter","name":"InterpreterProfilePercentage","prefix":"-XX:","range":"range(0, 100)","type":"intx"},
{"availability":"experimental","component":"jvmci","defaultValue":"0","definedIn":"share/jvmci/jvmci_globals.hpp","description":"Reserved size for benchmark counters","name":"JVMCICounterSize","prefix":"-XX:","range":"range(0, 1000000)","type":"intx"},
{"availability":"experimental","component":"jvmci","defaultValue":"true","definedIn":"share/jvmci/jvmci_globals.hpp","description":"Exclude JVMCI compiler threads from benchmark counters","name":"JVMCICountersExcludeCompiler","prefix":"-XX:","type":"bool"},
{"availability":"experimental","component":"jvmci","defaultValue":"1","definedIn":"share/jvmci/jvmci_globals.hpp","description":"Force number of compiler threads for JVMCI host compiler","name":"JVMCIHostThreads","prefix":"-XX:","range":"range(0, max_jint))","type":"intx"},
{"availability":"experimental","component":"jvmci","defaultValue":"(80*K)*wordSize","definedIn":"share/jvmci/jvmci_globals.hpp","description":"Maximum size of a compiled method.","name":"JVMCINMethodSizeLimit","prefix":"-XX:","range":"range(0, max_jint)","type":"intx"},
{"availability":"experimental","component":"jvmci","defaultValue":"false","definedIn":"share/jvmci/jvmci_globals.hpp","description":"Prints properties used by the JVMCI compiler and exits","name":"JVMCIPrintProperties","prefix":"-XX:","type":"bool"},
{"availability":"experimental","component":"jvmci","defaultValue":"1","definedIn":"share/jvmci/jvmci_globals.hpp","description":"Force number of JVMCI compiler threads to use","name":"JVMCIThreads","prefix":"-XX:","range":"range(1, max_jint)","type":"intx"},
{"availability":"experimental","component":"jvmci","defaultValue":"0","definedIn":"share/jvmci/jvmci_globals.hpp","description":"Trace level for JVMCI: \n\n1 means emit a message for each CompilerToVM call,\nlevels greater than 1 provide progressively greater detail","name":"JVMCITraceLevel","prefix":"-XX:","range":"range(0, 6)","type":"intx"},
{"availability":"develop","component":"jvmci","defaultValue":"true","definedIn":"share/jvmci/jvmci_globals.hpp","description":"Use fast inlined locking code","name":"JVMCIUseFastLocking","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"ppc","defaultValue":"8192","definedIn":"os_cpu/aix_ppc/globals_aix_ppc.hpp","name":"JVMInvokeMethodSlack","os":"aix","prefix":"-XX:","type":"size_t"},
{"availability":"define_pd_global","cpu":"x86","defaultValue":"8192","definedIn":"os_cpu/bsd_x86/globals_bsd_x86.hpp","name":"JVMInvokeMethodSlack","os":"bsd","prefix":"-XX:","type":"size_t"},
{"availability":"define_pd_global","cpu":"zero","defaultValue":"8192","definedIn":"os_cpu/bsd_zero/globals_bsd_zero.hpp","name":"JVMInvokeMethodSlack","os":"bsd","prefix":"-XX:","type":"size_t"},
{"availability":"define_pd_global","cpu":"aarch64","defaultValue":"8192","definedIn":"os_cpu/linux_aarch64/globals_linux_aarch64.hpp","name":"JVMInvokeMethodSlack","os":"linux","prefix":"-XX:","type":"uintx"},
{"availability":"define_pd_global","cpu":"arm","defaultValue":"8192","definedIn":"os_cpu/linux_arm/globals_linux_arm.hpp","name":"JVMInvokeMethodSlack","os":"linux","prefix":"-XX:","type":"size_t"},
{"availability":"define_pd_global","cpu":"ppc","defaultValue":"8192","definedIn":"os_cpu/linux_ppc/globals_linux_ppc.hpp","name":"JVMInvokeMethodSlack","os":"linux","prefix":"-XX:","type":"size_t"},
{"availability":"define_pd_global","cpu":"s390","defaultValue":"8192","definedIn":"os_cpu/linux_s390/globals_linux_s390.hpp","name":"JVMInvokeMethodSlack","os":"linux","prefix":"-XX:","type":"size_t"},
{"availability":"define_pd_global","cpu":"sparc","defaultValue":"12288","definedIn":"os_cpu/linux_sparc/globals_linux_sparc.hpp","name":"JVMInvokeMethodSlack","os":"linux","prefix":"-XX:","type":"size_t"},
{"availability":"define_pd_global","cpu":"x86","defaultValue":"8192","definedIn":"os_cpu/linux_x86/globals_linux_x86.hpp","name":"JVMInvokeMethodSlack","os":"linux","prefix":"-XX:","type":"size_t"},
{"availability":"define_pd_global","cpu":"zero","defaultValue":"8192","definedIn":"os_cpu/linux_zero/globals_linux_zero.hpp","name":"JVMInvokeMethodSlack","os":"linux","prefix":"-XX:","type":"size_t"},
{"availability":"develop_pd","component":"runtime","definedIn":"share/runtime/globals.hpp","description":"Stack space (bytes) required for JVM_InvokeMethod to complete","name":"JVMInvokeMethodSlack","prefix":"-XX:","type":"size_t"},
{"availability":"define_pd_global","cpu":"sparc","defaultValue":"12288","definedIn":"os_cpu/solaris_sparc/globals_solaris_sparc.hpp","name":"JVMInvokeMethodSlack","os":"solaris","prefix":"-XX:","type":"size_t"},
{"availability":"define_pd_global","cpu":"x86","defaultValue":"10*K","definedIn":"os_cpu/solaris_x86/globals_solaris_x86.hpp","name":"JVMInvokeMethodSlack","os":"solaris","prefix":"-XX:","type":"size_t"},
{"availability":"define_pd_global","cpu":"x86","defaultValue":"8192","definedIn":"os_cpu/windows_x86/globals_windows_x86.hpp","name":"JVMInvokeMethodSlack","os":"windows","prefix":"-XX:","type":"size_t"},
{"availability":"product","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","description":"Print information about Java monitor locks when the stacks are\ndumped","name":"JavaMonitorsInStackTrace","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"-1","definedIn":"share/runtime/globals.hpp","description":"Map Java priorities to OS priorities","name":"JavaPriority10_To_OSPriority","prefix":"-XX:","range":"range(-1, 127)","type":"intx"},
{"availability":"product","component":"runtime","defaultValue":"-1","definedIn":"share/runtime/globals.hpp","description":"Map Java priorities to OS priorities","name":"JavaPriority1_To_OSPriority","prefix":"-XX:","range":"range(-1, 127)","type":"intx"},
{"availability":"product","component":"runtime","defaultValue":"-1","definedIn":"share/runtime/globals.hpp","description":"Map Java priorities to OS priorities","name":"JavaPriority2_To_OSPriority","prefix":"-XX:","range":"range(-1, 127)","type":"intx"},
{"availability":"product","component":"runtime","defaultValue":"-1","definedIn":"share/runtime/globals.hpp","description":"Map Java priorities to OS priorities","name":"JavaPriority3_To_OSPriority","prefix":"-XX:","range":"range(-1, 127)","type":"intx"},
{"availability":"product","component":"runtime","defaultValue":"-1","definedIn":"share/runtime/globals.hpp","description":"Map Java priorities to OS priorities","name":"JavaPriority4_To_OSPriority","prefix":"-XX:","range":"range(-1, 127)","type":"intx"},
{"availability":"product","component":"runtime","defaultValue":"-1","definedIn":"share/runtime/globals.hpp","description":"Map Java priorities to OS priorities","name":"JavaPriority5_To_OSPriority","prefix":"-XX:","range":"range(-1, 127)","type":"intx"},
{"availability":"product","component":"runtime","defaultValue":"-1","definedIn":"share/runtime/globals.hpp","description":"Map Java priorities to OS priorities","name":"JavaPriority6_To_OSPriority","prefix":"-XX:","range":"range(-1, 127)","type":"intx"},
{"availability":"product","component":"runtime","defaultValue":"-1","definedIn":"share/runtime/globals.hpp","description":"Map Java priorities to OS priorities","name":"JavaPriority7_To_OSPriority","prefix":"-XX:","range":"range(-1, 127)","type":"intx"},
{"availability":"product","component":"runtime","defaultValue":"-1","definedIn":"share/runtime/globals.hpp","description":"Map Java priorities to OS priorities","name":"JavaPriority8_To_OSPriority","prefix":"-XX:","range":"range(-1, 127)","type":"intx"},
{"availability":"product","component":"runtime","defaultValue":"-1","definedIn":"share/runtime/globals.hpp","description":"Map Java priorities to OS priorities","name":"JavaPriority9_To_OSPriority","prefix":"-XX:","range":"range(-1, 127)","type":"intx"},
{"availability":"define_pd_global","cpu":"aarch64","defaultValue":"false","definedIn":"cpu/aarch64/c1_globals_aarch64.hpp","deprecated":"","expired":"16","name":"LIRFillDelaySlots","obsoleted":"15","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"arm","defaultValue":"false","definedIn":"cpu/arm/c1_globals_arm.hpp","deprecated":"","expired":"16","name":"LIRFillDelaySlots","obsoleted":"15","prefix":"-XX:","type":"bool"},
{"availability":"product_pd","component":"c1","definedIn":"share/c1/c1_globals.hpp","deprecated":"","description":"fill delays on on SPARC with LIR","expired":"16","name":"LIRFillDelaySlots","obsoleted":"15","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"ppc","defaultValue":"false","definedIn":"cpu/ppc/c1_globals_ppc.hpp","deprecated":"","expired":"16","name":"LIRFillDelaySlots","obsoleted":"15","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"s390","defaultValue":"false","definedIn":"cpu/s390/c1_globals_s390.hpp","deprecated":"","expired":"16","name":"LIRFillDelaySlots","obsoleted":"15","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"sparc","defaultValue":"true","definedIn":"cpu/sparc/c1_globals_sparc.hpp","deprecated":"","expired":"16","name":"LIRFillDelaySlots","obsoleted":"15","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"x86","defaultValue":"false","definedIn":"cpu/x86/c1_globals_x86.hpp","deprecated":"","expired":"16","name":"LIRFillDelaySlots","obsoleted":"15","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"c1","defaultValue":"false","definedIn":"share/c1/c1_globals.hpp","description":"add LIR code which logs the execution of blocks","name":"LIRTraceExecution","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"c1","defaultValue":"false","definedIn":"share/c1/c1_globals.hpp","description":"Trace peephole optimizer","name":"LIRTracePeephole","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"128*M","definedIn":"share/runtime/globals.hpp","description":"Use large pages if maximum heap is at least this big","name":"LargePageHeapSizeThreshold","prefix":"-XX:","range":"range(0, max_uintx)","type":"size_t"},
{"availability":"product","component":"runtime","defaultValue":"0","definedIn":"share/runtime/globals.hpp","description":"Large page size (0 to let VM choose the page size)","name":"LargePageSizeInBytes","prefix":"-XX:","range":"range(0, max_uintx)","type":"size_t"},
{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Fail large pages individual allocation","name":"LargePagesIndividualAllocationInjectError","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"c2","defaultValue":"40000","definedIn":"share/opto/c2_globals.hpp","description":"max number of live nodes in a method","name":"LiveNodeCountInliningCutoff","prefix":"-XX:","range":"range(0, max_juint / 8)","type":"intx"},
{"availability":"product","defaultValue":"true","definedIn":"os/linux/globals_linux.hpp","description":"Load DLLs with executable-stack attribute in the VM Thread","name":"LoadExecStackDllInVMThread","os":"linux","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","description":"Tell whether the class file parser loads line number tables","name":"LoadLineNumberTables","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","description":"Tell whether the class file parser loads local variable tables","name":"LoadLocalVariableTables","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","description":"Tell whether the class file parser loads local variable type\ntables","name":"LoadLocalVariableTypeTables","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Log compilation activity in detail to LogFile","name":"LogCompilation","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"runtime","defaultValue":"20","definedIn":"share/runtime/globals.hpp","description":"Number of ring buffer event logs","name":"LogEventsBufferEntries","prefix":"-XX:","range":"range(1, NOT_LP64(1*K) LP64_ONLY(1*M))","type":"uintx"},
{"availability":"diagnostic","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","description":"Enable the various ring buffer event logs","name":"LogEvents","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"runtime","defaultValue":"NULL","definedIn":"share/runtime/globals.hpp","description":"If LogVMOutput or LogCompilation is on, save VM output to \nthis file [default: ./hotspot_pid%p.log] (%p replaced with pid)","name":"LogFile","prefix":"-XX:","type":"ccstr"},
{"availability":"notproduct","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Keep a ring buffer of sweeper activity","name":"LogSweeper","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Log methods which have been ever touched in runtime","name":"LogTouchedMethods","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Save VM output to LogFile","name":"LogVMOutput","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"50","definedIn":"share/runtime/globals.hpp","description":"Used with +TraceLongCompiles","name":"LongCompileThreshold","prefix":"-XX:","type":"intx"},
{"availability":"product","component":"c2","defaultValue":"16","definedIn":"share/opto/c2_globals.hpp","description":"Maximum number of unrolls for main loop","name":"LoopMaxUnroll","prefix":"-XX:","range":"range(0, max_jint)","type":"intx"},
{"availability":"product","component":"c2","defaultValue":"43","definedIn":"share/opto/c2_globals.hpp","description":"Set level of loop optimization for tier 1 compiles","name":"LoopOptsCount","prefix":"-XX:","range":"range(5, 43)","type":"intx"},
{"availability":"define_pd_global","cpu":"aarch64","defaultValue":"10","definedIn":"cpu/aarch64/c2_globals_aarch64.hpp","name":"LoopPercentProfileLimit","prefix":"-XX:","type":"intx"},
{"availability":"product_pd","component":"c2","definedIn":"share/opto/c2_globals.hpp","description":"Unroll loop bodies with % node count of profile limit","name":"LoopPercentProfileLimit","prefix":"-XX:","range":"range(10, 100)","type":"intx"},
{"availability":"define_pd_global","cpu":"ppc","defaultValue":"10","definedIn":"cpu/ppc/c2_globals_ppc.hpp","name":"LoopPercentProfileLimit","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"s390","defaultValue":"10","definedIn":"cpu/s390/c2_globals_s390.hpp","name":"LoopPercentProfileLimit","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"sparc","defaultValue":"10","definedIn":"cpu/sparc/c2_globals_sparc.hpp","name":"LoopPercentProfileLimit","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"x86","defaultValue":"30","definedIn":"cpu/x86/c2_globals_x86.hpp","name":"LoopPercentProfileLimit","prefix":"-XX:","type":"intx"},
{"availability":"product","component":"c2","defaultValue":"0","definedIn":"share/opto/c2_globals.hpp","description":"Loop with fewer iterations are not strip mined","name":"LoopStripMiningIterShortLoop","prefix":"-XX:","range":"range(0, max_juint)","type":"uintx"},
{"availability":"product","component":"c2","defaultValue":"0","definedIn":"share/opto/c2_globals.hpp","description":"Number of iterations in strip mined loop","name":"LoopStripMiningIter","prefix":"-XX:","range":"range(0, max_juint)","type":"uintx"},
{"availability":"define_pd_global","cpu":"aarch64","defaultValue":"60","definedIn":"cpu/aarch64/c2_globals_aarch64.hpp","name":"LoopUnrollLimit","prefix":"-XX:","type":"intx"},
{"availability":"product_pd","component":"c2","definedIn":"share/opto/c2_globals.hpp","description":"Unroll loop bodies with node count less than this","name":"LoopUnrollLimit","prefix":"-XX:","range":"range(0, max_jint / 4)","type":"intx"},
{"availability":"define_pd_global","cpu":"ppc","defaultValue":"60","definedIn":"cpu/ppc/c2_globals_ppc.hpp","name":"LoopUnrollLimit","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"s390","defaultValue":"60","definedIn":"cpu/s390/c2_globals_s390.hpp","name":"LoopUnrollLimit","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","comment":"// Design center runs on 1.3.1","cpu":"sparc","defaultValue":"60","definedIn":"cpu/sparc/c2_globals_sparc.hpp","name":"LoopUnrollLimit","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","comment":"// Design center runs on 1.3.1","cpu":"x86","defaultValue":"50","definedIn":"cpu/x86/c2_globals_x86.hpp","name":"LoopUnrollLimit","prefix":"-XX:","type":"intx"},
{"availability":"product","component":"c2","defaultValue":"4","definedIn":"share/opto/c2_globals.hpp","description":"Minimum number of unroll loop bodies before checking progress\nof rounds of unroll,optimize,..","name":"LoopUnrollMin","prefix":"-XX:","range":"range(0, max_jint)","type":"intx"},
{"availability":"product","component":"c2","defaultValue":"true","definedIn":"share/opto/c2_globals.hpp","description":"Enable loop unswitching (a form of invariant test hoisting)","name":"LoopUnswitching","prefix":"-XX:","type":"bool"},
{"availability":"product","cpu":"s390","defaultValue":"+2*(4*K)","definedIn":"cpu/s390/globals_s390.hpp","description":"Threshold above which page-aligned MVCLE copy/init is used.","name":"MVCLEThreshold","prefix":"-XX:","type":"size_t"},
{"availability":"develop","component":"runtime","defaultValue":"-1","definedIn":"share/runtime/globals.hpp","description":"Hit breakpoint when mallocing/freeing this pointer","name":"MallocCatchPtr","prefix":"-XX:","type":"intx"},
{"availability":"diagnostic","component":"runtime","defaultValue":"0","definedIn":"share/runtime/globals.hpp","description":"If non-zero, maximum number of words that malloc/realloc can \nallocate (for testing only)","name":"MallocMaxTestWords","prefix":"-XX:","range":"range(0, max_uintx)","type":"uintx"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Create JMX Management Server","name":"ManagementServer","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"gc","defaultValue":"NOT_LP64(4*M) LP64_ONLY(512*M)","definedIn":"share/gc/shared/gc_globals.hpp","description":"Maximum size of marking stack","name":"MarkStackSizeMax","prefix":"-XX:","range":"range(1, (max_jint - 1))","type":"size_t"},
{"availability":"product","component":"gc","defaultValue":"NOT_LP64(32*K) LP64_ONLY(4*M)","definedIn":"share/gc/shared/gc_globals.hpp","description":"Size of marking stack","name":"MarkStackSize","prefix":"-XX:","type":"size_t"},
{"availability":"product","component":"gc","defaultValue":"4","definedIn":"share/gc/shared/gc_globals.hpp","description":"How often should we fully compact the heap (ignoring the dead \nspace parameters)","name":"MarkSweepAlwaysCompactCount","prefix":"-XX:","range":"range(1, max_juint)","type":"uint"},
{"availability":"product","component":"gc","defaultValue":"5","definedIn":"share/gc/shared/gc_globals.hpp","description":"Percentage (0-100) of the old gen allowed as dead wood. \nSerial mark sweep treats this as both the minimum and maximum \nvalue. \nCMS uses this value only if it falls back to mark sweep. \nPar compact uses a variable scale based on the density of the \ngeneration and treats this as the maximum value when the heap \nis either completely full or completely empty. Par compact \nalso has a smaller default value; see arguments.cpp.","name":"MarkSweepDeadRatio","prefix":"-XX:","range":"range(0, 100)","type":"uintx"},
{"availability":"product","component":"runtime","defaultValue":"5","definedIn":"share/runtime/globals.hpp","description":"Maximum number of nested calls that are analyzed by BC EA","name":"MaxBCEAEstimateLevel","prefix":"-XX:","range":"range(0, max_jint)","type":"intx"},
{"availability":"product","component":"runtime","defaultValue":"150","definedIn":"share/runtime/globals.hpp","description":"Maximum bytecode size of a method to be analyzed by BC EA","name":"MaxBCEAEstimateSize","prefix":"-XX:","range":"range(0, max_jint)","type":"intx"},
{"availability":"product","component":"runtime","defaultValue":"0","definedIn":"share/runtime/globals.hpp","description":"Maximum total size of NIO direct-buffer allocations","name":"MaxDirectMemorySize","prefix":"-XX:","range":"range(0, max_jlong)","type":"uint64_t"},
{"availability":"notproduct","component":"runtime","defaultValue":"256","definedIn":"share/runtime/globals.hpp","description":"maximum number of elements to print","name":"MaxElementPrintSize","prefix":"-XX:","type":"intx"},
{"availability":"product","defaultValue":"8*G","definedIn":"os/aix/globals_aix.hpp","description":"Maximum expected Data Segment Size.","name":"MaxExpectedDataSegmentSize","os":"aix","prefix":"-XX:","type":"uintx"},
{"availability":"product","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","description":"Bump the number of file descriptors to maximum in Solaris","name":"MaxFDLimit","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"100","definedIn":"share/runtime/globals.hpp","description":"maximum number of nested calls that are forced for inlining \n(using CompileCommand or marked w/ @ForceInline)","name":"MaxForceInlineLevel","prefix":"-XX:","range":"range(0, max_jint)","type":"intx"},
{"availability":"product","component":"gc","defaultValue":"max_uintx","definedIn":"share/gc/shared/gc_globals.hpp","deprecated":"8","description":"Adaptive size policy maximum GC minor pause time goal \nin millisecond","expired":"","name":"MaxGCMinorPauseMillis","obsoleted":"","prefix":"-XX:","range":"range(0, max_uintx)","type":"uintx"},
{"availability":"product","component":"gc","defaultValue":"max_uintx - 1","definedIn":"share/gc/shared/gc_globals.hpp","description":"Adaptive size policy maximum GC pause time goal in millisecond, \nor (G1 Only) the maximum GC time per MMU time slice","name":"MaxGCPauseMillis","prefix":"-XX:","range":"range(1, max_uintx - 1)","type":"uintx"},
{"availability":"manageable","component":"runtime","defaultValue":"70","definedIn":"share/runtime/globals.hpp","description":"The maximum percentage of heap free after GC to avoid shrinking.\n For most GCs this applies to the old generation. In G1 and\n ParallelGC it applies to the whole heap.","name":"MaxHeapFreeRatio","prefix":"-XX:","range":"range(0, 100)","type":"uintx"},
{"availability":"product","component":"gc","defaultValue":"ScaleForWordSize(96*M)","definedIn":"share/gc/shared/gc_globals.hpp","description":"Maximum heap size (in bytes)","name":"MaxHeapSize","prefix":"-XX:","type":"size_t"},
{"availability":"product","component":"runtime","defaultValue":"15","definedIn":"share/runtime/globals.hpp","description":"maximum number of nested calls that are inlined","name":"MaxInlineLevel","prefix":"-XX:","range":"range(0, max_jint)","type":"intx"},
{"availability":"product","component":"runtime","defaultValue":"35","definedIn":"share/runtime/globals.hpp","description":"The maximum bytecode size of a method to be inlined","name":"MaxInlineSize","prefix":"-XX:","range":"range(0, max_jint)","type":"intx"},
{"availability":"develop","component":"runtime","defaultValue":"3","definedIn":"share/runtime/globals.hpp","description":"The maximum number of interpreted frames to skip when searching \nfor recompilee","name":"MaxInterpretedSearchLength","prefix":"-XX:","type":"intx"},
{"availability":"product","component":"runtime","defaultValue":"65536","definedIn":"share/runtime/globals.hpp","description":"Maximum allowable local JNI handle capacity to \nEnsureLocalCapacity() and PushLocalFrame(), \nwhere <= 0 is unlimited, default: 65536","name":"MaxJNILocalCapacity","prefix":"-XX:","range":"range(min_intx, max_intx)","type":"intx"},
{"availability":"product","component":"runtime","defaultValue":"1024","definedIn":"share/runtime/globals.hpp","description":"The maximum number of lines in the stack trace for Java \nexceptions (0 means all)","name":"MaxJavaStackTraceDepth","prefix":"-XX:","range":"range(0, max_jint/2)","type":"intx"},
{"availability":"product","component":"c2","defaultValue":"65000","definedIn":"share/opto/c2_globals.hpp","description":"Maximum number of targets in a generated jump table","name":"MaxJumpTableSize","prefix":"-XX:","range":"range(0, max_intx)","type":"intx"},
{"availability":"product","component":"c2","defaultValue":"5","definedIn":"share/opto/c2_globals.hpp","description":"Maximum sparseness for jumptables","name":"MaxJumpTableSparseness","prefix":"-XX:","range":"range(0, max_intx / 4)","type":"intx"},
{"availability":"product","component":"c2","defaultValue":"1100","definedIn":"share/opto/c2_globals.hpp","description":"Maximum times call Label_Root to prevent stack overflow","name":"MaxLabelRootDepth","prefix":"-XX:","range":"range(100, max_jint)","type":"intx"},
{"availability":"product","component":"c2","defaultValue":"(OptoLoopAlignment-1)","definedIn":"share/opto/c2_globals.hpp","description":"Align a loop if padding size in bytes is less or equal to this \nvalue","name":"MaxLoopPad","prefix":"-XX:","range":"range(0, max_jint)","type":"intx"},
{"availability":"product","component":"runtime","defaultValue":"ScaleForWordSize(4*M)","definedIn":"share/runtime/globals.hpp","description":"The maximum expansion of Metaspace without full GC (in bytes)","name":"MaxMetaspaceExpansion","prefix":"-XX:","range":"range(0, max_uintx)","type":"size_t"},
{"availability":"product","component":"runtime","defaultValue":"70","definedIn":"share/runtime/globals.hpp","description":"The maximum percentage of Metaspace free after GC to avoid \nshrinking","name":"MaxMetaspaceFreeRatio","prefix":"-XX:","range":"range(0, 100)","type":"uintx"},
{"availability":"product","component":"runtime","defaultValue":"max_uintx","definedIn":"share/runtime/globals.hpp","description":"Maximum size of Metaspaces (in bytes)","name":"MaxMetaspaceSize","prefix":"-XX:","type":"size_t"},
{"availability":"product","component":"gc","defaultValue":"max_uintx","definedIn":"share/gc/shared/gc_globals.hpp","description":"Maximum new generation size (in bytes), max_uintx means set \nergonomically","name":"MaxNewSize","prefix":"-XX:","range":"range(0, max_uintx)","type":"size_t"},
{"availability":"product","component":"c2","defaultValue":"80000","definedIn":"share/opto/c2_globals.hpp","description":"Maximum number of nodes","name":"MaxNodeLimit","prefix":"-XX:","range":"range(1000, max_jint / 3)","type":"intx"},
{"availability":"product","component":"gc","defaultValue":"4","definedIn":"share/gc/shared/gc_globals.hpp","deprecated":"10","description":"Maximum fraction (1/n) of real memory used for maximum heap \nsize. \nDeprecated, use MaxRAMPercentage instead","expired":"","name":"MaxRAMFraction","obsoleted":"","prefix":"-XX:","range":"range(1, max_uintx)","type":"uintx"},
{"availability":"product","component":"gc","defaultValue":"25.0","definedIn":"share/gc/shared/gc_globals.hpp","description":"Maximum percentage of real memory used for maximum heap size","name":"MaxRAMPercentage","prefix":"-XX:","range":"range(0.0, 100.0)","type":"double"},
{"availability":"define_pd_global","cpu":"aarch64","defaultValue":"1ULL*G","definedIn":"cpu/aarch64/c1_globals_aarch64.hpp","name":"MaxRAM","prefix":"-XX:","type":"uint64_t"},
{"availability":"define_pd_global","cpu":"arm","defaultValue":"1ULL*G","definedIn":"cpu/arm/c1_globals_arm.hpp","name":"MaxRAM","prefix":"-XX:","type":"uint64_t"},
{"availability":"product_pd","component":"gc","definedIn":"share/gc/shared/gc_globals.hpp","description":"Real memory size (in bytes) used to set maximum heap size","name":"MaxRAM","prefix":"-XX:","range":"range(0, 0XFFFFFFFFFFFFFFFF)","type":"uint64_t"},
{"availability":"define_pd_global","component":"runtime","defaultValue":"1ULL*G","definedIn":"share/runtime/globals.hpp","name":"MaxRAM","prefix":"-XX:","type":"uint64_t"},
{"availability":"define_pd_global","cpu":"ppc","defaultValue":"1ULL*G","definedIn":"cpu/ppc/c1_globals_ppc.hpp","name":"MaxRAM","prefix":"-XX:","type":"uint64_t"},
{"availability":"define_pd_global","cpu":"s390","defaultValue":"128ULL*G","definedIn":"cpu/s390/c2_globals_s390.hpp","name":"MaxRAM","prefix":"-XX:","type":"uint64_t"},
{"availability":"define_pd_global","cpu":"sparc","defaultValue":"1ULL*G","definedIn":"cpu/sparc/c1_globals_sparc.hpp","name":"MaxRAM","prefix":"-XX:","type":"uint64_t"},
{"availability":"define_pd_global","cpu":"x86","defaultValue":"1ULL*G","definedIn":"cpu/x86/c1_globals_x86.hpp","name":"MaxRAM","prefix":"-XX:","type":"uint64_t"},
{"availability":"develop","component":"runtime","defaultValue":"10","definedIn":"share/runtime/globals.hpp","description":"The maximum number of frames to inspect when searching for \nrecompilee","name":"MaxRecompilationSearchLength","prefix":"-XX:","type":"intx"},
{"availability":"product","component":"runtime","defaultValue":"1","definedIn":"share/runtime/globals.hpp","description":"maximum number of nested recursive calls that are inlined","name":"MaxRecursiveInlineLevel","prefix":"-XX:","range":"range(0, max_jint)","type":"intx"},
{"availability":"notproduct","component":"runtime","defaultValue":"4","definedIn":"share/runtime/globals.hpp","description":"maximum number of subklasses to print when printing klass","name":"MaxSubklassPrintSize","prefix":"-XX:","type":"intx"},
{"availability":"product","component":"gc","defaultValue":"15","definedIn":"share/gc/shared/gc_globals.hpp","description":"Maximum value for tenuring threshold","name":"MaxTenuringThreshold","prefix":"-XX:","range":"range(0, markOopDesc::max_age + 1)","type":"uintx"},
{"availability":"product","component":"runtime","defaultValue":"6","definedIn":"share/runtime/globals.hpp","description":"The maximum bytecode size of a trivial method to be inlined","name":"MaxTrivialSize","prefix":"-XX:","range":"range(0, max_jint)","type":"intx"},
{"availability":"product","component":"c2","defaultValue":"64","definedIn":"share/opto/c2_globals.hpp","description":"Max vector size in bytes, \nactual size could be less depending on elements type","name":"MaxVectorSize","prefix":"-XX:","range":"range(0, max_jint)","type":"intx"},
{"availability":"develop","component":"gc","defaultValue":"2","definedIn":"share/gc/shared/gc_globals.hpp","description":"Maximum fraction (1/n) of virtual memory used for ergonomically \ndetermining maximum heap size","name":"MaxVirtMemFraction","prefix":"-XX:","type":"uintx"},
{"availability":"notproduct","component":"runtime","defaultValue":"500","definedIn":"share/runtime/globals.hpp","description":"Time between each invocation of the MemProfiler","name":"MemProfilingInterval","prefix":"-XX:","type":"intx"},
{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Write memory usage profiling to log file","name":"MemProfiling","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"gc","defaultValue":"1000","definedIn":"share/gc/shared/gc_globals.hpp","description":"Metadata allocation failure a lot interval","name":"MetadataAllocationFailALotInterval","prefix":"-XX:","type":"uintx"},
{"availability":"develop","component":"gc","defaultValue":"false","definedIn":"share/gc/shared/gc_globals.hpp","description":"Fail metadata allocations at intervals controlled by \nMetadataAllocationFailALotInterval","name":"MetadataAllocationFailALot","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"aarch64","defaultValue":"12*M","definedIn":"cpu/aarch64/c1_globals_aarch64.hpp","name":"MetaspaceSize","prefix":"-XX:","type":"uintx"},
{"availability":"define_pd_global","cpu":"arm","defaultValue":"12*M","definedIn":"cpu/arm/c1_globals_arm.hpp","name":"MetaspaceSize","prefix":"-XX:","type":"size_t"},
{"availability":"product_pd","component":"runtime","definedIn":"share/runtime/globals.hpp","description":"Initial threshold (in bytes) at which a garbage collection \nis done to reduce Metaspace usage","name":"MetaspaceSize","prefix":"-XX:","type":"size_t"},
{"availability":"define_pd_global","cpu":"ppc","defaultValue":"12*M","definedIn":"cpu/ppc/c1_globals_ppc.hpp","name":"MetaspaceSize","prefix":"-XX:","type":"size_t"},
{"availability":"define_pd_global","cpu":"s390","defaultValue":"ScaleForWordSize(16*M)","definedIn":"cpu/s390/c2_globals_s390.hpp","name":"MetaspaceSize","prefix":"-XX:","type":"size_t"},
{"availability":"define_pd_global","cpu":"sparc","defaultValue":"12*M","definedIn":"cpu/sparc/c1_globals_sparc.hpp","name":"MetaspaceSize","prefix":"-XX:","type":"size_t"},
{"availability":"define_pd_global","cpu":"x86","defaultValue":"12*M","definedIn":"cpu/x86/c1_globals_x86.hpp","name":"MetaspaceSize","prefix":"-XX:","type":"size_t"},
{"availability":"product","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","description":"Reclamation of zombie and not-entrant methods","name":"MethodFlushing","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"100","definedIn":"share/runtime/globals.hpp","description":"The cutoff value for method invocation histogram (+CountCalls)","name":"MethodHistogramCutoff","prefix":"-XX:","type":"intx"},
{"availability":"experimental","component":"jvmci","defaultValue":"0","definedIn":"share/jvmci/jvmci_globals.hpp","description":"Number of methods to record in call profile","name":"MethodProfileWidth","prefix":"-XX:","type":"intx"},
{"availability":"product","component":"runtime","defaultValue":"ScaleForWordSize(128*K)","definedIn":"share/runtime/globals.hpp","description":"The minimum change in heap space due to GC (in bytes)","name":"MinHeapDeltaBytes","prefix":"-XX:","range":"range(0, max_uintx)","type":"size_t"},
{"availability":"manageable","component":"runtime","defaultValue":"40","definedIn":"share/runtime/globals.hpp","description":"The minimum percentage of heap free after GC to avoid expansion.\n For most GCs this applies to the old generation. In G1 and\n ParallelGC it applies to the whole heap.","name":"MinHeapFreeRatio","prefix":"-XX:","range":"range(0, 100)","type":"uintx"},
{"availability":"product","component":"runtime","defaultValue":"250","definedIn":"share/runtime/globals.hpp","description":"The minimum invocation count a method needs to have to be \ninlined","name":"MinInliningThreshold","prefix":"-XX:","range":"range(0, max_jint)","type":"intx"},
{"availability":"define_pd_global","cpu":"aarch64","defaultValue":"10","definedIn":"cpu/aarch64/c2_globals_aarch64.hpp","name":"MinJumpTableSize","prefix":"-XX:","type":"intx"},
{"availability":"product_pd","component":"c2","definedIn":"share/opto/c2_globals.hpp","description":"Minimum number of targets in a generated jump table","name":"MinJumpTableSize","prefix":"-XX:","range":"range(0, max_intx)","type":"intx"},
{"availability":"define_pd_global","cpu":"ppc","defaultValue":"10","definedIn":"cpu/ppc/c2_globals_ppc.hpp","name":"MinJumpTableSize","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"s390","defaultValue":"18","definedIn":"cpu/s390/c2_globals_s390.hpp","name":"MinJumpTableSize","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"sparc","defaultValue":"5","definedIn":"cpu/sparc/c2_globals_sparc.hpp","name":"MinJumpTableSize","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"x86","defaultValue":"10","definedIn":"cpu/x86/c2_globals_x86.hpp","name":"MinJumpTableSize","prefix":"-XX:","type":"intx"},
{"availability":"product","component":"runtime","defaultValue":"ScaleForWordSize(256*K)","definedIn":"share/runtime/globals.hpp","description":"The minimum expansion of Metaspace (in bytes)","name":"MinMetaspaceExpansion","prefix":"-XX:","range":"range(0, max_uintx)","type":"size_t"},
{"availability":"product","component":"runtime","defaultValue":"40","definedIn":"share/runtime/globals.hpp","description":"The minimum percentage of Metaspace free after GC to avoid \nexpansion","name":"MinMetaspaceFreeRatio","prefix":"-XX:","range":"range(0, 99)","type":"uintx"},
{"availability":"develop","component":"runtime","defaultValue":"8","definedIn":"share/runtime/globals.hpp","description":"Minimum number of OopMap entries in an OopMapSet","name":"MinOopMapAllocation","prefix":"-XX:","type":"intx"},
{"availability":"diagnostic","component":"runtime","defaultValue":"10","definedIn":"share/runtime/globals.hpp","description":"Minimum number of sweeper passes before an nmethod \ncan be flushed","name":"MinPassesBeforeFlush","prefix":"-XX:","range":"range(0, max_intx)","type":"intx"},
{"availability":"product","component":"gc","defaultValue":"2","definedIn":"share/gc/shared/gc_globals.hpp","deprecated":"10","description":"Minimum fraction (1/n) of real memory used for maximum heap \nsize on systems with small physical memory size. \nDeprecated, use MinRAMPercentage instead","expired":"","name":"MinRAMFraction","obsoleted":"","prefix":"-XX:","range":"range(1, max_uintx)","type":"uintx"},
{"availability":"product","component":"gc","defaultValue":"50.0","definedIn":"share/gc/shared/gc_globals.hpp","description":"Minimum percentage of real memory used for maximum heap\nsize on systems with small physical memory size","name":"MinRAMPercentage","prefix":"-XX:","range":"range(0.0, 100.0)","type":"double"},
{"availability":"product","component":"gc","defaultValue":"3","definedIn":"share/gc/shared/gc_globals.hpp","description":"Minimum ratio of young generation/survivor space size","name":"MinSurvivorRatio","prefix":"-XX:","range":"range(3, max_uintx)","type":"uintx"},
{"availability":"product","component":"gc","defaultValue":"2*K","definedIn":"share/gc/shared/gc_globals.hpp","description":"Minimum allowed TLAB size (in bytes)","name":"MinTLABSize","prefix":"-XX:","range":"range(1, max_uintx/2)","type":"size_t"},
{"availability":"product","component":"runtime","defaultValue":"0","definedIn":"share/runtime/globals.hpp","deprecated":"14","description":"Bound Monitor population","expired":"16","name":"MonitorBound","obsoleted":"15","prefix":"-XX:","range":"range(0, max_jint)","type":"intx"},
{"availability":"product","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","deprecated":"10","description":"Track Monitors for Deflation","expired":"13","name":"MonitorInUseLists","obsoleted":"12","prefix":"-XX:","type":"bool"},
{"availability":"experimental","component":"runtime","defaultValue":"90","definedIn":"share/runtime/globals.hpp","description":"Percentage of used monitors before triggering cleanup \nsafepoint which deflates monitors (0 is off). \nThe check is performed on GuaranteedSafepointInterval.","name":"MonitorUsedDeflationThreshold","prefix":"-XX:","range":"range(0, 100)","type":"intx"},
{"availability":"develop","component":"c2","defaultValue":"true","definedIn":"share/opto/c2_globals.hpp","description":"Uncommon-trap array store checks that require full type check","name":"MonomorphicArrayCheck","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"c2","defaultValue":"6","definedIn":"share/opto/c2_globals.hpp","description":"Maximum number of individual allocations in an inline-expanded \nmultianewarray instruction","name":"MultiArrayExpandLimit","prefix":"-XX:","range":"range(0, max_jint)","type":"intx"},
{"availability":"develop","component":"c1","defaultValue":"(64*K)*wordSize","definedIn":"share/c1/c1_globals.hpp","description":"Maximum size of a compiled method.","name":"NMethodSizeLimit","prefix":"-XX:","range":"range(0, max_jint)","type":"intx"},
{"availability":"product","component":"runtime","defaultValue":"20","definedIn":"share/runtime/globals.hpp","description":"Percentage (0-100) used to weight the current sample when \ncomputing exponentially decaying average for \nAdaptiveNUMAChunkSizing","name":"NUMAChunkResizeWeight","prefix":"-XX:","range":"range(0, 100)","type":"uintx"},
{"availability":"product","component":"runtime","defaultValue":"2*M","definedIn":"share/runtime/globals.hpp","description":"Granularity to use for NUMA interleaving on Windows OS","name":"NUMAInterleaveGranularity","prefix":"-XX:","range":"range(os::vm_allocation_granularity(), NOT_LP64(2*G) LP64_ONLY(8192*G))","type":"size_t"},
{"availability":"product","component":"runtime","defaultValue":"256","definedIn":"share/runtime/globals.hpp","description":"Maximum number of pages to include in the page scan procedure","name":"NUMAPageScanRate","prefix":"-XX:","range":"range(0, max_uintx)","type":"uintx"},
{"availability":"product","component":"runtime","defaultValue":"1*G","definedIn":"share/runtime/globals.hpp","description":"Do not reallocate more than this amount per collection","name":"NUMASpaceResizeRate","prefix":"-XX:","range":"range(0, max_uintx)","type":"size_t"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Print NUMA stats in detailed heap information","name":"NUMAStats","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"off","definedIn":"share/runtime/globals.hpp","description":"Native memory tracking options","name":"NativeMemoryTracking","prefix":"-XX:","type":"ccstr"},
{"availability":"product","cpu":"aarch64","defaultValue":"true","definedIn":"cpu/aarch64/globals_aarch64.hpp","description":"constant pool is close to instructions","name":"NearCpool","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","comment":"// only register window machines need this","cpu":"aarch64","defaultValue":"false","definedIn":"cpu/aarch64/globals_aarch64.hpp","deprecated":"","expired":"14","name":"NeedsDeoptSuspend","obsoleted":"13","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","comment":"// only register window machines need this","cpu":"arm","defaultValue":"false","definedIn":"cpu/arm/globals_arm.hpp","deprecated":"","expired":"14","name":"NeedsDeoptSuspend","obsoleted":"13","prefix":"-XX:","type":"bool"},
{"availability":"product_pd","component":"runtime","definedIn":"share/runtime/globals.hpp","deprecated":"","description":"True for register window machines (sparc/ia64)","expired":"14","name":"NeedsDeoptSuspend","obsoleted":"13","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","comment":"// Only register window machines need this.","cpu":"ppc","defaultValue":"false","definedIn":"cpu/ppc/globals_ppc.hpp","deprecated":"","expired":"14","name":"NeedsDeoptSuspend","obsoleted":"13","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","comment":"// Only register window machines need this.","cpu":"s390","defaultValue":"false","definedIn":"cpu/s390/globals_s390.hpp","deprecated":"","expired":"14","name":"NeedsDeoptSuspend","obsoleted":"13","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","comment":"// register window machines need this","cpu":"sparc","defaultValue":"true","definedIn":"cpu/sparc/globals_sparc.hpp","deprecated":"","expired":"14","name":"NeedsDeoptSuspend","obsoleted":"13","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","comment":"// only register window machines need this","cpu":"x86","defaultValue":"false","definedIn":"cpu/x86/globals_x86.hpp","deprecated":"","expired":"14","name":"NeedsDeoptSuspend","obsoleted":"13","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"zero","defaultValue":"false","definedIn":"cpu/zero/globals_zero.hpp","deprecated":"","expired":"14","name":"NeedsDeoptSuspend","obsoleted":"13","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"c1","defaultValue":"90","definedIn":"share/c1/c1_globals.hpp","description":"Percentage of prev. allowed inline size in recursive inlining","name":"NestedInliningSizeRatio","prefix":"-XX:","range":"range(0, 100)","type":"intx"},
{"availability":"define_pd_global","cpu":"aarch64","defaultValue":"true","definedIn":"cpu/aarch64/c1_globals_aarch64.hpp","name":"NeverActAsServerClassMachine","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"arm","defaultValue":"true","definedIn":"cpu/arm/c1_globals_arm.hpp","name":"NeverActAsServerClassMachine","prefix":"-XX:","type":"bool"},
{"availability":"product_pd","component":"gc","definedIn":"share/gc/shared/gc_globals.hpp","description":"Never act like a server-class machine","name":"NeverActAsServerClassMachine","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","name":"NeverActAsServerClassMachine","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"ppc","defaultValue":"true","definedIn":"cpu/ppc/c1_globals_ppc.hpp","name":"NeverActAsServerClassMachine","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"s390","defaultValue":"false","definedIn":"cpu/s390/c2_globals_s390.hpp","name":"NeverActAsServerClassMachine","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"sparc","defaultValue":"true","definedIn":"cpu/sparc/c1_globals_sparc.hpp","name":"NeverActAsServerClassMachine","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"x86","defaultValue":"true","definedIn":"cpu/x86/c1_globals_x86.hpp","name":"NeverActAsServerClassMachine","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"gc","defaultValue":"false","definedIn":"share/gc/shared/gc_globals.hpp","description":"Never tenure objects in eden, may tenure on overflow \n(ParallelGC only)","name":"NeverTenure","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"0","definedIn":"share/runtime/globals.hpp","description":"Testing Only: Create a dedicated integer parameter before \nputback","name":"NewCodeParameter","prefix":"-XX:","type":"intx"},
{"availability":"product","component":"gc","defaultValue":"2","definedIn":"share/gc/shared/gc_globals.hpp","description":"Ratio of old/new generation sizes","name":"NewRatio","prefix":"-XX:","range":"range(0, max_uintx-1)","type":"uintx"},
{"availability":"define_pd_global","cpu":"aarch64","defaultValue":"4*K","definedIn":"cpu/aarch64/c1_globals_aarch64.hpp","name":"NewSizeThreadIncrease","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"arm","defaultValue":"ScaleForWordSize(4*K)","definedIn":"cpu/arm/c2_globals_arm.hpp","name":"NewSizeThreadIncrease","prefix":"-XX:","type":"size_t"},
{"availability":"product_pd","component":"gc","definedIn":"share/gc/shared/gc_globals.hpp","description":"Additional size added to desired new generation size per \nnon-daemon thread (in bytes)","name":"NewSizeThreadIncrease","prefix":"-XX:","range":"range(0, max_uintx)","type":"size_t"},
{"availability":"define_pd_global","component":"runtime","defaultValue":"4*K","definedIn":"share/runtime/globals.hpp","name":"NewSizeThreadIncrease","prefix":"-XX:","type":"size_t"},
{"availability":"define_pd_global","cpu":"ppc","defaultValue":"16*K","definedIn":"cpu/ppc/c1_globals_ppc.hpp","name":"NewSizeThreadIncrease","prefix":"-XX:","type":"size_t"},
{"availability":"define_pd_global","cpu":"s390","defaultValue":"ScaleForWordSize(4*K)","definedIn":"cpu/s390/c2_globals_s390.hpp","name":"NewSizeThreadIncrease","prefix":"-XX:","type":"size_t"},
{"availability":"define_pd_global","cpu":"sparc","defaultValue":"16*K","definedIn":"cpu/sparc/c1_globals_sparc.hpp","name":"NewSizeThreadIncrease","prefix":"-XX:","type":"size_t"},
{"availability":"define_pd_global","cpu":"x86","defaultValue":"4*K","definedIn":"cpu/x86/c1_globals_x86.hpp","name":"NewSizeThreadIncrease","prefix":"-XX:","type":"size_t"},
{"availability":"product","component":"gc","defaultValue":"ScaleForWordSize(1*M)","definedIn":"share/gc/shared/gc_globals.hpp","description":"Initial new generation size (in bytes)","name":"NewSize","prefix":"-XX:","type":"size_t"},
{"availability":"product","component":"runtime","defaultValue":"10","definedIn":"share/runtime/globals.hpp","description":"Removes cold nmethods from code cache if > 0. Higher values \nresult in more aggressive sweeping","name":"NmethodSweepActivity","prefix":"-XX:","range":"range(0, 2000)","type":"intx"},
{"availability":"develop","component":"c2","defaultValue":"18000","definedIn":"share/opto/c2_globals.hpp","description":"If parser node generation exceeds limit stop inlining","name":"NodeCountInliningCutoff","prefix":"-XX:","range":"range(0, max_jint)","type":"intx"},
{"availability":"develop","component":"c2","defaultValue":"1000","definedIn":"share/opto/c2_globals.hpp","description":"Target size of warm calls inlined between optimization passes","name":"NodeCountInliningStep","prefix":"-XX:","range":"range(0, max_jint)","type":"intx"},
{"availability":"product","component":"c2","defaultValue":"2000","definedIn":"share/opto/c2_globals.hpp","description":"Fudge Factor for certain optimizations","name":"NodeLimitFudgeFactor","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"aarch64","defaultValue":"5*M","definedIn":"cpu/aarch64/c1_globals_aarch64.hpp","name":"NonNMethodCodeHeapSize","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"arm","defaultValue":"5*M","definedIn":"cpu/arm/c1_globals_arm.hpp","name":"NonNMethodCodeHeapSize","prefix":"-XX:","type":"size_t"},
{"availability":"product_pd","component":"runtime","definedIn":"share/runtime/globals.hpp","description":"Size of code heap with non-nmethods (in bytes)","name":"NonNMethodCodeHeapSize","prefix":"-XX:","range":"range(os::vm_page_size(), max_uintx)","type":"uintx"},
{"availability":"define_pd_global","cpu":"ppc","defaultValue":"5*M","definedIn":"cpu/ppc/c1_globals_ppc.hpp","name":"NonNMethodCodeHeapSize","prefix":"-XX:","type":"uintx"},
{"availability":"define_pd_global","cpu":"s390","defaultValue":"5*M","definedIn":"cpu/s390/c2_globals_s390.hpp","name":"NonNMethodCodeHeapSize","prefix":"-XX:","type":"uintx"},
{"availability":"define_pd_global","cpu":"sparc","defaultValue":"5*M","definedIn":"cpu/sparc/c1_globals_sparc.hpp","name":"NonNMethodCodeHeapSize","prefix":"-XX:","type":"uintx"},
{"availability":"define_pd_global","cpu":"x86","defaultValue":"5*M","definedIn":"cpu/x86/c1_globals_x86.hpp","name":"NonNMethodCodeHeapSize","prefix":"-XX:","type":"uintx"},
{"availability":"define_pd_global","cpu":"aarch64","defaultValue":"13*M","definedIn":"cpu/aarch64/c1_globals_aarch64.hpp","name":"NonProfiledCodeHeapSize","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"arm","defaultValue":"13*M","definedIn":"cpu/arm/c1_globals_arm.hpp","name":"NonProfiledCodeHeapSize","prefix":"-XX:","type":"size_t"},
{"availability":"product_pd","component":"runtime","definedIn":"share/runtime/globals.hpp","description":"Size of code heap with non-profiled methods (in bytes)","name":"NonProfiledCodeHeapSize","prefix":"-XX:","range":"range(0, max_uintx)","type":"uintx"},
{"availability":"define_pd_global","cpu":"ppc","defaultValue":"13*M","definedIn":"cpu/ppc/c1_globals_ppc.hpp","name":"NonProfiledCodeHeapSize","prefix":"-XX:","type":"uintx"},
{"availability":"define_pd_global","cpu":"s390","defaultValue":"21*M","definedIn":"cpu/s390/c2_globals_s390.hpp","name":"NonProfiledCodeHeapSize","prefix":"-XX:","type":"uintx"},
{"availability":"define_pd_global","cpu":"sparc","defaultValue":"13*M","definedIn":"cpu/sparc/c1_globals_sparc.hpp","name":"NonProfiledCodeHeapSize","prefix":"-XX:","type":"uintx"},
{"availability":"define_pd_global","cpu":"x86","defaultValue":"13*M","definedIn":"cpu/x86/c1_globals_x86.hpp","name":"NonProfiledCodeHeapSize","prefix":"-XX:","type":"uintx"},
{"availability":"product","component":"c2","defaultValue":"4","definedIn":"share/opto/c2_globals.hpp","description":"Number of first instructions in a loop to align","name":"NumberOfLoopInstrToAlign","prefix":"-XX:","range":"range(0, max_jint)","type":"intx"},
{"availability":"develop","component":"runtime","defaultValue":"-1","definedIn":"share/runtime/globals.hpp","description":"OSR only at this bci. Negative values mean exclude that bci","name":"OSROnlyBCI","prefix":"-XX:","type":"intx"},
{"availability":"develop","component":"gc","defaultValue":"2048","definedIn":"share/gc/shared/gc_globals.hpp","description":"Number of object array elements to push onto the marking stack \nbefore pushing a continuation entry","name":"ObjArrayMarkingStride","prefix":"-XX:","type":"uintx"},
{"availability":"lp64_product","component":"runtime","defaultValue":"8","definedIn":"share/runtime/globals.hpp","description":"Default object alignment in bytes, 8 is minimum","name":"ObjectAlignmentInBytes","prefix":"-XX:","range":"range(8, 256)","type":"intx"},
{"availability":"experimental","component":"runtime","defaultValue":"0.5","definedIn":"share/runtime/globals.hpp","description":"The percentage of the used heap that the instances of a class \nmust occupy for the class to generate a trace event","name":"ObjectCountCutOffPercent","prefix":"-XX:","range":"range(0.0, 100.0)","type":"double"},
{"availability":"product","component":"gc","defaultValue":"1024","definedIn":"share/gc/shared/gc_globals.hpp","description":"Size of old gen promotion LAB's (in HeapWords), or Number \nof blocks to attempt to claim when refilling CMS LAB's","name":"OldPLABSize","prefix":"-XX:","type":"size_t"},
{"availability":"product","component":"gc","defaultValue":"50","definedIn":"share/gc/shared/gc_globals.hpp","deprecated":"","description":"Percentage (0-100) used to weight the current sample when \ncomputing exponentially decaying average for resizing \nOldPLABSize","expired":"15","name":"OldPLABWeight","obsoleted":"14","prefix":"-XX:","range":"range(0, 100)","type":"uintx"},
{"availability":"product","component":"gc","defaultValue":"ScaleForWordSize(4*M)","definedIn":"share/gc/shared/gc_globals.hpp","description":"Initial tenured generation size (in bytes)","name":"OldSize","prefix":"-XX:","range":"range(0, max_uintx)","type":"size_t"},
{"availability":"product","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","description":"Omit backtraces for some 'hot' exceptions in optimized code","name":"OmitStackTraceInFastThrow","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"<br>","definedIn":"share/runtime/globals.hpp","description":"Run user-defined commands on fatal error; see VMError.cpp \nfor examples","name":"OnError","prefix":"-XX:","type":"ccstrlist"},
{"availability":"product","component":"runtime","defaultValue":"<br>","definedIn":"share/runtime/globals.hpp","description":"Run user-defined commands on first java.lang.OutOfMemoryError","name":"OnOutOfMemoryError","prefix":"-XX:","type":"ccstrlist"},
{"availability":"define_pd_global","cpu":"aarch64","defaultValue":"933","definedIn":"cpu/aarch64/c1_globals_aarch64.hpp","name":"OnStackReplacePercentage","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"arm","defaultValue":"140","definedIn":"cpu/arm/c2_globals_arm.hpp","name":"OnStackReplacePercentage","prefix":"-XX:","type":"intx"},
{"availability":"product_pd","component":"runtime","definedIn":"share/runtime/globals.hpp","description":"NON_TIERED number of method invocations/branches (expressed as \n% of CompileThreshold) before (re-)compiling OSR code","name":"OnStackReplacePercentage","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"ppc","defaultValue":"1400","definedIn":"cpu/ppc/c1_globals_ppc.hpp","name":"OnStackReplacePercentage","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"s390","defaultValue":"140","definedIn":"cpu/s390/c2_globals_s390.hpp","name":"OnStackReplacePercentage","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"sparc","defaultValue":"1400","definedIn":"cpu/sparc/c1_globals_sparc.hpp","name":"OnStackReplacePercentage","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"x86","defaultValue":"933","definedIn":"cpu/x86/c1_globals_x86.hpp","name":"OnStackReplacePercentage","prefix":"-XX:","type":"intx"},
{"availability":"diagnostic","component":"c2","defaultValue":"true","definedIn":"share/opto/c2_globals.hpp","description":"Find best control for expensive operations","name":"OptimizeExpensiveOps","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"c2","defaultValue":"true PPC64_ONLY(&& false)","definedIn":"share/opto/c2_globals.hpp","description":"convert fill/copy loops into intrinsic","name":"OptimizeFill","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"c1","defaultValue":"true","definedIn":"share/c1/c1_globals.hpp","description":"Optimize multiple IfOps","name":"OptimizeIfOps","prefix":"-XX:","type":"bool"},
{"availability":"product","defaultValue":"true","definedIn":"os/aix/globals_aix.hpp","description":"Optimize the location of the polling page used for Safepoints","name":"OptimizePollingPageLocation","os":"aix","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"c2","defaultValue":"true","definedIn":"share/opto/c2_globals.hpp","description":"Use escape analysis to optimize pointers compare","name":"OptimizePtrCompare","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"aarch64","defaultValue":"true","definedIn":"cpu/aarch64/c1_globals_aarch64.hpp","name":"OptimizeSinglePrecision","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"arm","defaultValue":"true","definedIn":"cpu/arm/c1_globals_arm.hpp","name":"OptimizeSinglePrecision","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"ppc","defaultValue":"false","definedIn":"cpu/ppc/c1_globals_ppc.hpp","name":"OptimizeSinglePrecision","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"s390","defaultValue":"false","definedIn":"cpu/s390/c1_globals_s390.hpp","name":"OptimizeSinglePrecision","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"sparc","defaultValue":"false","definedIn":"cpu/sparc/c1_globals_sparc.hpp","name":"OptimizeSinglePrecision","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"x86","defaultValue":"true","definedIn":"cpu/x86/c1_globals_x86.hpp","name":"OptimizeSinglePrecision","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"c2","defaultValue":"true","definedIn":"share/opto/c2_globals.hpp","description":"Optimize the construction of Strings by StringBuilder","name":"OptimizeStringConcat","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"c1","defaultValue":"true","definedIn":"share/c1/c1_globals.hpp","description":"Optimize raw unsafe ops","name":"OptimizeUnsafes","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"c2","defaultValue":"8","definedIn":"share/opto/c2_globals.hpp","description":"Starting allocation size of Block_List data structures","name":"OptoBlockListSize","prefix":"-XX:","range":"range(0, max_jint)","type":"intx"},
{"availability":"notproduct","component":"c2","defaultValue":"false","definedIn":"share/opto/c2_globals.hpp","description":"insert breakpoint at runtime stub entry","name":"OptoBreakpointC2R","prefix":"-XX:","type":"bool"},
{"availability":"notproduct","component":"c2","defaultValue":"false","definedIn":"share/opto/c2_globals.hpp","description":"insert breakpoint at osr method entry","name":"OptoBreakpointOSR","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"c2","defaultValue":"false","definedIn":"share/opto/c2_globals.hpp","description":"insert breakpoint at method entry","name":"OptoBreakpoint","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"aarch64","defaultValue":"false","definedIn":"cpu/aarch64/c2_globals_aarch64.hpp","name":"OptoBundling","prefix":"-XX:","type":"bool"},
{"availability":"product_pd","component":"c2","definedIn":"share/opto/c2_globals.hpp","description":"Generate nops to fill i-cache lines","name":"OptoBundling","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"ppc","defaultValue":"false","definedIn":"cpu/ppc/c2_globals_ppc.hpp","name":"OptoBundling","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"s390","defaultValue":"false","definedIn":"cpu/s390/c2_globals_s390.hpp","name":"OptoBundling","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"sparc","defaultValue":"false","definedIn":"cpu/sparc/c2_globals_sparc.hpp","name":"OptoBundling","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"x86","defaultValue":"false","definedIn":"cpu/x86/c2_globals_x86.hpp","name":"OptoBundling","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"c2","defaultValue":"true","definedIn":"share/opto/c2_globals.hpp","description":"Use Conservative Copy Coalescing in the Register Allocator","name":"OptoCoalesce","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"aarch64","defaultValue":"16","definedIn":"cpu/aarch64/globals_aarch64.hpp","name":"OptoLoopAlignment","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"arm","defaultValue":"16","definedIn":"cpu/arm/globals_arm.hpp","name":"OptoLoopAlignment","prefix":"-XX:","type":"intx"},
{"availability":"product_pd","component":"runtime","definedIn":"share/runtime/globals.hpp","description":"Align inner loops to zero relative to this modulus","name":"OptoLoopAlignment","prefix":"-XX:","range":"range(1, 16)","type":"intx"},
{"availability":"define_pd_global","cpu":"ppc","defaultValue":"16","definedIn":"cpu/ppc/globals_ppc.hpp","name":"OptoLoopAlignment","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"s390","defaultValue":"2","definedIn":"cpu/s390/globals_s390.hpp","name":"OptoLoopAlignment","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","comment":"// = 4*wordSize","cpu":"sparc","defaultValue":"16","definedIn":"cpu/sparc/globals_sparc.hpp","name":"OptoLoopAlignment","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"x86","defaultValue":"16","definedIn":"cpu/x86/globals_x86.hpp","name":"OptoLoopAlignment","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"zero","defaultValue":"16","definedIn":"cpu/zero/globals_zero.hpp","name":"OptoLoopAlignment","prefix":"-XX:","type":"intx"},
{"availability":"notproduct","component":"c2","defaultValue":"false","definedIn":"share/opto/c2_globals.hpp","description":"Attempt to parse and compile but do not execute generated code","name":"OptoNoExecute","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"c2","defaultValue":"4","definedIn":"share/opto/c2_globals.hpp","description":"Starting allocation size of Node_List data structures","name":"OptoNodeListSize","prefix":"-XX:","range":"range(0, max_jint)","type":"intx"},
{"availability":"develop","component":"c2","defaultValue":"-1","definedIn":"share/opto/c2_globals.hpp","description":"Apply peephole optimizations to this peephole rule","name":"OptoPeepholeAt","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"aarch64","defaultValue":"false","definedIn":"cpu/aarch64/c2_globals_aarch64.hpp","name":"OptoPeephole","prefix":"-XX:","type":"bool"},
{"availability":"develop_pd","component":"c2","definedIn":"share/opto/c2_globals.hpp","description":"Apply peephole optimizations after register allocation","name":"OptoPeephole","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"ppc","defaultValue":"false","definedIn":"cpu/ppc/c2_globals_ppc.hpp","name":"OptoPeephole","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"s390","defaultValue":"false","definedIn":"cpu/s390/c2_globals_s390.hpp","name":"OptoPeephole","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"sparc","defaultValue":"false","definedIn":"cpu/sparc/c2_globals_sparc.hpp","name":"OptoPeephole","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"x86","defaultValue":"true","definedIn":"cpu/x86/c2_globals_x86.hpp","name":"OptoPeephole","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"c2","defaultValue":"0","definedIn":"share/opto/c2_globals.hpp","description":"Insert this many extra nop instructions \nin the prologue of every nmethod","name":"OptoPrologueNops","prefix":"-XX:","range":"range(0, 128)","type":"intx"},
{"availability":"define_pd_global","cpu":"aarch64","defaultValue":"false","definedIn":"cpu/aarch64/c2_globals_aarch64.hpp","name":"OptoRegScheduling","prefix":"-XX:","type":"bool"},
{"availability":"product_pd","component":"c2","definedIn":"share/opto/c2_globals.hpp","description":"Instruction Scheduling before register allocation for pressure","name":"OptoRegScheduling","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"ppc","defaultValue":"false","definedIn":"cpu/ppc/c2_globals_ppc.hpp","name":"OptoRegScheduling","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"s390","defaultValue":"false","definedIn":"cpu/s390/c2_globals_s390.hpp","name":"OptoRegScheduling","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"sparc","defaultValue":"false","definedIn":"cpu/sparc/c2_globals_sparc.hpp","name":"OptoRegScheduling","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"x86","defaultValue":"true","definedIn":"cpu/x86/c2_globals_x86.hpp","name":"OptoRegScheduling","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"c2","defaultValue":"true","definedIn":"share/opto/c2_globals.hpp","description":"Remove useless nodes after parsing","name":"OptoRemoveUseless","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"aarch64","defaultValue":"false","definedIn":"cpu/aarch64/c2_globals_aarch64.hpp","name":"OptoScheduling","prefix":"-XX:","type":"bool"},
{"availability":"product_pd","component":"c2","definedIn":"share/opto/c2_globals.hpp","description":"Instruction Scheduling after register allocation","name":"OptoScheduling","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"ppc","defaultValue":"false","definedIn":"cpu/ppc/c2_globals_ppc.hpp","name":"OptoScheduling","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"s390","defaultValue":"false","definedIn":"cpu/s390/c2_globals_s390.hpp","name":"OptoScheduling","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"sparc","defaultValue":"true","definedIn":"cpu/sparc/c2_globals_sparc.hpp","name":"OptoScheduling","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"x86","defaultValue":"false","definedIn":"cpu/x86/c2_globals_x86.hpp","name":"OptoScheduling","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"gc","defaultValue":"75","definedIn":"share/gc/shared/gc_globals.hpp","description":"Percentage (0-100) used to weight the current sample when \ncomputing exponentially decaying average for ResizePLAB","name":"PLABWeight","prefix":"-XX:","range":"range(0, 100)","type":"uintx"},
{"availability":"develop","component":"gc","defaultValue":"-1","definedIn":"share/gc/shared/gc_globals.hpp","description":"Resize the virtual spaces of the young or old generations","name":"PSAdaptiveSizePolicyResizeVirtualSpaceAlot","prefix":"-XX:","range":"range(-1, 1)","type":"intx"},
{"availability":"product","component":"gc","defaultValue":"true","definedIn":"share/gc/parallel/parallel_globals.hpp","description":"Process large arrays in chunks","name":"PSChunkLargeArrays","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"gc","defaultValue":"50","definedIn":"share/gc/shared/gc_globals.hpp","description":"Scan a subset of object array and push remainder, if array is \nbigger than this","name":"ParGCArrayScanChunk","prefix":"-XX:","range":"range(1, max_jint/3)","type":"int"},
{"availability":"diagnostic","component":"gc","defaultValue":"256","definedIn":"share/gc/cms/cms_globals.hpp","description":"The number of cards in each chunk of the parallel chunks used \nduring card table scanning","name":"ParGCCardsPerStrideChunk","prefix":"-XX:","range":"range(1, max_intx)","type":"intx"},
{"availability":"product","component":"gc","defaultValue":"20","definedIn":"share/gc/cms/cms_globals.hpp","deprecated":"","description":"The desired number of objects to claim from the overflow list","expired":"15","name":"ParGCDesiredObjsFromOverflowList","obsoleted":"14","prefix":"-XX:","range":"range(0, max_uintx)","type":"uintx"},
{"availability":"diagnostic","component":"gc","defaultValue":"2","definedIn":"share/gc/cms/cms_globals.hpp","description":"The number of strides per worker thread that we divide up the \ncard table scanning work into","name":"ParGCStridesPerThread","prefix":"-XX:","range":"range(1, max_uintx)","type":"uintx"},
{"availability":"product","component":"gc","defaultValue":"true","definedIn":"share/gc/cms/cms_globals.hpp","deprecated":"","description":"Eagerly trim the local overflow lists \n(when ParGCUseLocalOverflow)","expired":"15","name":"ParGCTrimOverflow","obsoleted":"14","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"gc","defaultValue":"false","definedIn":"share/gc/cms/cms_globals.hpp","deprecated":"","description":"Instead of a global overflow list, use local overflow stacks","expired":"15","name":"ParGCUseLocalOverflow","obsoleted":"14","prefix":"-XX:","type":"bool"},
{"availability":"notproduct","component":"gc","defaultValue":"false","definedIn":"share/gc/cms/cms_globals.hpp","description":"Simulate work queue overflow in ParNew","name":"ParGCWorkQueueOverflowALot","prefix":"-XX:","type":"bool"},
{"availability":"notproduct","component":"gc","defaultValue":"1000","definedIn":"share/gc/cms/cms_globals.hpp","description":"An `interval' counter that determines how frequently \nwe simulate overflow; a smaller number increases frequency","name":"ParGCWorkQueueOverflowInterval","prefix":"-XX:","type":"uintx"},
{"availability":"product","component":"gc","defaultValue":"10","definedIn":"share/gc/shared/gc_globals.hpp","description":"Wasted fraction of parallel allocation buffer","name":"ParallelGCBufferWastePct","prefix":"-XX:","range":"range(0, 100)","type":"uintx"},
{"availability":"product","component":"gc","defaultValue":"0","definedIn":"share/gc/shared/gc_globals.hpp","description":"Number of parallel threads parallel gc will use","name":"ParallelGCThreads","prefix":"-XX:","type":"uint"},
{"availability":"product","component":"gc","defaultValue":"50","definedIn":"share/gc/parallel/parallel_globals.hpp","description":"The mean used by the parallel compact dead wood \nlimiter (a number between 0-100)","name":"ParallelOldDeadWoodLimiterMean","prefix":"-XX:","range":"range(0, 100)","type":"size_t"},
{"availability":"product","component":"gc","defaultValue":"80","definedIn":"share/gc/parallel/parallel_globals.hpp","description":"The standard deviation used by the parallel compact dead wood \nlimiter (a number between 0-100)","name":"ParallelOldDeadWoodLimiterStdDev","prefix":"-XX:","range":"range(0, 100)","type":"size_t"},
{"availability":"product","component":"gc","defaultValue":"true","definedIn":"share/gc/shared/gc_globals.hpp","description":"Enable balancing of reference processing queues","name":"ParallelRefProcBalancingEnabled","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"gc","defaultValue":"false","definedIn":"share/gc/shared/gc_globals.hpp","description":"Enable parallel reference processing whenever possible","name":"ParallelRefProcEnabled","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"c2","defaultValue":"true","definedIn":"share/opto/c2_globals.hpp","description":"Partial peel at unsigned tests if no signed test exists","name":"PartialPeelAtUnsignedTests","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"c2","defaultValue":"true","definedIn":"share/opto/c2_globals.hpp","description":"Partial peel (rotate) loops","name":"PartialPeelLoop","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"c2","defaultValue":"0","definedIn":"share/opto/c2_globals.hpp","description":"Additional phis that can be created by partial peeling","name":"PartialPeelNewPhiDelta","prefix":"-XX:","range":"range(0, max_jint)","type":"intx"},
{"availability":"develop","component":"c1","defaultValue":"false","definedIn":"share/c1/c1_globals.hpp","description":"Marks all fields as having unloaded classes","name":"PatchALot","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Pause and wait for keypress on exit if a debugger is attached","name":"PauseAtExit","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"runtime","defaultValue":"NULL","definedIn":"share/runtime/globals.hpp","description":"The file to create and for whose removal to await when pausing \nat startup. (default: ./vm.paused.<pid>)","name":"PauseAtStartupFile","prefix":"-XX:","type":"ccstr"},
{"availability":"diagnostic","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Causes the VM to pause at startup time and wait for the pause \nfile to be removed (default: ./vm.paused.<pid>)","name":"PauseAtStartup","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"gc","defaultValue":"1","definedIn":"share/gc/shared/gc_globals.hpp","description":"How much buffer to keep for pause time","name":"PausePadding","prefix":"-XX:","range":"range(0, max_juint)","type":"uintx"},
{"availability":"product","component":"runtime","defaultValue":"200","definedIn":"share/runtime/globals.hpp","description":"Per-BCI limit on repeated recompilation (-1=>'Inf')","name":"PerBytecodeRecompilationCutoff","prefix":"-XX:","range":"range(-1, max_intx)","type":"intx"},
{"availability":"product","component":"runtime","defaultValue":"4","definedIn":"share/runtime/globals.hpp","description":"Limit on traps (of one kind) at a particular BCI","name":"PerBytecodeTrapLimit","prefix":"-XX:","range":"range(0, max_jint)","type":"intx"},
{"availability":"product","component":"runtime","defaultValue":"400","definedIn":"share/runtime/globals.hpp","description":"After recompiling N times, stay in the interpreter (-1=>'Inf')","name":"PerMethodRecompilationCutoff","prefix":"-XX:","range":"range(-1, max_intx)","type":"intx"},
{"availability":"experimental","component":"runtime","defaultValue":"5000","definedIn":"share/runtime/globals.hpp","description":"Limit on speculative traps (of one kind) in a method \n(includes inlines)","name":"PerMethodSpecTrapLimit","prefix":"-XX:","range":"range(0, max_jint)","type":"intx"},
{"availability":"product","component":"runtime","defaultValue":"100","definedIn":"share/runtime/globals.hpp","description":"Limit on traps (of one kind) in a method (includes inlines)","name":"PerMethodTrapLimit","prefix":"-XX:","range":"range(0, max_jint)","type":"intx"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Allow registration of atexit() methods","name":"PerfAllowAtExitRegistration","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Bypass Win32 file system criteria checks (Windows Only)","name":"PerfBypassFileSystemCheck","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"32*K","definedIn":"share/runtime/globals.hpp","description":"Size of performance data memory region. Will be rounded \nup to a multiple of the native os page size.","name":"PerfDataMemorySize","prefix":"-XX:","range":"range(128, 32*64*K)","type":"intx"},
{"availability":"product","component":"runtime","defaultValue":"50","definedIn":"share/runtime/globals.hpp","description":"Data sampling interval (in milliseconds)","name":"PerfDataSamplingInterval","prefix":"-XX:","range":"range(PeriodicTask::min_interval, max_jint)","type":"intx"},
{"availability":"product","component":"runtime","defaultValue":"NULL","definedIn":"share/runtime/globals.hpp","description":"Save PerfData memory to the specified absolute pathname. \nThe string %p in the file name (if present) \nwill be replaced by pid","name":"PerfDataSaveFile","prefix":"-XX:","type":"ccstr"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Save PerfData memory to hsperfdata_<pid> file on exit","name":"PerfDataSaveToFile","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Store performance data in standard memory","name":"PerfDisableSharedMem","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"1024","definedIn":"share/runtime/globals.hpp","description":"Maximum PerfStringConstant string length before truncation","name":"PerfMaxStringConstLength","prefix":"-XX:","range":"range(32, 32*K)","type":"intx"},
{"availability":"develop","component":"c1","defaultValue":"false","definedIn":"share/c1/c1_globals.hpp","description":"All instructions are pinned","name":"PinAllInstructions","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"c2","defaultValue":"true","definedIn":"share/opto/c2_globals.hpp","description":"Detect abnormal calls to OSR code","name":"PoisonOSREntry","prefix":"-XX:","type":"bool"},
{"availability":"experimental","component":"c2","defaultValue":"false","definedIn":"share/opto/c2_globals.hpp","description":"Multi versioned post loops to eliminate range checks","name":"PostLoopMultiversioning","prefix":"-XX:","type":"bool"},
{"availability":"product","cpu":"ppc","defaultValue":"0","definedIn":"cpu/ppc/globals_ppc.hpp","description":"Specify the PowerPC family version in use. If not provided, \nHotSpot will determine it automatically. Host family version \nis the maximum value allowed (instructions are not emulated).","name":"PowerArchitecturePPC64","prefix":"-XX:","type":"uintx"},
{"availability":"product","component":"gc","defaultValue":"1 * G","definedIn":"share/gc/shared/gc_globals.hpp","description":"Per-thread chunk size for parallel memory pre-touch.","name":"PreTouchParallelChunkSize","prefix":"-XX:","range":"range(1, SIZE_MAX / 2)","type":"size_t"},
{"availability":"develop","component":"runtime","defaultValue":"4","definedIn":"share/runtime/globals.hpp","description":"Number of OutOfMemoryErrors preallocated with backtrace","name":"PreallocatedOutOfMemoryErrorCount","prefix":"-XX:","type":"uintx"},
{"availability":"product","defaultValue":"true","definedIn":"os/linux/globals_linux.hpp","description":"Calculate the container CPU availability based on the value\n of quotas (if set), when true. Otherwise, use the CPU\n shares value, provided it is less than quota.","name":"PreferContainerQuotaForCPUCount","os":"linux","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"aarch64","defaultValue":"false","definedIn":"cpu/aarch64/c1_globals_aarch64.hpp","name":"PreferInterpreterNativeStubs","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"arm","defaultValue":"false","definedIn":"cpu/arm/c2_globals_arm.hpp","name":"PreferInterpreterNativeStubs","prefix":"-XX:","type":"bool"},
{"availability":"product_pd","component":"runtime","definedIn":"share/runtime/globals.hpp","description":"Use always interpreter stubs for native methods invoked via \ninterpreter","name":"PreferInterpreterNativeStubs","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"ppc","defaultValue":"false","definedIn":"cpu/ppc/c1_globals_ppc.hpp","name":"PreferInterpreterNativeStubs","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"s390","defaultValue":"false","definedIn":"cpu/s390/c2_globals_s390.hpp","name":"PreferInterpreterNativeStubs","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"sparc","defaultValue":"false","definedIn":"cpu/sparc/c1_globals_sparc.hpp","name":"PreferInterpreterNativeStubs","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"x86","defaultValue":"false","definedIn":"cpu/x86/c1_globals_x86.hpp","name":"PreferInterpreterNativeStubs","prefix":"-XX:","type":"bool"},
{"availability":"product","cpu":"s390","defaultValue":"false","definedIn":"cpu/s390/globals_s390.hpp","description":"Use LA/LAY instructions over ADD instructions (z/Architecture).","name":"PreferLAoverADD","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"gc","defaultValue":"-1","definedIn":"share/gc/shared/gc_globals.hpp","description":"How far ahead to prefetch destination area (<= 0 means off)","name":"PrefetchCopyIntervalInBytes","prefix":"-XX:","range":"range(-1, max_jint)","type":"intx"},
{"availability":"product","component":"gc","defaultValue":"-1","definedIn":"share/gc/shared/gc_globals.hpp","description":"How many fields ahead to prefetch in oop scan (<= 0 means off)","name":"PrefetchFieldsAhead","prefix":"-XX:","range":"range(-1, max_jint)","type":"intx"},
{"availability":"product","component":"gc","defaultValue":"-1","definedIn":"share/gc/shared/gc_globals.hpp","description":"How far ahead to prefetch scan area (<= 0 means off)","name":"PrefetchScanIntervalInBytes","prefix":"-XX:","range":"range(-1, max_jint)","type":"intx"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Preserve RuntimeInvisibleAnnotations as well \nas RuntimeVisibleAnnotations","name":"PreserveAllAnnotations","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"aarch64","defaultValue":"false","definedIn":"cpu/aarch64/globals_aarch64.hpp","name":"PreserveFramePointer","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"arm","defaultValue":"false","definedIn":"cpu/arm/globals_arm.hpp","name":"PreserveFramePointer","prefix":"-XX:","type":"bool"},
{"availability":"product_pd","component":"runtime","definedIn":"share/runtime/globals.hpp","description":"Use the FP register for holding the frame pointer \nand not as a general purpose register.","name":"PreserveFramePointer","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"ppc","defaultValue":"false","definedIn":"cpu/ppc/globals_ppc.hpp","name":"PreserveFramePointer","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"s390","defaultValue":"false","definedIn":"cpu/s390/globals_s390.hpp","name":"PreserveFramePointer","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"sparc","defaultValue":"false","definedIn":"cpu/sparc/globals_sparc.hpp","name":"PreserveFramePointer","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"x86","defaultValue":"false","definedIn":"cpu/x86/globals_x86.hpp","name":"PreserveFramePointer","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"zero","defaultValue":"false","definedIn":"cpu/zero/globals_zero.hpp","name":"PreserveFramePointer","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"gc","defaultValue":"0","definedIn":"share/gc/shared/gc_globals.hpp","description":"Maximum size in bytes of objects allocated in DefNew \ngeneration; zero means no maximum","name":"PretenureSizeThreshold","prefix":"-XX:","range":"range(0, max_uintx)","type":"size_t"},
{"availability":"notproduct","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Print AOT statistics","name":"PrintAOTStatistics","prefix":"-XX:","type":"bool"},
{"availability":"experimental","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Print used AOT klasses and methods","name":"PrintAOT","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Print code generated for i2c/c2i adapters","name":"PrintAdapterHandlers","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"runtime","defaultValue":"NULL","definedIn":"share/runtime/globals.hpp","description":"Print options string passed to disassembler.so","name":"PrintAssemblyOptions","prefix":"-XX:","type":"ccstr"},
{"availability":"diagnostic","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Print assembly code (using external disassembler.so)","name":"PrintAssembly","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"c1","defaultValue":"false","definedIn":"share/c1/c1_globals.hpp","description":"Print bailout and its reason","name":"PrintBailouts","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","deprecated":"15","description":"Print statistics of biased locking in JVM","expired":"19","name":"PrintBiasedLockingStatistics","obsoleted":"18","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"c1","defaultValue":"false","definedIn":"share/c1/c1_globals.hpp","description":"Print basic block elimination","name":"PrintBlockElimination","prefix":"-XX:","type":"bool"},
{"availability":"experimental","component":"jvmci","defaultValue":"true","definedIn":"share/jvmci/jvmci_globals.hpp","description":"Print JVMCI bootstrap progress and summary","name":"PrintBootstrap","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Print histogram of the executed bytecodes","name":"PrintBytecodeHistogram","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Print histogram of the executed bytecode pairs","name":"PrintBytecodePairHistogram","prefix":"-XX:","type":"bool"},
{"availability":"notproduct","component":"c1","defaultValue":"false","definedIn":"share/c1/c1_globals.hpp","description":"Print Compiler1 statistics","name":"PrintC1Statistics","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"c1","defaultValue":"false","definedIn":"share/c1/c1_globals.hpp","description":"Print Conditional Expression Elimination","name":"PrintCEE","prefix":"-XX:","type":"bool"},
{"availability":"notproduct","component":"c1","defaultValue":"false","definedIn":"share/c1/c1_globals.hpp","description":"Print control flow graph after construction","name":"PrintCFG0","prefix":"-XX:","type":"bool"},
{"availability":"notproduct","component":"c1","defaultValue":"false","definedIn":"share/c1/c1_globals.hpp","description":"Print control flow graph after optimizations","name":"PrintCFG1","prefix":"-XX:","type":"bool"},
{"availability":"notproduct","component":"c1","defaultValue":"false","definedIn":"share/c1/c1_globals.hpp","description":"Print control flow graph before code generation","name":"PrintCFG2","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"c2","defaultValue":"false","definedIn":"share/opto/c2_globals.hpp","description":"Print CFG block freqencies","name":"PrintCFGBlockFreq","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"c1","defaultValue":"false","definedIn":"share/c1/c1_globals.hpp","description":"print control flow graph to a separate file during compilation","name":"PrintCFGToFile","prefix":"-XX:","type":"bool"},
{"availability":"notproduct","component":"c1","defaultValue":"false","definedIn":"share/c1/c1_globals.hpp","description":"Print control flow graph after each change","name":"PrintCFG","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"c1","defaultValue":"false","definedIn":"share/c1/c1_globals.hpp","description":"Print graph node canonicalization","name":"PrintCanonicalization","prefix":"-XX:","type":"bool"},
{"availability":"manageable","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Print a histogram of class instances","name":"PrintClassHistogram","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Print detailed usage information on the code cache when exiting","name":"PrintCodeCache2","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Print extension of code cache","name":"PrintCodeCacheExtension","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Print the code cache memory usage each time a method is \ncompiled","name":"PrintCodeCacheOnCompilation","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Print the code cache memory usage when exiting","name":"PrintCodeCache","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Print flags specified on command line or set by ergonomics","name":"PrintCommandLineFlags","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Print additional statistics per compilation","name":"PrintCompilation2","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Print compilations","name":"PrintCompilation","prefix":"-XX:","type":"bool"},
{"availability":"manageable","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Print java.util.concurrent locks in thread dump","name":"PrintConcurrentLocks","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Print debug information for all nmethods when generated","name":"PrintDebugInfo","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Print more information about deoptimization","name":"PrintDeoptimizationDetails","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Print dependency information for all nmethods when generated","name":"PrintDependencies","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"c2","defaultValue":"false","definedIn":"share/opto/c2_globals.hpp","description":"Print out dominator trees for GVN","name":"PrintDominators","prefix":"-XX:","type":"bool"},
{"availability":"notproduct","component":"c2","defaultValue":"false","definedIn":"share/opto/c2_globals.hpp","description":"Print out when allocations are eliminated","name":"PrintEliminateAllocations","prefix":"-XX:","type":"bool"},
{"availability":"notproduct","component":"c2","defaultValue":"false","definedIn":"share/opto/c2_globals.hpp","description":"Print out when locks are eliminated","name":"PrintEliminateLocks","prefix":"-XX:","type":"bool"},
{"availability":"notproduct","component":"c2","defaultValue":"false","definedIn":"share/opto/c2_globals.hpp","description":"Print the results of escape analysis","name":"PrintEscapeAnalysis","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Print exception handler tables for all nmethods when generated","name":"PrintExceptionHandlers","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Print more information in thread dump","name":"PrintExtendedThreadInfo","prefix":"-XX:","type":"bool"},
{"availability":"notproduct","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Print field layout for each class","name":"PrintFieldLayout","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Print all VM flags after argument and ergonomic processing","name":"PrintFlagsFinal","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Print all VM flags before argument processing and exit VM","name":"PrintFlagsInitial","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Print VM flags and their ranges and exit VM","name":"PrintFlagsRanges","prefix":"-XX:","type":"bool"},
{"availability":"notproduct","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Print all VM flags with default values and descriptions and \nexit","name":"PrintFlagsWithComments","prefix":"-XX:","type":"bool"},
{"availability":"notproduct","component":"c2","defaultValue":"false","definedIn":"share/opto/c2_globals.hpp","description":"Print New compiler assembly output for frame converters","name":"PrintFrameConverterAssembly","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"gc","defaultValue":"false","definedIn":"share/gc/shared/gc_globals.hpp","description":"Print more details at garbage collection. \nDeprecated, use -Xlog:gc* instead.","name":"PrintGCDetails","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"gc","defaultValue":"false","definedIn":"share/gc/shared/gc_globals.hpp","description":"Print message at garbage collection. \nDeprecated, use -Xlog:gc instead.","name":"PrintGC","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","description":"Print heap layout in response to SIGBREAK","name":"PrintHeapAtSIGBREAK","prefix":"-XX:","type":"bool"},
{"availability":"notproduct","component":"c1","defaultValue":"false","definedIn":"share/c1/c1_globals.hpp","description":"Print full intermediate representation after construction","name":"PrintIR0","prefix":"-XX:","type":"bool"},
{"availability":"notproduct","component":"c1","defaultValue":"false","definedIn":"share/c1/c1_globals.hpp","description":"Print full intermediate representation after optimizations","name":"PrintIR1","prefix":"-XX:","type":"bool"},
{"availability":"notproduct","component":"c1","defaultValue":"false","definedIn":"share/c1/c1_globals.hpp","description":"Print full intermediate representation before code generation","name":"PrintIR2","prefix":"-XX:","type":"bool"},
{"availability":"notproduct","component":"c1","defaultValue":"false","definedIn":"share/c1/c1_globals.hpp","description":"Print IR as it's being constructed (helpful for debugging frontend)","name":"PrintIRDuringConstruction","prefix":"-XX:","type":"bool"},
{"availability":"notproduct","component":"c1","defaultValue":"false","definedIn":"share/c1/c1_globals.hpp","description":"Print IR instructions with generated LIR","name":"PrintIRWithLIR","prefix":"-XX:","type":"bool"},
{"availability":"notproduct","component":"c1","defaultValue":"false","definedIn":"share/c1/c1_globals.hpp","description":"Print full intermediate representation after each change","name":"PrintIR","prefix":"-XX:","type":"bool"},
{"availability":"notproduct","component":"c2","defaultValue":"127.0.0.1","definedIn":"share/opto/c2_globals.hpp","description":"IP address to connect to visualizer","name":"PrintIdealGraphAddress","prefix":"-XX:","type":"ccstr"},
{"availability":"notproduct","component":"c2","defaultValue":"NULL","definedIn":"share/opto/c2_globals.hpp","description":"File to dump ideal graph to. If set overrides the \nuse of the network","name":"PrintIdealGraphFile","prefix":"-XX:","type":"ccstr"},
{"availability":"notproduct","component":"c2","defaultValue":"0","definedIn":"share/opto/c2_globals.hpp","description":"Level of detail of the ideal graph printout. \nSystem-wide value, 0=nothing is printed, 4=all details printed. \nLevel of detail of printouts can be set on a per-method level \nas well by using CompileCommand=option.","name":"PrintIdealGraphLevel","prefix":"-XX:","range":"range(0, 4)","type":"intx"},
{"availability":"notproduct","component":"c2","defaultValue":"4444","definedIn":"share/opto/c2_globals.hpp","description":"Ideal graph printer to network port","name":"PrintIdealGraphPort","prefix":"-XX:","range":"range(0, SHRT_MAX)","type":"intx"},
{"availability":"notproduct","component":"c2","defaultValue":"false","definedIn":"share/opto/c2_globals.hpp","description":"Print ideal graph to XML file / network interface. \nBy default attempts to connect to the visualizer on a socket.","name":"PrintIdealGraph","prefix":"-XX:","type":"bool"},
{"availability":"notproduct","component":"c2","defaultValue":"false","definedIn":"share/opto/c2_globals.hpp","description":"Print liveness counts of ideal nodes","name":"PrintIdealNodeCount","prefix":"-XX:","type":"bool"},
{"availability":"notproduct","component":"c2","defaultValue":"false","definedIn":"share/opto/c2_globals.hpp","description":"Print ideal graph before code generation","name":"PrintIdeal","prefix":"-XX:","type":"bool"},
{"availability":"notproduct","component":"c1","defaultValue":"false","definedIn":"share/c1/c1_globals.hpp","description":"Print block list of BlockListBuilder","name":"PrintInitialBlockList","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Print inlining optimizations","name":"PrintInlining","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Print the generated interpreter code","name":"PrintInterpreter","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"c2","defaultValue":"false","definedIn":"share/opto/c2_globals.hpp","description":"prints attempted and successful inlining of intrinsics","name":"PrintIntrinsics","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","deprecated":"","description":"Used to implement -v:jni","expired":"17","name":"PrintJNIResolving","obsoleted":"16","prefix":"-XX:","type":"bool"},
{"availability":"notproduct","component":"c1","defaultValue":"false","definedIn":"share/c1/c1_globals.hpp","description":"Show LIR instruction with generated assembly","name":"PrintLIRWithAssembly","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"c1","defaultValue":"false","definedIn":"share/c1/c1_globals.hpp","description":"print low-level IR","name":"PrintLIR","prefix":"-XX:","type":"bool"},
{"availability":"notproduct","component":"c2","defaultValue":"false","definedIn":"share/opto/c2_globals.hpp","description":"Print precise statistics on the dynamic lock usage","name":"PrintLockStatistics","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Print malloc/free statistics","name":"PrintMallocStatistics","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Print the results of +ProfileInterpreter at end of run","name":"PrintMethodData","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"print statistics about method flushing","name":"PrintMethodFlushingStatistics","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Print the nmethods being flushed","name":"PrintMethodFlushing","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Print generated stub code for method handles","name":"PrintMethodHandleStubs","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Print uncategorized debugging information (requires +Verbose)","name":"PrintMiscellaneous","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Print native memory tracking summary data if it is on","name":"PrintNMTStatistics","prefix":"-XX:","type":"bool"},
{"availability":"notproduct","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Print a summary statistic for the generated nmethods","name":"PrintNMethodStatistics","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Print assembly code for nmethods when generated","name":"PrintNMethods","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Print assembly code for native nmethods when generated","name":"PrintNativeNMethods","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"c1","defaultValue":"false","definedIn":"share/c1/c1_globals.hpp","description":"Prints where classes are not loaded during code generation","name":"PrintNotLoaded","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"c1","defaultValue":"false","definedIn":"share/c1/c1_globals.hpp","description":"Print null check elimination","name":"PrintNullCheckElimination","prefix":"-XX:","type":"bool"},
{"availability":"notproduct","component":"c2","defaultValue":"false","definedIn":"share/opto/c2_globals.hpp","description":"Print information about optimized pointers compare","name":"PrintOptimizePtrCompare","prefix":"-XX:","type":"bool"},
{"availability":"notproduct","component":"c2","defaultValue":"false","definedIn":"share/opto/c2_globals.hpp","description":"Print information about transformations performed on Strings","name":"PrintOptimizeStringConcat","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"c2","defaultValue":"false","definedIn":"share/opto/c2_globals.hpp","description":"Print New compiler assembly output","name":"PrintOptoAssembly","prefix":"-XX:","type":"bool"},
{"availability":"notproduct","component":"c2","defaultValue":"false","definedIn":"share/opto/c2_globals.hpp","description":"Print compiler2 inlining decisions","name":"PrintOptoInlining","prefix":"-XX:","type":"bool"},
{"availability":"notproduct","component":"c2","defaultValue":"false","definedIn":"share/opto/c2_globals.hpp","description":"Print New compiler peephole replacements","name":"PrintOptoPeephole","prefix":"-XX:","type":"bool"},
{"availability":"notproduct","component":"c2","defaultValue":"false","definedIn":"share/opto/c2_globals.hpp","description":"Print New compiler statistics","name":"PrintOptoStatistics","prefix":"-XX:","type":"bool"},
{"availability":"notproduct","component":"c2","defaultValue":"false","definedIn":"share/opto/c2_globals.hpp","description":"Print compiler2 attempts","name":"PrintOpto","prefix":"-XX:","type":"bool"},
{"availability":"notproduct","component":"c2","defaultValue":"false","definedIn":"share/opto/c2_globals.hpp","description":"Print nodes, transforms and new values made per bytecode parsed","name":"PrintParseStatistics","prefix":"-XX:","type":"bool"},
{"availability":"notproduct","component":"c1","defaultValue":"false","definedIn":"share/c1/c1_globals.hpp","description":"Print phi functions when they are created and simplified","name":"PrintPhiFunctions","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"c2","defaultValue":"false","definedIn":"share/opto/c2_globals.hpp","deprecated":"15","description":"Print per-lock-site statistics of biased locking in JVM","expired":"19","name":"PrintPreciseBiasedLockingStatistics","obsoleted":"18","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"c2","defaultValue":"false","definedIn":"share/opto/c2_globals.hpp","description":"Print per-lock-site statistics of rtm locking in JVM","name":"PrintPreciseRTMLockingStatistics","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Print relocation information for all nmethods when generated","name":"PrintRelocations","prefix":"-XX:","type":"bool"},
{"availability":"notproduct","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Print methods that are being rewritten","name":"PrintRewrites","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"300","definedIn":"share/runtime/globals.hpp","deprecated":"11","description":"(Deprecated) Total number of safepoint statistics collected \nbefore printing them out","expired":"13","name":"PrintSafepointStatisticsCount","obsoleted":"12","prefix":"-XX:","range":"range(1, max_intx)","type":"intx"},
{"availability":"product","component":"runtime","defaultValue":"-1","definedIn":"share/runtime/globals.hpp","deprecated":"11","description":"(Deprecated) Print safepoint statistics only when safepoint takes \nmore than PrintSafepointSatisticsTimeout in millis","expired":"13","name":"PrintSafepointStatisticsTimeout","obsoleted":"12","prefix":"-XX:","type":"intx"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","deprecated":"11","description":"(Deprecated) Print statistics about safepoint synchronization","expired":"13","name":"PrintSafepointStatistics","obsoleted":"12","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Print shared archive file contents","name":"PrintSharedArchiveAndExit","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"If PrintSharedArchiveAndExit is true, also print the shared \ndictionary","name":"PrintSharedDictionary","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Print code generated for native method signature handlers","name":"PrintSignatureHandlers","prefix":"-XX:","type":"bool"},
{"availability":"notproduct","component":"c1","defaultValue":"false","definedIn":"share/c1/c1_globals.hpp","description":"Print SimpleStubs","name":"PrintSimpleStubs","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"print statistics about the StringTable and SymbolTable","name":"PrintStringTableStatistics","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Print generated stub code","name":"PrintStubCode","prefix":"-XX:","type":"bool"},
{"availability":"notproduct","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"print histogram of the symbol table","name":"PrintSymbolTableSizeHistogram","prefix":"-XX:","type":"bool"},
{"availability":"notproduct","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Print the system dictionary at exit","name":"PrintSystemDictionaryAtExit","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Print tiered events notifications","name":"PrintTieredEvents","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Print all methods that have been ever touched in runtime","name":"PrintTouchedMethodsAtExit","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"c1","defaultValue":"false","definedIn":"share/c1/c1_globals.hpp","description":"Print optimization of raw unsafe ops","name":"PrintUnsafeOptimization","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","description":"Print VM messages on console","name":"PrintVMMessages","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Print flags that appeared on the command line","name":"PrintVMOptions","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","deprecated":"15","description":"Print out the waiting time in VM operation queue","expired":"17","name":"PrintVMQWaitTime","obsoleted":"16","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"c1","defaultValue":"false","definedIn":"share/c1/c1_globals.hpp","description":"Print Value Numbering","name":"PrintValueNumbering","prefix":"-XX:","type":"bool"},
{"availability":"notproduct","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"print vtables stats at end of run","name":"PrintVtableStats","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","description":"Print JVM warnings to output stream","name":"PrintWarnings","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"4","definedIn":"share/runtime/globals.hpp","description":"Stride through processors when distributing processes","name":"ProcessDistributionStride","prefix":"-XX:","range":"range(0, max_juint)","type":"uintx"},
{"availability":"diagnostic","component":"c2","defaultValue":"true","definedIn":"share/opto/c2_globals.hpp","description":"do extra type profiling and use it more aggressively","name":"ProfileDynamicTypes","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"aarch64","defaultValue":"false","definedIn":"cpu/aarch64/c1_globals_aarch64.hpp","name":"ProfileInterpreter","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"arm","defaultValue":"true","definedIn":"cpu/arm/c2_globals_arm.hpp","name":"ProfileInterpreter","prefix":"-XX:","type":"bool"},
{"availability":"product_pd","component":"runtime","definedIn":"share/runtime/globals.hpp","description":"Profile at the bytecode level during interpretation","name":"ProfileInterpreter","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"ppc","defaultValue":"false","definedIn":"cpu/ppc/c1_globals_ppc.hpp","name":"ProfileInterpreter","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"s390","defaultValue":"true","definedIn":"cpu/s390/c2_globals_s390.hpp","name":"ProfileInterpreter","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"sparc","defaultValue":"false","definedIn":"cpu/sparc/c1_globals_sparc.hpp","name":"ProfileInterpreter","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"x86","defaultValue":"false","definedIn":"cpu/x86/c1_globals_x86.hpp","name":"ProfileInterpreter","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"100","definedIn":"share/runtime/globals.hpp","deprecated":"","description":"Number of ticks between printing of interval profile \n(+ProfileIntervals)","expired":"14","name":"ProfileIntervalsTicks","obsoleted":"13","prefix":"-XX:","range":"range(0, max_intx)","type":"intx"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","deprecated":"","description":"Print profiles for each interval (see ProfileIntervalsTicks)","expired":"14","name":"ProfileIntervals","obsoleted":"13","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"20","definedIn":"share/runtime/globals.hpp","description":"number of method invocations/branches (expressed as % of \nCompileThreshold) before using the method's profile","name":"ProfileMaturityPercentage","prefix":"-XX:","range":"range(0, 100)","type":"intx"},
{"availability":"define_pd_global","cpu":"aarch64","defaultValue":"false","definedIn":"cpu/aarch64/c1_globals_aarch64.hpp","name":"ProfileTraps","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"arm","defaultValue":"true","definedIn":"cpu/arm/c2_globals_arm.hpp","name":"ProfileTraps","prefix":"-XX:","type":"bool"},
{"availability":"develop_pd","component":"runtime","definedIn":"share/runtime/globals.hpp","description":"Profile deoptimization traps at the bytecode level","name":"ProfileTraps","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"ppc","defaultValue":"false","definedIn":"cpu/ppc/c1_globals_ppc.hpp","name":"ProfileTraps","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"s390","defaultValue":"true","definedIn":"cpu/s390/c2_globals_s390.hpp","name":"ProfileTraps","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"sparc","defaultValue":"false","definedIn":"cpu/sparc/c1_globals_sparc.hpp","name":"ProfileTraps","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"x86","defaultValue":"false","definedIn":"cpu/x86/c1_globals_x86.hpp","name":"ProfileTraps","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","deprecated":"","description":"Profile ticks that fall within VM (either in the VM Thread \nor VM code called through stubs)","expired":"14","name":"ProfileVM","obsoleted":"13","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"aarch64","defaultValue":"14*M","definedIn":"cpu/aarch64/c1_globals_aarch64.hpp","name":"ProfiledCodeHeapSize","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"arm","defaultValue":"14*M","definedIn":"cpu/arm/c1_globals_arm.hpp","name":"ProfiledCodeHeapSize","prefix":"-XX:","type":"size_t"},
{"availability":"product_pd","component":"runtime","definedIn":"share/runtime/globals.hpp","description":"Size of code heap with profiled methods (in bytes)","name":"ProfiledCodeHeapSize","prefix":"-XX:","range":"range(0, max_uintx)","type":"uintx"},
{"availability":"define_pd_global","cpu":"ppc","defaultValue":"14*M","definedIn":"cpu/ppc/c1_globals_ppc.hpp","name":"ProfiledCodeHeapSize","prefix":"-XX:","type":"uintx"},
{"availability":"define_pd_global","cpu":"s390","defaultValue":"22*M","definedIn":"cpu/s390/c2_globals_s390.hpp","name":"ProfiledCodeHeapSize","prefix":"-XX:","type":"uintx"},
{"availability":"define_pd_global","cpu":"sparc","defaultValue":"14*M","definedIn":"cpu/sparc/c1_globals_sparc.hpp","name":"ProfiledCodeHeapSize","prefix":"-XX:","type":"uintx"},
{"availability":"define_pd_global","cpu":"x86","defaultValue":"14*M","definedIn":"cpu/x86/c1_globals_x86.hpp","name":"ProfiledCodeHeapSize","prefix":"-XX:","type":"uintx"},
{"availability":"notproduct","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","deprecated":"","description":"Collect and print information on spacing of profiler ticks","expired":"14","name":"ProfilerCheckIntervals","obsoleted":"13","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"1024","definedIn":"share/runtime/globals.hpp","description":"Size in K to allocate for the Profile Nodes of each thread","name":"ProfilerNodeSize","prefix":"-XX:","range":"range(0, 1024)","type":"intx"},
{"availability":"diagnostic","component":"runtime","defaultValue":"25","definedIn":"share/runtime/globals.hpp","deprecated":"","description":"Number of compiled methods to show in profile","expired":"14","name":"ProfilerNumberOfCompiledMethods","obsoleted":"13","prefix":"-XX:","type":"intx"},
{"availability":"diagnostic","component":"runtime","defaultValue":"25","definedIn":"share/runtime/globals.hpp","deprecated":"","description":"Number of interpreted methods to show in profile","expired":"14","name":"ProfilerNumberOfInterpretedMethods","obsoleted":"13","prefix":"-XX:","type":"intx"},
{"availability":"diagnostic","component":"runtime","defaultValue":"25","definedIn":"share/runtime/globals.hpp","deprecated":"","description":"Number of runtime stub nodes to show in profile","expired":"14","name":"ProfilerNumberOfRuntimeStubNodes","obsoleted":"13","prefix":"-XX:","type":"intx"},
{"availability":"diagnostic","component":"runtime","defaultValue":"25","definedIn":"share/runtime/globals.hpp","deprecated":"","description":"Number of stub methods to show in profile","expired":"14","name":"ProfilerNumberOfStubMethods","obsoleted":"13","prefix":"-XX:","type":"intx"},
{"availability":"develop","component":"runtime","defaultValue":"15","definedIn":"share/runtime/globals.hpp","description":"Number of ticks in a PC buckets to be a hotspot","name":"ProfilerPCTickThreshold","prefix":"-XX:","type":"intx"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","deprecated":"","description":"Print bytecode statistics when dumping profiler output","expired":"14","name":"ProfilerPrintByteCodeStatistics","obsoleted":"13","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","deprecated":"","description":"Collect ticks for each 16 byte interval of compiled code","expired":"14","name":"ProfilerRecordPC","obsoleted":"13","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"gc","defaultValue":"3","definedIn":"share/gc/shared/gc_globals.hpp","description":"How much buffer to keep for promotion failure","name":"PromotedPadding","prefix":"-XX:","range":"range(0, max_juint)","type":"uintx"},
{"availability":"develop","component":"gc","defaultValue":"1000","definedIn":"share/gc/shared/gc_globals.hpp","description":"Number of promotion failures occurring at PLAB \nrefill attempts (ParNew) or promotion attempts \n(other young collectors)","name":"PromotionFailureALotCount","prefix":"-XX:","type":"uintx"},
{"availability":"develop","component":"gc","defaultValue":"5","definedIn":"share/gc/shared/gc_globals.hpp","description":"Total collections between promotion failures a lot","name":"PromotionFailureALotInterval","prefix":"-XX:","type":"uintx"},
{"availability":"notproduct","component":"gc","defaultValue":"false","definedIn":"share/gc/shared/gc_globals.hpp","description":"Use promotion failure handling on every youngest generation \ncollection","name":"PromotionFailureALot","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","description":"Verify protection domain before resolution in system dictionary","name":"ProtectionDomainVerification","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"gc","defaultValue":"0","definedIn":"share/gc/shared/gc_globals.hpp","description":"Number of times an allocation that queues behind a GC \nwill retry before printing a warning","name":"QueuedAllocationWarningCount","prefix":"-XX:","range":"range(0, max_uintx)","type":"uintx"},
{"availability":"experimental","cpu":"ppc","defaultValue":"50","definedIn":"cpu/ppc/globals_ppc.hpp","description":"Lock abort ratio at which to stop use RTM lock eliding","name":"RTMAbortRatio","prefix":"-XX:","range":"range(0, 100) /* natural range */","type":"int"},
{"availability":"experimental","cpu":"x86","defaultValue":"50","definedIn":"cpu/x86/globals_x86.hpp","description":"Lock abort ratio at which to stop use RTM lock eliding","name":"RTMAbortRatio","prefix":"-XX:","range":"range(0, 100) /* natural range */","type":"int"},
{"availability":"experimental","cpu":"ppc","defaultValue":"1000","definedIn":"cpu/ppc/globals_ppc.hpp","description":"Calculate abort ratio after this number of aborts","name":"RTMAbortThreshold","prefix":"-XX:","range":"range(0, max_jint)","type":"int"},
{"availability":"experimental","cpu":"x86","defaultValue":"1000","definedIn":"cpu/x86/globals_x86.hpp","description":"Calculate abort ratio after this number of aborts","name":"RTMAbortThreshold","prefix":"-XX:","range":"range(0, max_jint)","type":"int"},
{"availability":"experimental","cpu":"ppc","defaultValue":"0","definedIn":"cpu/ppc/globals_ppc.hpp","description":"Number of milliseconds to wait before start calculating aborts \nfor RTM locking","name":"RTMLockingCalculationDelay","prefix":"-XX:","type":"intx"},
{"availability":"experimental","cpu":"x86","defaultValue":"0","definedIn":"cpu/x86/globals_x86.hpp","description":"Number of milliseconds to wait before start calculating aborts \nfor RTM locking","name":"RTMLockingCalculationDelay","prefix":"-XX:","type":"intx"},
{"availability":"experimental","cpu":"ppc","defaultValue":"10000","definedIn":"cpu/ppc/globals_ppc.hpp","description":"Lock count at which to do RTM lock eliding without \nabort ratio calculation","name":"RTMLockingThreshold","prefix":"-XX:","range":"range(0, max_jint)","type":"int"},
{"availability":"experimental","cpu":"x86","defaultValue":"10000","definedIn":"cpu/x86/globals_x86.hpp","description":"Lock count at which to do RTM lock eliding without \nabort ratio calculation","name":"RTMLockingThreshold","prefix":"-XX:","range":"range(0, max_jint)","type":"int"},
{"availability":"product","cpu":"ppc","defaultValue":"5","definedIn":"cpu/ppc/globals_ppc.hpp","description":"Number of RTM retries on lock abort or busy","name":"RTMRetryCount","prefix":"-XX:","range":"range(0, max_jint)","type":"int"},
{"availability":"product","cpu":"x86","defaultValue":"5","definedIn":"cpu/x86/globals_x86.hpp","description":"Number of RTM retries on lock abort or busy","name":"RTMRetryCount","prefix":"-XX:","range":"range(0, max_jint)","type":"int"},
{"availability":"experimental","cpu":"ppc","defaultValue":"100","definedIn":"cpu/ppc/globals_ppc.hpp","description":"Spin count for lock to become free before RTM retry","name":"RTMSpinLoopCount","prefix":"-XX:","range":"range(0, 32767) /* immediate operand limit on ppc */","type":"int"},
{"availability":"experimental","cpu":"x86","defaultValue":"100","definedIn":"cpu/x86/globals_x86.hpp","description":"Spin count for lock to become free before RTM retry","name":"RTMSpinLoopCount","prefix":"-XX:","range":"range(0, max_jint)","type":"int"},
{"availability":"experimental","cpu":"ppc","defaultValue":"64","definedIn":"cpu/ppc/globals_ppc.hpp","description":"Increment total RTM attempted lock count once every n times","name":"RTMTotalCountIncrRate","prefix":"-XX:","range":"range(1, 32767) /* immediate operand limit on ppc */","type":"int"},
{"availability":"experimental","cpu":"x86","defaultValue":"64","definedIn":"cpu/x86/globals_x86.hpp","description":"Increment total RTM attempted lock count once every n times","name":"RTMTotalCountIncrRate","prefix":"-XX:","range":"range(1, max_jint)","type":"int"},
{"availability":"product","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","description":"Eliminate range checks","name":"RangeCheckElimination","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"c2","defaultValue":"true","definedIn":"share/opto/c2_globals.hpp","description":"Enable reassociation of expressions with loop invariants.","name":"ReassociateInvariants","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"c2","defaultValue":"true","definedIn":"share/opto/c2_globals.hpp","description":"When bulk-initializing, try to avoid needless zeroing","name":"ReduceBulkZeroing","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"c2","defaultValue":"true","definedIn":"share/opto/c2_globals.hpp","description":"When initializing fields, try to avoid needless zeroing","name":"ReduceFieldZeroing","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"c2","defaultValue":"true","definedIn":"share/opto/c2_globals.hpp","description":"When initializing fields, try to avoid needless card marks","name":"ReduceInitialCardMarks","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","description":"Reduce the number of parallel compiler threads when they \nare not used","name":"ReduceNumberOfCompilerThreads","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Reduce the use of OS signals in Java and/or the VM","name":"ReduceSignalUsage","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"gc","defaultValue":"0","definedIn":"share/gc/shared/gc_globals.hpp","description":"Select type of reference discovery policy: \nreference-based(0) or referent-based(1)","name":"RefDiscoveryPolicy","prefix":"-XX:","range":"range(ReferenceProcessor::DiscoveryPolicyMin,","type":"intx"},
{"availability":"experimental","component":"gc","defaultValue":"1000","definedIn":"share/gc/shared/gc_globals.hpp","description":"Ergonomically start one thread for this amount of \nreferences for reference processing if \nParallelRefProcEnabled is true. Specify 0 to disable and \nuse all threads.","name":"ReferencesPerThread","prefix":"-XX:","type":"size_t"},
{"availability":"define_pd_global","cpu":"aarch64","defaultValue":"16000","definedIn":"cpu/aarch64/c2_globals_aarch64.hpp","name":"RegisterCostAreaRatio","prefix":"-XX:","type":"intx"},
{"availability":"develop_pd","component":"c2","definedIn":"share/opto/c2_globals.hpp","description":"Spill selection in reg allocator: scale area by (X/64K) before \nadding cost","name":"RegisterCostAreaRatio","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"ppc","defaultValue":"16000","definedIn":"cpu/ppc/c2_globals_ppc.hpp","name":"RegisterCostAreaRatio","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"s390","defaultValue":"12000","definedIn":"cpu/s390/c2_globals_s390.hpp","name":"RegisterCostAreaRatio","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"sparc","defaultValue":"12000","definedIn":"cpu/sparc/c2_globals_sparc.hpp","name":"RegisterCostAreaRatio","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"x86","defaultValue":"16000","definedIn":"cpu/x86/c2_globals_x86.hpp","name":"RegisterCostAreaRatio","prefix":"-XX:","type":"intx"},
{"availability":"product","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","description":"Register finalizable objects at end of Object.<init> or \nafter allocation","name":"RegisterFinalizersAtInit","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","description":"Tell whether the VM should register soft/weak/final/phantom \nreferences","name":"RegisterReferences","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Relax the access control checks in the verifier","name":"RelaxAccessControlCheck","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"c2","defaultValue":"true","definedIn":"share/opto/c2_globals.hpp","description":"Renumber live nodes","name":"RenumberLiveNodes","prefix":"-XX:","type":"bool"},
{"availability":"product","cpu":"ppc","defaultValue":"true","definedIn":"cpu/ppc/globals_ppc.hpp","description":"Reoptimize code-sequences of calls at runtime.","name":"ReoptimizeCallSequences","prefix":"-XX:","type":"bool"},
{"availability":"product","cpu":"s390","defaultValue":"true","definedIn":"cpu/s390/globals_s390.hpp","description":"Reoptimize code-sequences of calls at runtime.","name":"ReoptimizeCallSequences","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Enable replay of compilations from ReplayDataFile","name":"ReplayCompiles","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"NULL","definedIn":"share/runtime/globals.hpp","description":"File containing compilation replay information\n[default: ./replay_pid%p.log] (%p replaced with pid)","name":"ReplayDataFile","prefix":"-XX:","type":"ccstr"},
{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Ignore exceptions thrown during initialization for replay","name":"ReplayIgnoreInitErrors","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"2","definedIn":"share/runtime/globals.hpp","description":"Control handling of class initialization during replay: \n\n0 - don't do anything special; \n\n1 - treat all class initializers as empty; \n\n2 - treat class initializers for application classes as empty; \n\n3 - allow all class initializers to run during bootstrap but \n pretend they are empty after starting replay","name":"ReplaySuppressInitializers","prefix":"-XX:","range":"range(0, 3)","type":"intx"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Require shared spaces for metadata","name":"RequireSharedSpaces","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"aarch64","defaultValue":"32*M","definedIn":"cpu/aarch64/c1_globals_aarch64.hpp","name":"ReservedCodeCacheSize","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"arm","defaultValue":"32*M","definedIn":"cpu/arm/c1_globals_arm.hpp","name":"ReservedCodeCacheSize","prefix":"-XX:","type":"size_t"},
{"availability":"product_pd","component":"runtime","definedIn":"share/runtime/globals.hpp","description":"Reserved code cache size (in bytes) - maximum code cache size","name":"ReservedCodeCacheSize","prefix":"-XX:","range":"range(os::vm_page_size(), max_uintx)","type":"uintx"},
{"availability":"define_pd_global","cpu":"ppc","defaultValue":"32*M","definedIn":"cpu/ppc/c1_globals_ppc.hpp","name":"ReservedCodeCacheSize","prefix":"-XX:","type":"uintx"},
{"availability":"define_pd_global","cpu":"s390","defaultValue":"48*M","definedIn":"cpu/s390/c2_globals_s390.hpp","name":"ReservedCodeCacheSize","prefix":"-XX:","type":"uintx"},
{"availability":"define_pd_global","cpu":"sparc","defaultValue":"32*M","definedIn":"cpu/sparc/c1_globals_sparc.hpp","name":"ReservedCodeCacheSize","prefix":"-XX:","type":"uintx"},
{"availability":"define_pd_global","cpu":"x86","defaultValue":"32*M","definedIn":"cpu/x86/c1_globals_x86.hpp","name":"ReservedCodeCacheSize","prefix":"-XX:","type":"uintx"},
{"availability":"product","component":"gc","defaultValue":"true","definedIn":"share/gc/shared/gc_globals.hpp","deprecated":"","description":"Dynamically resize (old gen) promotion LAB's","expired":"15","name":"ResizeOldPLAB","obsoleted":"14","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"gc","defaultValue":"true","definedIn":"share/gc/shared/gc_globals.hpp","description":"Dynamically resize (survivor space) promotion LAB's","name":"ResizePLAB","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"aarch64","defaultValue":"true","definedIn":"cpu/aarch64/c1_globals_aarch64.hpp","name":"ResizeTLAB","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"arm","defaultValue":"true","definedIn":"cpu/arm/c1_globals_arm.hpp","name":"ResizeTLAB","prefix":"-XX:","type":"bool"},
{"availability":"product_pd","component":"gc","definedIn":"share/gc/shared/gc_globals.hpp","description":"Dynamically resize TLAB size for threads","name":"ResizeTLAB","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","name":"ResizeTLAB","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"ppc","defaultValue":"true","definedIn":"cpu/ppc/c1_globals_ppc.hpp","name":"ResizeTLAB","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"s390","defaultValue":"true","definedIn":"cpu/s390/c2_globals_s390.hpp","name":"ResizeTLAB","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"sparc","defaultValue":"true","definedIn":"cpu/sparc/c1_globals_sparc.hpp","name":"ResizeTLAB","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"x86","defaultValue":"true","definedIn":"cpu/x86/c1_globals_x86.hpp","name":"ResizeTLAB","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Restore MXCSR when returning from JNI calls","name":"RestoreMXCSROnJNICalls","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","description":"Restrict @Contended to trusted classes","name":"RestrictContended","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","description":"Restrict @ReservedStackAccess to trusted classes","name":"RestrictReservedStack","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"aarch64","defaultValue":"true","definedIn":"cpu/aarch64/globals_aarch64.hpp","name":"RewriteBytecodes","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"arm","defaultValue":"true","definedIn":"cpu/arm/globals_arm.hpp","name":"RewriteBytecodes","prefix":"-XX:","type":"bool"},
{"availability":"product_pd","component":"runtime","definedIn":"share/runtime/globals.hpp","description":"Allow rewriting of bytecodes (bytecodes are not immutable)","name":"RewriteBytecodes","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"ppc","defaultValue":"true","definedIn":"cpu/ppc/globals_ppc.hpp","name":"RewriteBytecodes","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"s390","defaultValue":"true","definedIn":"cpu/s390/globals_s390.hpp","name":"RewriteBytecodes","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"sparc","defaultValue":"true","definedIn":"cpu/sparc/globals_sparc.hpp","name":"RewriteBytecodes","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"x86","defaultValue":"true","definedIn":"cpu/x86/globals_x86.hpp","name":"RewriteBytecodes","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"zero","defaultValue":"true","definedIn":"cpu/zero/globals_zero.hpp","name":"RewriteBytecodes","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"aarch64","defaultValue":"true","definedIn":"cpu/aarch64/globals_aarch64.hpp","name":"RewriteFrequentPairs","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"arm","defaultValue":"true","definedIn":"cpu/arm/globals_arm.hpp","name":"RewriteFrequentPairs","prefix":"-XX:","type":"bool"},
{"availability":"product_pd","component":"runtime","definedIn":"share/runtime/globals.hpp","description":"Rewrite frequently used bytecode pairs into a single bytecode","name":"RewriteFrequentPairs","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"ppc","defaultValue":"true","definedIn":"cpu/ppc/globals_ppc.hpp","name":"RewriteFrequentPairs","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"s390","defaultValue":"true","definedIn":"cpu/s390/globals_s390.hpp","name":"RewriteFrequentPairs","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"sparc","defaultValue":"true","definedIn":"cpu/sparc/globals_sparc.hpp","name":"RewriteFrequentPairs","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"x86","defaultValue":"true","definedIn":"cpu/x86/globals_x86.hpp","name":"RewriteFrequentPairs","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"zero","defaultValue":"true","definedIn":"cpu/zero/globals_zero.hpp","name":"RewriteFrequentPairs","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"aarch64","defaultValue":"true","definedIn":"cpu/aarch64/c1_globals_aarch64.hpp","name":"RoundFPResults","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"arm","defaultValue":"false","definedIn":"cpu/arm/c1_globals_arm.hpp","name":"RoundFPResults","prefix":"-XX:","type":"bool"},
{"availability":"develop_pd","component":"c1","definedIn":"share/c1/c1_globals.hpp","description":"Indicates whether rounding is needed for floating point results","name":"RoundFPResults","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"ppc","defaultValue":"false","definedIn":"cpu/ppc/c1_globals_ppc.hpp","name":"RoundFPResults","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"s390","defaultValue":"false","definedIn":"cpu/s390/c1_globals_s390.hpp","name":"RoundFPResults","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"sparc","defaultValue":"false","definedIn":"cpu/sparc/c1_globals_sparc.hpp","name":"RoundFPResults","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"x86","defaultValue":"true","definedIn":"cpu/x86/c1_globals_x86.hpp","name":"RoundFPResults","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Generate a lot of safepoints. This works with \nGuaranteedSafepointInterval","name":"SafepointALot","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"10000","definedIn":"share/runtime/globals.hpp","description":"Delay in milliseconds for option SafepointTimeout","name":"SafepointTimeoutDelay","prefix":"-XX:","type":"intx"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Time out and warn or fail after SafepointTimeoutDelay \nmilliseconds if failed to reach safepoint","name":"SafepointTimeout","prefix":"-XX:","type":"bool"},
{"availability":"notproduct","component":"gc","defaultValue":"1","definedIn":"share/gc/shared/gc_globals.hpp","description":"Interval between which scavenge will occur with +ScavengeALot","name":"ScavengeALotInterval","prefix":"-XX:","type":"intx"},
{"availability":"notproduct","component":"gc","defaultValue":"false","definedIn":"share/gc/shared/gc_globals.hpp","description":"Force scavenge at every Nth exit from the runtime system \n(N=ScavengeALotInterval)","name":"ScavengeALot","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"gc","defaultValue":"true","definedIn":"share/gc/shared/gc_globals.hpp","description":"Scavenge youngest generation before each full GC.","name":"ScavengeBeforeFullGC","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"runtime","defaultValue":"2","definedIn":"share/runtime/globals.hpp","description":"0: do not allow scavengable oops in the code cache; \n\n1: allow scavenging from the code cache; \n\n2: emit as many constants as the compiler can see","name":"ScavengeRootsInCode","prefix":"-XX:","range":"range(0, 2)","type":"intx"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Use a segmented code cache","name":"SegmentedCodeCache","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"c1","defaultValue":"true","definedIn":"share/c1/c1_globals.hpp","description":"create phi functions at loop headers only when necessary","name":"SelectivePhiFunctions","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"0","definedIn":"share/runtime/globals.hpp","description":"Will cause VM to terminate after a given time (in minutes) \n(0 means off)","name":"SelfDestructTimer","prefix":"-XX:","range":"range(0, max_intx)","type":"intx"},
{"availability":"diagnostic","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","description":"Use a mutex to serialize output to tty and LogFile","name":"SerializeVMOutput","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"NULL","definedIn":"share/runtime/globals.hpp","description":"Data to add to the CDS archive file","name":"SharedArchiveConfigFile","prefix":"-XX:","type":"ccstr"},
{"availability":"product","component":"runtime","defaultValue":"NULL","definedIn":"share/runtime/globals.hpp","description":"Override the default location of the CDS archive file","name":"SharedArchiveFile","prefix":"-XX:","type":"ccstr"},
{"availability":"product","component":"runtime","defaultValue":"LP64_ONLY(32*G)NOT_LP64(LINUX_ONLY(2*G) NOT_LINUX(0))","definedIn":"share/runtime/globals.hpp","description":"Address to allocate shared memory region for class data","name":"SharedBaseAddress","prefix":"-XX:","range":"range(0, SIZE_MAX)","type":"size_t"},
{"availability":"product","component":"runtime","defaultValue":"NULL","definedIn":"share/runtime/globals.hpp","description":"Override the default CDS class list","name":"SharedClassListFile","prefix":"-XX:","type":"ccstr"},
{"availability":"product","component":"runtime","defaultValue":"4","definedIn":"share/runtime/globals.hpp","description":"Average number of symbols per bucket in shared table","name":"SharedSymbolTableBucketSize","prefix":"-XX:","range":"range(2, 246)","type":"uintx"},
{"availability":"diagnostic","component":"gc","defaultValue":"false","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"Testing: make lots of artificial allocation failures.","name":"ShenandoahAllocFailureALot","prefix":"-XX:","type":"bool"},
{"availability":"experimental","component":"gc","defaultValue":"5","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"How much of heap should some heuristics reserve for absorbing \nthe allocation spikes. Larger value wastes more memory in \nnon-emergency cases, but provides more safety in emergency \ncases. In percents of (soft) max heap size.","name":"ShenandoahAllocSpikeFactor","prefix":"-XX:","range":"range(0,100)","type":"uintx"},
{"availability":"experimental","component":"gc","defaultValue":"0","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"How many new allocations should happen since the last GC cycle \nbefore some heuristics trigger the collection. In percents of \n(soft) max heap size. Set to zero to effectively disable.","name":"ShenandoahAllocationThreshold","prefix":"-XX:","range":"range(0,100)","type":"uintx"},
{"availability":"experimental","component":"gc","defaultValue":"false","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"Unconditionally clear soft references, instead of using any \nother cleanup policy. This minimizes footprint at expense of\nmore soft reference churn in applications.","name":"ShenandoahAlwaysClearSoftRefs","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"gc","defaultValue":"true","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"Turn on/off CAS barriers in Shenandoah","name":"ShenandoahCASBarrier","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"gc","defaultValue":"true","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"Turn on/off clone barriers in Shenandoah","name":"ShenandoahCloneBarrier","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"gc","defaultValue":"2","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"Use this style to scan the code cache roots:\n 0 - sequential iterator;\n 1 - parallel iterator;\n 2 - parallel iterator with cset filters;","name":"ShenandoahCodeRootsStyle","prefix":"-XX:","type":"uintx"},
{"availability":"experimental","component":"gc","defaultValue":"1000","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"The time period for one step in control loop interval \nadjustment. Lower values make adjustments faster, at the \nexpense of higher perf overhead. Time is in milliseconds.","name":"ShenandoahControlIntervalAdjustPeriod","prefix":"-XX:","type":"uintx"},
{"availability":"experimental","component":"gc","defaultValue":"10","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"The maximum sleep interval for control loop that drives \nthe cycles. Lower values would increase GC responsiveness \nto changing heap conditions, at the expense of higher perf \noverhead. Time is in milliseconds.","name":"ShenandoahControlIntervalMax","prefix":"-XX:","type":"uintx"},
{"availability":"experimental","component":"gc","defaultValue":"1","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"The minimum sleep interval for the control loop that drives \nthe cycles. Lower values would increase GC responsiveness \nto changing heap conditions, at the expense of higher perf \noverhead. Time is in milliseconds.","name":"ShenandoahControlIntervalMin","prefix":"-XX:","type":"uintx"},
{"availability":"experimental","component":"gc","defaultValue":"1","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"How much of the heap needs to be free after recovery cycles, \neither Degenerated or Full GC to be claimed successful. If this \nmuch space is not available, next recovery step would be \ntriggered.","name":"ShenandoahCriticalFreeThreshold","prefix":"-XX:","range":"range(0, 100)","type":"uintx"},
{"availability":"diagnostic","component":"gc","defaultValue":"true","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"Enable Degenerated GC as the graceful degradation step. \nDisabling this option leads to degradation to Full GC instead. \nWhen running in passive mode, this can be toggled to measure \neither Degenerated GC or Full GC costs.","name":"ShenandoahDegeneratedGC","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"gc","defaultValue":"true","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"Use Elastic TLABs with Shenandoah","name":"ShenandoahElasticTLAB","prefix":"-XX:","type":"bool"},
{"availability":"experimental","component":"gc","defaultValue":"true","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"Allow evacuations to overflow the reserved space. Enabling it \nwill make evacuations more resilient when evacuation \nreserve/waste is incorrect, at the risk that application \nruns out of memory too early.","name":"ShenandoahEvacReserveOverflow","prefix":"-XX:","type":"bool"},
{"availability":"experimental","component":"gc","defaultValue":"5","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"How much of heap to reserve for evacuations. Larger values make \nGC evacuate more live objects on every cycle, while leaving \nless headroom for application to allocate in. In percents of \ntotal heap size.","name":"ShenandoahEvacReserve","prefix":"-XX:","range":"range(1,100)","type":"uintx"},
{"availability":"experimental","component":"gc","defaultValue":"1.2","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"How much waste evacuations produce within the reserved space. \nLarger values make evacuations more resilient against \nevacuation conflicts, at expense of evacuating less on each \nGC cycle.","name":"ShenandoahEvacWaste","prefix":"-XX:","range":"range(1.0,100.0)","type":"double"},
{"availability":"experimental","component":"gc","defaultValue":"3","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"How many back-to-back Degenerated GCs should happen before \ngoing to a Full GC.","name":"ShenandoahFullGCThreshold","prefix":"-XX:","type":"uintx"},
{"availability":"product","component":"gc","defaultValue":"adaptive","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"GC heuristics to use. This fine-tunes the GC mode selected, \nby choosing when to start the GC, how much to process on each \ncycle, and what other features to automatically enable. \nPossible values are:\n adaptive - adapt to maintain the given amount of free heap \nat all times, even during the GC cycle;\n static - trigger GC when free heap falls below the threshold;\n aggressive - run GC continuously, try to evacuate everything;\n compact - run GC more frequently and with deeper targets to \nfree up more memory.","name":"ShenandoahGCHeuristics","prefix":"-XX:","type":"ccstr"},
{"availability":"product","component":"gc","defaultValue":"satb","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"GC mode to use. Among other things, this defines which \nbarriers are in in use. Possible values are:\n satb - snapshot-at-the-beginning concurrent GC (three pass mark-evac-update);\n iu - incremental-update concurrent GC (three pass mark-evac-update);\n passive - stop the world GC only (either degenerated or full)","name":"ShenandoahGCMode","prefix":"-XX:","type":"ccstr"},
{"availability":"experimental","component":"gc","defaultValue":"25","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"How much garbage a region has to contain before it would be \ntaken for collection. This a guideline only, as GC heuristics \nmay select the region for collection even if it has little \ngarbage. This also affects how much internal fragmentation the \ncollector accepts. In percents of heap region size.","name":"ShenandoahGarbageThreshold","prefix":"-XX:","range":"range(0,100)","type":"uintx"},
{"availability":"experimental","component":"gc","defaultValue":"5*60*1000","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"Many heuristics would guarantee a concurrent GC cycle at \nleast with this interval. This is useful when large idle \nintervals are present, where GC can run without stealing \ntime from active application. Time is in milliseconds. \nSetting this to 0 disables the feature.","name":"ShenandoahGuaranteedGCInterval","prefix":"-XX:","type":"uintx"},
{"availability":"diagnostic","component":"gc","defaultValue":"true","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"Allow moving humongous regions. This makes GC more resistant \nto external fragmentation that may otherwise fail other \nhumongous allocations, at the expense of higher GC copying \ncosts. Currently affects stop-the-world (Full) cycle only.","name":"ShenandoahHumongousMoves","prefix":"-XX:","type":"bool"},
{"availability":"experimental","component":"gc","defaultValue":"100","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"Humongous objects are allocated in separate regions. \nThis setting defines how large the object should be to be \ndeemed humongous. Value is in percents of heap region size. \nThis also caps the maximum TLAB size.","name":"ShenandoahHumongousThreshold","prefix":"-XX:","range":"range(1, 100)","type":"intx"},
{"availability":"experimental","component":"gc","defaultValue":"90","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"The cycle may shortcut when enough garbage can be reclaimed \nfrom the immediate garbage (completely garbage regions). \nIn percents of total garbage found. Setting this threshold \nto 100 effectively disables the shortcut.","name":"ShenandoahImmediateThreshold","prefix":"-XX:","range":"range(0,100)","type":"uintx"},
{"availability":"experimental","component":"gc","defaultValue":"false","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"Should internally-caused GC requests invoke concurrent cycles, \nshould they do the stop-the-world (Degenerated / Full GC)? \nMany heuristics automatically enable this. This option is \nsimilar to global ExplicitGCInvokesConcurrent.","name":"ShenandoahImplicitGCInvokesConcurrent","prefix":"-XX:","type":"bool"},
{"availability":"experimental","component":"gc","defaultValue":"70","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"How much heap should be free before some heuristics trigger the \ninitial (learning) cycles. Affects cycle frequency on startup \nand after drastic state changes, e.g. after degenerated/full \nGC cycles. In percents of (soft) max heap size.","name":"ShenandoahInitFreeThreshold","prefix":"-XX:","range":"range(0,100)","type":"uintx"},
{"availability":"experimental","component":"gc","defaultValue":"5","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"The number of cycles some heuristics take to collect in order \nto learn application and GC performance.","name":"ShenandoahLearningSteps","prefix":"-XX:","range":"range(0,100)","type":"uintx"},
{"availability":"diagnostic","component":"gc","defaultValue":"true","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"Turn on/off load-reference barriers in Shenandoah","name":"ShenandoahLoadRefBarrier","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"gc","defaultValue":"true","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"Attempt more loop opts after barrier expansion.","name":"ShenandoahLoopOptsAfterExpansion","prefix":"-XX:","type":"bool"},
{"availability":"experimental","component":"gc","defaultValue":"1000","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"How many items to process during one marking iteration before \nchecking for cancellation, yielding, etc. Larger values improve \nmarking performance at expense of responsiveness.","name":"ShenandoahMarkLoopStride","prefix":"-XX:","type":"uintx"},
{"availability":"experimental","component":"gc","defaultValue":"32","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"How many objects to prefetch ahead when traversing mark bitmaps.\nSet to 0 to disable prefetching.","name":"ShenandoahMarkScanPrefetch","prefix":"-XX:","range":"range(0, 256)","type":"intx"},
{"availability":"experimental","component":"gc","defaultValue":"32 * M","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"With automatic region sizing, the regions would be at most \nthis large.","name":"ShenandoahMaxRegionSize","prefix":"-XX:","type":"size_t"},
{"availability":"experimental","component":"gc","defaultValue":"10","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"How much heap should be free before most heuristics trigger the \ncollection, even without other triggers. Provides the safety \nmargin for many heuristics. In percents of (soft) max heap size.","name":"ShenandoahMinFreeThreshold","prefix":"-XX:","range":"range(0,100)","type":"uintx"},
{"availability":"experimental","component":"gc","defaultValue":"256 * K","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"With automatic region sizing, the regions would be at least \nthis large.","name":"ShenandoahMinRegionSize","prefix":"-XX:","type":"size_t"},
{"availability":"diagnostic","component":"gc","defaultValue":"false","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"Testing: simulate OOM during evacuation.","name":"ShenandoahOOMDuringEvacALot","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"gc","defaultValue":"true","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"Optimize barriers on static final fields. \nTurn it off for maximum compatibility with reflection or JNI \ncode that manipulates final fields.","name":"ShenandoahOptimizeStaticFinals","prefix":"-XX:","type":"bool"},
{"availability":"experimental","component":"gc","defaultValue":"10","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"How much of free space to take as non-taxable allocations \nthe GC cycle. Larger value makes the pacing milder at the \nbeginning of the GC cycle. Lower value makes the pacing less \nuniform during the cycle. In percent of free space.","name":"ShenandoahPacingCycleSlack","prefix":"-XX:","range":"range(0, 100)","type":"uintx"},
{"availability":"experimental","component":"gc","defaultValue":"2","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"How much of heap counted as non-taxable allocations during idle \nphases. Larger value makes the pacing milder when collector is \nidle, requiring less rendezvous with control thread. Lower \nvalue makes the pacing control less responsive to out-of-cycle \nallocs. In percent of total heap size.","name":"ShenandoahPacingIdleSlack","prefix":"-XX:","range":"range(0, 100)","type":"uintx"},
{"availability":"experimental","component":"gc","defaultValue":"10","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"Max delay for pacing application allocations. Larger values \nprovide more resilience against out of memory, at expense at \nhiding the GC latencies in the allocation path. Time is in \nmilliseconds. Setting it to arbitrarily large value makes \nGC effectively stall the threads indefinitely instead of going \nto degenerated or Full GC.","name":"ShenandoahPacingMaxDelay","prefix":"-XX:","type":"uintx"},
{"availability":"experimental","component":"gc","defaultValue":"1.1","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"Additional pacing tax surcharge to help unclutter the heap. \nLarger values makes the pacing more aggressive. Lower values \nrisk GC cycles finish with less memory than were available at \nthe beginning of it.","name":"ShenandoahPacingSurcharge","prefix":"-XX:","range":"range(1.0, 100.0)","type":"double"},
{"availability":"experimental","component":"gc","defaultValue":"true","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"Pace application allocations to give GC chance to start \nand complete before allocation failure is reached.","name":"ShenandoahPacing","prefix":"-XX:","type":"bool"},
{"availability":"experimental","component":"gc","defaultValue":"1024","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"How many regions to process at once during parallel region \niteration. Affects heaps with lots of regions.","name":"ShenandoahParallelRegionStride","prefix":"-XX:","type":"uintx"},
{"availability":"diagnostic","component":"gc","defaultValue":"true","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"Do concurrent preclean phase before final mark: process \ndefinitely alive references to avoid dealing with them during \npause.","name":"ShenandoahPreclean","prefix":"-XX:","type":"bool"},
{"availability":"experimental","component":"gc","defaultValue":"5","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"Process process weak (soft, phantom, finalizers) references \nevery Nth cycle. Normally affects concurrent GC cycles only, \nas degenerated and full GCs would try to process references \nregardless. Set to zero to disable reference processing \ncompletely.","name":"ShenandoahRefProcFrequency","prefix":"-XX:","type":"uintx"},
{"availability":"experimental","component":"gc","defaultValue":"40","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"Sampling rate for heap region sampling. In milliseconds between \nthe samples. Higher values provide more fidelity, at expense \nof more sampling overhead.","name":"ShenandoahRegionSamplingRate","prefix":"-XX:","type":"int"},
{"availability":"experimental","component":"gc","defaultValue":"false","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"Provide heap region sampling data via jvmstat.","name":"ShenandoahRegionSampling","prefix":"-XX:","type":"bool"},
{"availability":"experimental","component":"gc","defaultValue":"0","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"Static heap region size. Set zero to enable automatic sizing.","name":"ShenandoahRegionSize","prefix":"-XX:","type":"size_t"},
{"availability":"diagnostic","component":"gc","defaultValue":"true","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"Turn on/off SATB barriers in Shenandoah","name":"ShenandoahSATBBarrier","prefix":"-XX:","type":"bool"},
{"availability":"experimental","component":"gc","defaultValue":"100","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"Forcefully flush non-empty SATB buffers at this interval. \nTime is in milliseconds.","name":"ShenandoahSATBBufferFlushInterval","prefix":"-XX:","type":"uintx"},
{"availability":"experimental","component":"gc","defaultValue":"1 * K","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"Number of entries in an SATB log buffer.","name":"ShenandoahSATBBufferSize","prefix":"-XX:","range":"range(1, max_uintx)","type":"size_t"},
{"availability":"diagnostic","component":"gc","defaultValue":"true","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"Fix references with load reference barrier. Disabling this \nmight degrade performance.","name":"ShenandoahSelfFixing","prefix":"-XX:","type":"bool"},
{"availability":"manageable","component":"gc","defaultValue":"0","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"Soft limit for maximum heap size (in bytes)","name":"ShenandoahSoftMaxHeapSize","prefix":"-XX:","type":"size_t"},
{"availability":"diagnostic","component":"gc","defaultValue":"false","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"Turn on/off enqueuing of oops for storeval barriers","name":"ShenandoahStoreValEnqueueBarrier","prefix":"-XX:","type":"bool"},
{"availability":"experimental","component":"gc","defaultValue":"false","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"Suspend concurrent GC worker threads at safepoints","name":"ShenandoahSuspendibleWorkers","prefix":"-XX:","type":"bool"},
{"availability":"experimental","component":"gc","defaultValue":"2048","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"With automatic region sizing, this is the approximate number \nof regions that would be used, within min/max region size \nlimits.","name":"ShenandoahTargetNumRegions","prefix":"-XX:","type":"size_t"},
{"availability":"experimental","component":"gc","defaultValue":"5*60*1000","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"Uncommit memory for regions that were not used for more than \nthis time. First use after that would incur allocation stalls. \nActively used regions would never be uncommitted, because they \ndo not become unused longer than this delay. Time is in \nmilliseconds. Setting this delay to 0 effectively uncommits \nregions almost immediately after they become unused.","name":"ShenandoahUncommitDelay","prefix":"-XX:","type":"uintx"},
{"availability":"experimental","component":"gc","defaultValue":"true","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"Allow to uncommit memory under unused regions and metadata. \nThis optimizes footprint at expense of allocation latency in \nregions that require committing back. Uncommits would be \ndisabled by some heuristics, or with static heap size.","name":"ShenandoahUncommit","prefix":"-XX:","type":"bool"},
{"availability":"experimental","component":"gc","defaultValue":"100","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"Unload the classes every Nth cycle. Normally affects concurrent \nGC cycles, as degenerated and full GCs would try to unload \nclasses regardless. Set to zero to disable class unloading.","name":"ShenandoahUnloadClassesFrequency","prefix":"-XX:","type":"uintx"},
{"availability":"diagnostic","component":"gc","defaultValue":"4","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"Verification level, higher levels check more, taking more time. \nAccepted values are:\n 0 = basic heap checks; \n 1 = previous level, plus basic region checks; \n 2 = previous level, plus all roots; \n 3 = previous level, plus all reachable objects; \n 4 = previous level, plus all marked objects","name":"ShenandoahVerifyLevel","prefix":"-XX:","type":"intx"},
{"availability":"develop","component":"gc","defaultValue":"false","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"Verify no missing barriers in C2.","name":"ShenandoahVerifyOptoBarriers","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"gc","defaultValue":"false","definedIn":"share/gc/shenandoah/shenandoah_globals.hpp","description":"Enable internal verification. This would catch many GC bugs, \nbut it would also stall the collector during the verification, \nwhich prolongs the pauses and might hide other bugs.","name":"ShenandoahVerify","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"show method handle implementation frames (usually hidden)","name":"ShowHiddenFrames","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Keep process alive on VM fatal error","name":"ShowMessageBoxOnError","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"On internal errors, include registers in error report.","name":"ShowRegistersOnAssert","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","description":"When disabled, informs the GC to shrink the java heap directly\n to the target size at the next full GC rather than requiring\n smaller steps during multiple full GCs.","name":"ShrinkHeapInSteps","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"c2","defaultValue":"trueInProduct","definedIn":"share/opto/c2_globals.hpp","description":"If the DFA fails to match a node, print a message and bail out","name":"SoftMatchFailure","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"1000","definedIn":"share/runtime/globals.hpp","description":"Number of milliseconds per MB of free space in the heap","name":"SoftRefLRUPolicyMSPerMB","prefix":"-XX:","range":"range(0, max_intx)","type":"intx"},
{"availability":"product","cpu":"aarch64","defaultValue":"-1","definedIn":"cpu/aarch64/globals_aarch64.hpp","description":"Use prfm hint with specified distance in compiled code.\nValue -1 means off.","name":"SoftwarePrefetchHintDistance","prefix":"-XX:","range":"range(-1, 4096)","type":"int"},
{"availability":"develop","component":"c2","defaultValue":"true","definedIn":"share/opto/c2_globals.hpp","description":"Assume Sparc V9 I&L registers on V8+ systems are zero-extended","name":"SparcV9RegsHiBitsZero","prefix":"-XX:","type":"bool"},
{"availability":"experimental","component":"runtime","defaultValue":"3","definedIn":"share/runtime/globals.hpp","description":"Extra method data trap entries for speculation","name":"SpecTrapLimitExtraEntries","prefix":"-XX:","type":"intx"},
{"availability":"diagnostic","component":"c2","defaultValue":"true","definedIn":"share/opto/c2_globals.hpp","description":"special version of Arrays.equals(char[],char[])","name":"SpecialArraysEquals","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"c2","defaultValue":"true","definedIn":"share/opto/c2_globals.hpp","description":"special version of ISO_8859_1$Encoder.encodeISOArray","name":"SpecialEncodeISOArray","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"c2","defaultValue":"true","definedIn":"share/opto/c2_globals.hpp","description":"special version of string compareTo","name":"SpecialStringCompareTo","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"c2","defaultValue":"true","definedIn":"share/opto/c2_globals.hpp","description":"special version of string equals","name":"SpecialStringEquals","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"c2","defaultValue":"true","definedIn":"share/opto/c2_globals.hpp","description":"special version of string indexOf","name":"SpecialStringIndexOf","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"c2","defaultValue":"true","definedIn":"share/opto/c2_globals.hpp","description":"Clone compares and control flow through merge points to fold \nsome branches","name":"SplitIfBlocks","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"100","definedIn":"share/runtime/globals.hpp","description":"number of stack frames to print in VM-level stack dump","name":"StackPrintLimit","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"aarch64","defaultValue":"DEFAULT_STACK_RED_PAGES","definedIn":"cpu/aarch64/globals_aarch64.hpp","name":"StackRedPages","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"arm","defaultValue":"DEFAULT_STACK_RED_PAGES","definedIn":"cpu/arm/globals_arm.hpp","name":"StackRedPages","prefix":"-XX:","type":"intx"},
{"availability":"product_pd","component":"runtime","definedIn":"share/runtime/globals.hpp","description":"Number of red zone (unrecoverable overflows) pages of size \n\n4KB. If pages are bigger red zone is aligned up.","name":"StackRedPages","prefix":"-XX:","range":"range(MIN_STACK_RED_PAGES, (DEFAULT_STACK_RED_PAGES+2))","type":"intx"},
{"availability":"define_pd_global","cpu":"ppc","defaultValue":"DEFAULT_STACK_RED_PAGES","definedIn":"cpu/ppc/globals_ppc.hpp","name":"StackRedPages","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"s390","defaultValue":"DEFAULT_STACK_RED_PAGES","definedIn":"cpu/s390/globals_s390.hpp","name":"StackRedPages","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"sparc","defaultValue":"DEFAULT_STACK_RED_PAGES","definedIn":"cpu/sparc/globals_sparc.hpp","name":"StackRedPages","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"x86","defaultValue":"DEFAULT_STACK_RED_PAGES","definedIn":"cpu/x86/globals_x86.hpp","name":"StackRedPages","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"zero","defaultValue":"DEFAULT_STACK_RED_PAGES","definedIn":"cpu/zero/globals_zero.hpp","name":"StackRedPages","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"aarch64","defaultValue":"DEFAULT_STACK_RESERVED_PAGES","definedIn":"cpu/aarch64/globals_aarch64.hpp","name":"StackReservedPages","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"arm","defaultValue":"DEFAULT_STACK_RESERVED_PAGES","definedIn":"cpu/arm/globals_arm.hpp","name":"StackReservedPages","prefix":"-XX:","type":"intx"},
{"availability":"product_pd","component":"runtime","definedIn":"share/runtime/globals.hpp","description":"Number of reserved zone (reserved to annotated methods) pages\n of size 4KB. If pages are bigger reserved zone is aligned up.","name":"StackReservedPages","prefix":"-XX:","range":"range(MIN_STACK_RESERVED_PAGES, (DEFAULT_STACK_RESERVED_PAGES+10))","type":"intx"},
{"availability":"define_pd_global","cpu":"ppc","defaultValue":"DEFAULT_STACK_RESERVED_PAGES","definedIn":"cpu/ppc/globals_ppc.hpp","name":"StackReservedPages","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"s390","defaultValue":"DEFAULT_STACK_RESERVED_PAGES","definedIn":"cpu/s390/globals_s390.hpp","name":"StackReservedPages","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"sparc","defaultValue":"DEFAULT_STACK_RESERVED_PAGES","definedIn":"cpu/sparc/globals_sparc.hpp","name":"StackReservedPages","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"x86","defaultValue":"DEFAULT_STACK_RESERVED_PAGES","definedIn":"cpu/x86/globals_x86.hpp","name":"StackReservedPages","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"zero","defaultValue":"DEFAULT_STACK_RESERVED_PAGES","definedIn":"cpu/zero/globals_zero.hpp","name":"StackReservedPages","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"aarch64","defaultValue":"DEFAULT_STACK_SHADOW_PAGES","definedIn":"cpu/aarch64/globals_aarch64.hpp","name":"StackShadowPages","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"arm","defaultValue":"DEFAULT_STACK_SHADOW_PAGES","definedIn":"cpu/arm/globals_arm.hpp","name":"StackShadowPages","prefix":"-XX:","type":"intx"},
{"availability":"product_pd","component":"runtime","definedIn":"share/runtime/globals.hpp","description":"Number of shadow zone (for overflow checking) pages of size \n\n4KB. If pages are bigger shadow zone is aligned up. \nThis should exceed the depth of the VM and native call stack.","name":"StackShadowPages","prefix":"-XX:","range":"range(MIN_STACK_SHADOW_PAGES, (DEFAULT_STACK_SHADOW_PAGES+30))","type":"intx"},
{"availability":"define_pd_global","cpu":"ppc","defaultValue":"DEFAULT_STACK_SHADOW_PAGES","definedIn":"cpu/ppc/globals_ppc.hpp","name":"StackShadowPages","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"s390","defaultValue":"DEFAULT_STACK_SHADOW_PAGES","definedIn":"cpu/s390/globals_s390.hpp","name":"StackShadowPages","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"sparc","defaultValue":"DEFAULT_STACK_SHADOW_PAGES","definedIn":"cpu/sparc/globals_sparc.hpp","name":"StackShadowPages","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"x86","defaultValue":"DEFAULT_STACK_SHADOW_PAGES","definedIn":"cpu/x86/globals_x86.hpp","name":"StackShadowPages","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"zero","defaultValue":"DEFAULT_STACK_SHADOW_PAGES","definedIn":"cpu/zero/globals_zero.hpp","name":"StackShadowPages","prefix":"-XX:","type":"intx"},
{"availability":"product","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","description":"Collect backtrace in throwable when exception happens","name":"StackTraceInThrowable","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"aarch64","defaultValue":"DEFAULT_STACK_YELLOW_PAGES","definedIn":"cpu/aarch64/globals_aarch64.hpp","name":"StackYellowPages","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"arm","defaultValue":"DEFAULT_STACK_YELLOW_PAGES","definedIn":"cpu/arm/globals_arm.hpp","name":"StackYellowPages","prefix":"-XX:","type":"intx"},
{"availability":"product_pd","component":"runtime","definedIn":"share/runtime/globals.hpp","description":"Number of yellow zone (recoverable overflows) pages of size \n\n4KB. If pages are bigger yellow zone is aligned up.","name":"StackYellowPages","prefix":"-XX:","range":"range(MIN_STACK_YELLOW_PAGES, (DEFAULT_STACK_YELLOW_PAGES+5))","type":"intx"},
{"availability":"define_pd_global","cpu":"ppc","defaultValue":"DEFAULT_STACK_YELLOW_PAGES","definedIn":"cpu/ppc/globals_ppc.hpp","name":"StackYellowPages","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"s390","defaultValue":"DEFAULT_STACK_YELLOW_PAGES","definedIn":"cpu/s390/globals_s390.hpp","name":"StackYellowPages","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"sparc","defaultValue":"DEFAULT_STACK_YELLOW_PAGES","definedIn":"cpu/sparc/globals_sparc.hpp","name":"StackYellowPages","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"x86","defaultValue":"DEFAULT_STACK_YELLOW_PAGES","definedIn":"cpu/x86/globals_x86.hpp","name":"StackYellowPages","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"zero","defaultValue":"DEFAULT_STACK_YELLOW_PAGES","definedIn":"cpu/zero/globals_zero.hpp","name":"StackYellowPages","prefix":"-XX:","type":"intx"},
{"availability":"product","component":"runtime","defaultValue":"10","definedIn":"share/runtime/globals.hpp","description":"Start aggressive sweeping if X[%] of the code cache is free.\nSegmented code cache: X[%] of the non-profiled heap.\nNon-segmented code cache: X[%] of the total code cache","name":"StartAggressiveSweepingAt","prefix":"-XX:","range":"range(0, 100)","type":"uintx"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Always start Attach Listener at VM startup","name":"StartAttachListener","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"NULL","definedIn":"share/runtime/globals.hpp","description":"Start flight recording with options","name":"StartFlightRecording","prefix":"-XX:","type":"ccstr"},
{"availability":"develop","component":"runtime","defaultValue":"0","definedIn":"share/runtime/globals.hpp","description":"Stop interpreter execution at specified bytecode number","name":"StopInterpreterAt","prefix":"-XX:","type":"intx"},
{"availability":"develop","component":"c2","defaultValue":"false","definedIn":"share/opto/c2_globals.hpp","description":"Perform ArrayCopy load/store replacement during IGVN only","name":"StressArrayCopyMacroNode","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Start with counters compiled in","name":"StressCodeAging","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Exercise code buffer expansion and other rare state changes","name":"StressCodeBuffers","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Exercise compiled exception handlers","name":"StressCompiledExceptionHandlers","prefix":"-XX:","type":"bool"},
{"availability":"notproduct","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Exercise register saving code in critical natives","name":"StressCriticalJNINatives","prefix":"-XX:","type":"bool"},
{"availability":"notproduct","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Force scavenge when a derived pointer is detected on stack \nafter rtm call","name":"StressDerivedPointers","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"c2","defaultValue":"false","definedIn":"share/opto/c2_globals.hpp","description":"Randomize instruction scheduling in GCM","name":"StressGCM","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"c2","defaultValue":"false","definedIn":"share/opto/c2_globals.hpp","description":"Randomize instruction scheduling in LCM","name":"StressLCM","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Force ldc -> ldc_w rewrite during RedefineClasses","name":"StressLdcRewrite","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"c1","defaultValue":"false","definedIn":"share/c1/c1_globals.hpp","description":"scramble block order used by LinearScan (stress test)","name":"StressLinearScan","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"c1","defaultValue":"false","definedIn":"share/c1/c1_globals.hpp","description":"stress loop invariant code motion","name":"StressLoopInvariantCodeMotion","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"c2","defaultValue":"false","definedIn":"share/opto/c2_globals.hpp","description":"Stress inlining through method handle linkers","name":"StressMethodHandleLinkerInlining","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"c1","defaultValue":"false","definedIn":"share/c1/c1_globals.hpp","description":"stress Range Check Elimination","name":"StressRangeCheckElimination","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"c2","defaultValue":"false","definedIn":"share/opto/c2_globals.hpp","description":"Recompile each compiled method without subsuming loads \nor escape analysis.","name":"StressRecompilation","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"c2","defaultValue":"false","definedIn":"share/opto/c2_globals.hpp","description":"Use inexact types at allocations, etc., to test reflection","name":"StressReflectiveCode","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Stress linktime bytecode rewriting","name":"StressRewriter","prefix":"-XX:","type":"bool"},
{"availability":"notproduct","component":"runtime","defaultValue":"trueInDebug","definedIn":"share/runtime/globals.hpp","description":"Enable strict checks that safepoints cannot happen for threads \nthat use NoSafepointVerifier","name":"StrictSafepointChecks","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"3","definedIn":"share/runtime/globals.hpp","description":"A string must reach this age (or be promoted to an old region) \nto be considered for deduplication","name":"StringDeduplicationAgeThreshold","prefix":"-XX:","range":"range(1, markOopDesc::max_age)","type":"uintx"},
{"availability":"diagnostic","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Force table rehash every time the table is scanned","name":"StringDeduplicationRehashALot","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Force table resize every time the table is scanned","name":"StringDeduplicationResizeALot","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"defaultStringTableSize","definedIn":"share/runtime/globals.hpp","description":"Number of buckets in the interned String table \n(will be rounded to nearest higher power of 2)","name":"StringTableSize","prefix":"-XX:","range":"range(minimumStringTableSize, 16777216ul)","type":"uintx"},
{"availability":"develop","component":"c2","defaultValue":"true","definedIn":"share/opto/c2_globals.hpp","description":"Attempt to compile while subsuming loads into machine \ninstructions.","name":"SubsumeLoads","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"aarch64","defaultValue":"true","definedIn":"cpu/aarch64/c2_globals_aarch64.hpp","name":"SuperWordLoopUnrollAnalysis","prefix":"-XX:","type":"bool"},
{"availability":"product_pd","component":"c2","definedIn":"share/opto/c2_globals.hpp","description":"Map number of unrolls for main loop via \nSuperword Level Parallelism analysis","name":"SuperWordLoopUnrollAnalysis","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"ppc","defaultValue":"false","definedIn":"cpu/ppc/c2_globals_ppc.hpp","name":"SuperWordLoopUnrollAnalysis","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"s390","defaultValue":"false","definedIn":"cpu/s390/c2_globals_s390.hpp","name":"SuperWordLoopUnrollAnalysis","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"sparc","defaultValue":"false","definedIn":"cpu/sparc/c2_globals_sparc.hpp","name":"SuperWordLoopUnrollAnalysis","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"x86","defaultValue":"true","definedIn":"cpu/x86/c2_globals_x86.hpp","name":"SuperWordLoopUnrollAnalysis","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"c2","defaultValue":"false","definedIn":"share/opto/c2_globals.hpp","description":"Enable runtime dependency checks.","name":"SuperWordRTDepCheck","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"c2","defaultValue":"true","definedIn":"share/opto/c2_globals.hpp","description":"Enable reductions support in superword.","name":"SuperWordReductions","prefix":"-XX:","type":"bool"},
{"availability":"product","cpu":"ppc","defaultValue":"false","definedIn":"cpu/ppc/globals_ppc.hpp","description":"Use Power8 VSX instructions for superword optimization.","name":"SuperwordUseVSX","prefix":"-XX:","type":"bool"},
{"availability":"notproduct","component":"runtime","defaultValue":"<br>","definedIn":"share/runtime/globals.hpp","description":"List of assertions (file:line) to muzzle","name":"SuppressErrorAt","prefix":"-XX:","type":"ccstrlist"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Report NO fatal error message (avoid deadlock)","name":"SuppressFatalErrorMessage","prefix":"-XX:","type":"bool"},
{"availability":"experimental","component":"runtime","defaultValue":"0","definedIn":"share/runtime/globals.hpp","description":"Default survivor space alignment in bytes","name":"SurvivorAlignmentInBytes","prefix":"-XX:","type":"intx"},
{"availability":"product","component":"gc","defaultValue":"3","definedIn":"share/gc/shared/gc_globals.hpp","description":"How much buffer to keep for survivor overflow","name":"SurvivorPadding","prefix":"-XX:","range":"range(0, max_juint)","type":"uintx"},
{"availability":"product","component":"gc","defaultValue":"8","definedIn":"share/gc/shared/gc_globals.hpp","description":"Ratio of eden/survivor space size","name":"SurvivorRatio","prefix":"-XX:","range":"range(1, max_uintx-2)","type":"uintx"},
{"availability":"product","component":"runtime","defaultValue":"50","definedIn":"share/runtime/globals.hpp","deprecated":"","description":"Maximum retry count for an external suspend request","expired":"18","name":"SuspendRetryCount","obsoleted":"17","prefix":"-XX:","range":"range(0, max_intx)","type":"intx"},
{"availability":"product","component":"runtime","defaultValue":"5","definedIn":"share/runtime/globals.hpp","deprecated":"","description":"Milliseconds to delay per retry (* current_retry_count)","expired":"18","name":"SuspendRetryDelay","obsoleted":"17","prefix":"-XX:","range":"range(0, max_intx)","type":"intx"},
{"availability":"notproduct","component":"runtime","defaultValue":"1024","definedIn":"share/runtime/globals.hpp","description":"Number of records in the ring buffer of sweeper activity","name":"SweeperLogEntries","prefix":"-XX:","type":"intx"},
{"availability":"experimental","component":"runtime","defaultValue":"defaultSymbolTableSize","definedIn":"share/runtime/globals.hpp","description":"Number of buckets in the JVM internal Symbol table","name":"SymbolTableSize","prefix":"-XX:","range":"range(minimumSymbolTableSize, 111*defaultSymbolTableSize)","type":"uintx"},
{"availability":"experimental","component":"runtime","defaultValue":"0","definedIn":"share/runtime/globals.hpp","deprecated":"","description":"(Unsafe, Unstable) \nExperimental Sync flags","expired":"13","name":"SyncFlags","obsoleted":"12","prefix":"-XX:","type":"intx"},
{"availability":"experimental","component":"runtime","defaultValue":"NULL","definedIn":"share/runtime/globals.hpp","deprecated":"","description":"(Unstable) Various monitor synchronization tunables","expired":"13","name":"SyncKnobs","obsoleted":"12","prefix":"-XX:","type":"ccstr"},
{"availability":"experimental","component":"runtime","defaultValue":"0","definedIn":"share/runtime/globals.hpp","deprecated":"","description":"(Unstable)","expired":"13","name":"SyncVerbose","obsoleted":"12","prefix":"-XX:","type":"intx"},
{"availability":"product","component":"gc","defaultValue":"35","definedIn":"share/gc/shared/gc_globals.hpp","description":"Allocation averaging weight","name":"TLABAllocationWeight","prefix":"-XX:","range":"range(0, 100)","type":"uintx"},
{"availability":"product","component":"gc","defaultValue":"64","definedIn":"share/gc/shared/gc_globals.hpp","description":"Maximum TLAB waste at a refill (internal fragmentation)","name":"TLABRefillWasteFraction","prefix":"-XX:","range":"range(1, max_juint)","type":"uintx"},
{"availability":"product","component":"gc","defaultValue":"0","definedIn":"share/gc/shared/gc_globals.hpp","description":"Starting TLAB size (in bytes); zero means set ergonomically","name":"TLABSize","prefix":"-XX:","type":"size_t"},
{"availability":"product","component":"gc","defaultValue":"true","definedIn":"share/gc/shared/gc_globals.hpp","deprecated":"12","description":"Provide more detailed and expensive TLAB statistics.","expired":"","name":"TLABStats","obsoleted":"","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"gc","defaultValue":"4","definedIn":"share/gc/shared/gc_globals.hpp","description":"Increment allowed waste at slow allocation","name":"TLABWasteIncrement","prefix":"-XX:","range":"range(0, max_jint)","type":"uintx"},
{"availability":"product","component":"gc","defaultValue":"1","definedIn":"share/gc/shared/gc_globals.hpp","description":"Percentage of Eden that can be wasted","name":"TLABWasteTargetPercent","prefix":"-XX:","range":"range(1, 100)","type":"uintx"},
{"availability":"product","component":"gc","defaultValue":"10","definedIn":"share/gc/shared/gc_globals.hpp","description":"Target wasted space in last buffer as percent of overall \nallocation","name":"TargetPLABWastePct","prefix":"-XX:","range":"range(1, 100)","type":"uintx"},
{"availability":"product","component":"gc","defaultValue":"50","definedIn":"share/gc/shared/gc_globals.hpp","description":"Desired percentage of survivor space used after scavenge","name":"TargetSurvivorRatio","prefix":"-XX:","range":"range(0, 100)","type":"uintx"},
{"availability":"product","component":"gc","defaultValue":"20","definedIn":"share/gc/shared/gc_globals.hpp","description":"Adaptive size percentage change in tenured generation","name":"TenuredGenerationSizeIncrement","prefix":"-XX:","range":"range(0, 100)","type":"uintx"},
{"availability":"product","component":"gc","defaultValue":"2","definedIn":"share/gc/shared/gc_globals.hpp","description":"Decay factor to TenuredGenerationSizeIncrement","name":"TenuredGenerationSizeSupplementDecay","prefix":"-XX:","range":"range(1, max_uintx)","type":"uintx"},
{"availability":"product","component":"gc","defaultValue":"80","definedIn":"share/gc/shared/gc_globals.hpp","description":"Supplement to TenuredGenerationSizeIncrement used at startup","name":"TenuredGenerationSizeSupplement","prefix":"-XX:","range":"range(0, 100)","type":"uintx"},
{"availability":"notproduct","component":"runtime","defaultValue":"0","definedIn":"share/runtime/globals.hpp","description":"If > 0, provokes an error inside VM error handler (a secondary \ncrash). see test_error_handler() in vmError.cpp","name":"TestCrashInErrorHandler","prefix":"-XX:","type":"uintx"},
{"availability":"notproduct","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"If true, tests SafeFetch inside error handler.","name":"TestSafeFetchInErrorHandler","prefix":"-XX:","type":"bool"},
{"availability":"notproduct","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"If true, simulates an unresponsive error handler.","name":"TestUnresponsiveErrorHandler","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"aarch64","defaultValue":"true","definedIn":"cpu/aarch64/globals_aarch64.hpp","deprecated":"13","expired":"15","name":"ThreadLocalHandshakes","obsoleted":"14","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"arm","defaultValue":"false","definedIn":"cpu/arm/globals_arm.hpp","deprecated":"13","expired":"15","name":"ThreadLocalHandshakes","obsoleted":"14","prefix":"-XX:","type":"bool"},
{"availability":"product_pd","component":"runtime","definedIn":"share/runtime/globals.hpp","deprecated":"13","description":"Use thread-local polls instead of global poll for safepoints.","expired":"15","name":"ThreadLocalHandshakes","obsoleted":"14","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"ppc","defaultValue":"true","definedIn":"cpu/ppc/globals_ppc.hpp","deprecated":"13","expired":"15","name":"ThreadLocalHandshakes","obsoleted":"14","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"s390","defaultValue":"true","definedIn":"cpu/s390/globals_s390.hpp","deprecated":"13","expired":"15","name":"ThreadLocalHandshakes","obsoleted":"14","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"sparc","defaultValue":"true","definedIn":"cpu/sparc/globals_sparc.hpp","deprecated":"13","expired":"15","name":"ThreadLocalHandshakes","obsoleted":"14","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"x86","defaultValue":"false","definedIn":"cpu/x86/globals_x86.hpp","deprecated":"13","expired":"15","name":"ThreadLocalHandshakes","obsoleted":"14","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"zero","defaultValue":"false","definedIn":"cpu/zero/globals_zero.hpp","deprecated":"13","expired":"15","name":"ThreadLocalHandshakes","obsoleted":"14","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"0","definedIn":"share/runtime/globals.hpp","description":"0 : Normal. \n VM chooses priorities that are appropriate for normal \n applications. On Solaris NORM_PRIORITY and above are mapped \n to normal native priority. Java priorities below \n NORM_PRIORITY map to lower native priority values. On \n Windows applications are allowed to use higher native \n priorities. However, with ThreadPriorityPolicy=0, VM will \n not use the highest possible native priority, \n THREAD_PRIORITY_TIME_CRITICAL, as it may interfere with \n system threads. On Linux thread priorities are ignored \n because the OS does not support static priority in \n SCHED_OTHER scheduling class which is the only choice for \n non-root, non-realtime applications. \n\n1 : Aggressive. \n Java thread priorities map over to the entire range of \n native thread priorities. Higher Java thread priorities map \n to higher native thread priorities. This policy should be \n used with care, as sometimes it can cause performance \n degradation in the application and/or the entire system. On \n Linux/BSD/macOS this policy requires root privilege or an \n extended capability.","name":"ThreadPriorityPolicy","prefix":"-XX:","range":"range(0, 1)","type":"intx"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Print priority changes","name":"ThreadPriorityVerbose","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","comment":"// 0 => use system default","cpu":"ppc","defaultValue":"2048","definedIn":"os_cpu/aix_ppc/globals_aix_ppc.hpp","name":"ThreadStackSize","os":"aix","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"x86","defaultValue":"320","definedIn":"os_cpu/bsd_x86/globals_bsd_x86.hpp","name":"ThreadStackSize","os":"bsd","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"zero","defaultValue":"1536","definedIn":"os_cpu/bsd_zero/globals_bsd_zero.hpp","name":"ThreadStackSize","os":"bsd","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","comment":"// 0 => use system default","cpu":"aarch64","defaultValue":"2048","definedIn":"os_cpu/linux_aarch64/globals_linux_aarch64.hpp","name":"ThreadStackSize","os":"linux","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"arm","defaultValue":"320","definedIn":"os_cpu/linux_arm/globals_linux_arm.hpp","name":"ThreadStackSize","os":"linux","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","comment":"// 0 => use system default","cpu":"ppc","defaultValue":"2048","definedIn":"os_cpu/linux_ppc/globals_linux_ppc.hpp","name":"ThreadStackSize","os":"linux","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","comment":"// 0 => Use system default.","cpu":"s390","defaultValue":"1024","definedIn":"os_cpu/linux_s390/globals_linux_s390.hpp","name":"ThreadStackSize","os":"linux","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"x86","defaultValue":"320","definedIn":"os_cpu/linux_x86/globals_linux_x86.hpp","name":"ThreadStackSize","os":"linux","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"zero","defaultValue":"1536","definedIn":"os_cpu/linux_zero/globals_linux_zero.hpp","name":"ThreadStackSize","os":"linux","prefix":"-XX:","type":"intx"},
{"availability":"product_pd","component":"runtime","definedIn":"share/runtime/globals.hpp","description":"Thread Stack Size (in Kbytes)","name":"ThreadStackSize","prefix":"-XX:","range":"range(0, 1 * M)","type":"intx"},
{"availability":"define_pd_global","cpu":"sparc","defaultValue":"1024","definedIn":"cpu/sparc/globals_sparc.hpp","name":"ThreadStackSize","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"x86","defaultValue":"320","definedIn":"os_cpu/solaris_x86/globals_solaris_x86.hpp","name":"ThreadStackSize","os":"solaris","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","comment":"// 0 => use system default","cpu":"x86","defaultValue":"0","definedIn":"os_cpu/windows_x86/globals_windows_x86.hpp","name":"ThreadStackSize","os":"windows","prefix":"-XX:","type":"intx"},
{"availability":"product","component":"gc","defaultValue":"10","definedIn":"share/gc/shared/gc_globals.hpp","description":"Allowed collection cost difference between generations","name":"ThresholdTolerance","prefix":"-XX:","range":"range(0, 100)","type":"uintx"},
{"availability":"product","component":"runtime","defaultValue":"10","definedIn":"share/runtime/globals.hpp","description":"Interpreter (tier 0) invocation notification frequency","name":"Tier0BackedgeNotifyFreqLog","prefix":"-XX:","range":"range(0, 30)","type":"intx"},
{"availability":"product","component":"runtime","defaultValue":"7","definedIn":"share/runtime/globals.hpp","description":"Interpreter (tier 0) invocation notification frequency","name":"Tier0InvokeNotifyFreqLog","prefix":"-XX:","range":"range(0, 30)","type":"intx"},
{"availability":"product","component":"runtime","defaultValue":"200","definedIn":"share/runtime/globals.hpp","description":"Start profiling in interpreter if the counters exceed tier 3 \nthresholds by the specified percentage","name":"Tier0ProfilingStartPercentage","prefix":"-XX:","range":"range(0, max_jint)","type":"intx"},
{"availability":"product","component":"runtime","defaultValue":"20","definedIn":"share/runtime/globals.hpp","description":"Inlinee invocation (tiers 2 and 3) notification frequency","name":"Tier23InlineeNotifyFreqLog","prefix":"-XX:","range":"range(0, 30)","type":"intx"},
{"availability":"product","component":"runtime","defaultValue":"0","definedIn":"share/runtime/globals.hpp","description":"Back edge threshold at which tier 2 compilation is invoked","name":"Tier2BackEdgeThreshold","prefix":"-XX:","range":"range(0, max_jint)","type":"intx"},
{"availability":"product","component":"runtime","defaultValue":"14","definedIn":"share/runtime/globals.hpp","description":"C1 without MDO (tier 2) invocation notification frequency","name":"Tier2BackedgeNotifyFreqLog","prefix":"-XX:","range":"range(0, 30)","type":"intx"},
{"availability":"product","component":"runtime","defaultValue":"0","definedIn":"share/runtime/globals.hpp","description":"threshold at which tier 2 compilation is invoked","name":"Tier2CompileThreshold","prefix":"-XX:","range":"range(0, max_jint)","type":"intx"},
{"availability":"product","component":"runtime","defaultValue":"11","definedIn":"share/runtime/globals.hpp","description":"C1 without MDO (tier 2) invocation notification frequency","name":"Tier2InvokeNotifyFreqLog","prefix":"-XX:","range":"range(0, 30)","type":"intx"},
{"availability":"product","component":"runtime","defaultValue":"120000","definedIn":"share/runtime/globals.hpp","description":"Back edge threshold at which tier 3 OSR compilation is invoked \nif coming from AOT","name":"Tier3AOTBackEdgeThreshold","prefix":"-XX:","range":"range(0, max_jint)","type":"intx"},
{"availability":"product","component":"runtime","defaultValue":"15000","definedIn":"share/runtime/globals.hpp","description":"Threshold at which tier 3 compilation is invoked (invocation \nminimum must be satisfied) if coming from AOT","name":"Tier3AOTCompileThreshold","prefix":"-XX:","range":"range(0, max_jint)","type":"intx"},
{"availability":"product","component":"runtime","defaultValue":"10000","definedIn":"share/runtime/globals.hpp","description":"Compile if number of method invocations crosses this \nthreshold if coming from AOT","name":"Tier3AOTInvocationThreshold","prefix":"-XX:","range":"range(0, max_jint)","type":"intx"},
{"availability":"product","component":"runtime","defaultValue":"1000","definedIn":"share/runtime/globals.hpp","description":"Minimum invocation to compile at tier 3 if coming from AOT","name":"Tier3AOTMinInvocationThreshold","prefix":"-XX:","range":"range(0, max_jint)","type":"intx"},
{"availability":"product","component":"runtime","defaultValue":"60000","definedIn":"share/runtime/globals.hpp","description":"Back edge threshold at which tier 3 OSR compilation is invoked","name":"Tier3BackEdgeThreshold","prefix":"-XX:","range":"range(0, max_jint)","type":"intx"},
{"availability":"product","component":"runtime","defaultValue":"13","definedIn":"share/runtime/globals.hpp","description":"C1 with MDO profiling (tier 3) invocation notification \nfrequency","name":"Tier3BackedgeNotifyFreqLog","prefix":"-XX:","range":"range(0, 30)","type":"intx"},
{"availability":"product","component":"runtime","defaultValue":"2000","definedIn":"share/runtime/globals.hpp","description":"Threshold at which tier 3 compilation is invoked (invocation \nminimum must be satisfied)","name":"Tier3CompileThreshold","prefix":"-XX:","range":"range(0, max_jint)","type":"intx"},
{"availability":"product","component":"runtime","defaultValue":"2","definedIn":"share/runtime/globals.hpp","description":"If C2 queue size is less than this amount per compiler thread \nallow methods compiled at tier 2 transition to tier 3","name":"Tier3DelayOff","prefix":"-XX:","range":"range(0, max_jint)","type":"intx"},
{"availability":"product","component":"runtime","defaultValue":"5","definedIn":"share/runtime/globals.hpp","description":"If C2 queue size grows over this amount per compiler thread \nstop compiling at tier 3 and start compiling at tier 2","name":"Tier3DelayOn","prefix":"-XX:","range":"range(0, max_jint)","type":"intx"},
{"availability":"product","component":"runtime","defaultValue":"200","definedIn":"share/runtime/globals.hpp","description":"Compile if number of method invocations crosses this \nthreshold","name":"Tier3InvocationThreshold","prefix":"-XX:","range":"range(0, max_jint)","type":"intx"},
{"availability":"product","component":"runtime","defaultValue":"10","definedIn":"share/runtime/globals.hpp","description":"C1 with MDO profiling (tier 3) invocation notification \nfrequency","name":"Tier3InvokeNotifyFreqLog","prefix":"-XX:","range":"range(0, 30)","type":"intx"},
{"availability":"product","component":"runtime","defaultValue":"5","definedIn":"share/runtime/globals.hpp","description":"Tier 3 thresholds will increase twofold when C1 queue size \nreaches this amount per compiler thread","name":"Tier3LoadFeedback","prefix":"-XX:","range":"range(0, max_jint)","type":"intx"},
{"availability":"product","component":"runtime","defaultValue":"100","definedIn":"share/runtime/globals.hpp","description":"Minimum invocation to compile at tier 3","name":"Tier3MinInvocationThreshold","prefix":"-XX:","range":"range(0, max_jint)","type":"intx"},
{"availability":"product","component":"runtime","defaultValue":"40000","definedIn":"share/runtime/globals.hpp","description":"Back edge threshold at which tier 4 OSR compilation is invoked","name":"Tier4BackEdgeThreshold","prefix":"-XX:","range":"range(0, max_jint)","type":"intx"},
{"availability":"product","component":"runtime","defaultValue":"15000","definedIn":"share/runtime/globals.hpp","description":"Threshold at which tier 4 compilation is invoked (invocation \nminimum must be satisfied","name":"Tier4CompileThreshold","prefix":"-XX:","range":"range(0, max_jint)","type":"intx"},
{"availability":"product","component":"runtime","defaultValue":"5000","definedIn":"share/runtime/globals.hpp","description":"Compile if number of method invocations crosses this \nthreshold","name":"Tier4InvocationThreshold","prefix":"-XX:","range":"range(0, max_jint)","type":"intx"},
{"availability":"product","component":"runtime","defaultValue":"3","definedIn":"share/runtime/globals.hpp","description":"Tier 4 thresholds will increase twofold when C2 queue size \nreaches this amount per compiler thread","name":"Tier4LoadFeedback","prefix":"-XX:","range":"range(0, max_jint)","type":"intx"},
{"availability":"product","component":"runtime","defaultValue":"600","definedIn":"share/runtime/globals.hpp","description":"Minimum invocation to compile at tier 4","name":"Tier4MinInvocationThreshold","prefix":"-XX:","range":"range(0, max_jint)","type":"intx"},
{"availability":"define_pd_global","cpu":"aarch64","defaultValue":"false","definedIn":"cpu/aarch64/c1_globals_aarch64.hpp","name":"TieredCompilation","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"arm","defaultValue":"false","definedIn":"cpu/arm/c2_globals_arm.hpp","name":"TieredCompilation","prefix":"-XX:","type":"bool"},
{"availability":"product_pd","component":"runtime","definedIn":"share/runtime/globals.hpp","description":"Enable tiered compilation","name":"TieredCompilation","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"ppc","defaultValue":"false","definedIn":"cpu/ppc/c1_globals_ppc.hpp","name":"TieredCompilation","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"s390","defaultValue":"trueInTiered","definedIn":"cpu/s390/c2_globals_s390.hpp","name":"TieredCompilation","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"sparc","defaultValue":"false","definedIn":"cpu/sparc/c1_globals_sparc.hpp","name":"TieredCompilation","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"x86","defaultValue":"false","definedIn":"cpu/x86/c1_globals_x86.hpp","name":"TieredCompilation","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"50","definedIn":"share/runtime/globals.hpp","description":"Kill compile task if method was not used within \ngiven timeout in milliseconds","name":"TieredCompileTaskTimeout","prefix":"-XX:","range":"range(0, max_intx)","type":"intx"},
{"availability":"product","component":"runtime","defaultValue":"25","definedIn":"share/runtime/globals.hpp","description":"Maximum rate sampling interval (in milliseconds)","name":"TieredRateUpdateMaxTime","prefix":"-XX:","range":"range(0, max_intx)","type":"intx"},
{"availability":"product","component":"runtime","defaultValue":"1","definedIn":"share/runtime/globals.hpp","description":"Minimum rate sampling interval (in milliseconds)","name":"TieredRateUpdateMinTime","prefix":"-XX:","range":"range(0, max_intx)","type":"intx"},
{"availability":"product","component":"runtime","defaultValue":"4","definedIn":"share/runtime/globals.hpp","description":"Stop at given compilation level","name":"TieredStopAtLevel","prefix":"-XX:","range":"range(0, 4)","type":"intx"},
{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Time the compilation policy","name":"TimeCompilationPolicy","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"c1","defaultValue":"false","definedIn":"share/c1/c1_globals.hpp","description":"print detailed timing of each LinearScan run","name":"TimeEachLinearScan","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"c1","defaultValue":"false","definedIn":"share/c1/c1_globals.hpp","description":"detailed timing of LinearScan phases","name":"TimeLinearScan","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Time computation of bytecode liveness analysis","name":"TimeLivenessAnalysis","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Time calls to GenerateOopMap::compute_map() individually","name":"TimeOopMap2","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Time calls to GenerateOopMap::compute_map() in sum","name":"TimeOopMap","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"0","definedIn":"share/runtime/globals.hpp","description":"Trace bytecodes starting with specified bytecode number","name":"TraceBytecodesAt","prefix":"-XX:","type":"intx"},
{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Trace bytecode execution","name":"TraceBytecodes","prefix":"-XX:","type":"bool"},
{"availability":"notproduct","component":"c2","defaultValue":"false","definedIn":"share/opto/c2_globals.hpp","description":"Trace allocators use of cisc spillable instructions","name":"TraceCISCSpill","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Trace all call fixups","name":"TraceCallFixup","prefix":"-XX:","type":"bool"},
{"availability":"notproduct","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Trace stack-walk of codeblobs","name":"TraceCodeBlobStacks","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Trace compilation policy","name":"TraceCompilationPolicy","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Trace changes of compiled IC","name":"TraceCompiledIC","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Trace creation and removal of compiler threads","name":"TraceCompilerThreads","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"trace creation of zombie nmethods","name":"TraceCreateZombies","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Trace deoptimization","name":"TraceDeoptimization","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Trace dependencies","name":"TraceDependencies","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Trace traversal of derived pointers on stack","name":"TraceDerivedPointers","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"c1","defaultValue":"false","definedIn":"share/c1/c1_globals.hpp","description":"Trace usage of FPU registers at start of blocks (intel only)","name":"TraceFPURegisterUsage","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"c1","defaultValue":"false","definedIn":"share/c1/c1_globals.hpp","description":"Trace emulation of the FPU stack (intel only)","name":"TraceFPUStack","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Trace registration of final references","name":"TraceFinalizerRegistration","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Trace frequency based inlining","name":"TraceFrequencyInlining","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"gc","defaultValue":"false","definedIn":"share/gc/parallel/parallel_globals.hpp","description":"Trace actions of the GC task manager","name":"TraceGCTaskManager","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"gc","defaultValue":"false","definedIn":"share/gc/parallel/parallel_globals.hpp","description":"Trace actions of the GC task queues","name":"TraceGCTaskQueue","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Trace usage of IC buffer","name":"TraceICBuffer","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Trace inline cache changes","name":"TraceICs","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Trace clearing of inline caches in nmethods","name":"TraceInlineCacheClearing","prefix":"-XX:","type":"bool"},
{"availability":"notproduct","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Trace method invocation counter overflow","name":"TraceInvocationCounterOverflow","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","deprecated":"","description":"trace internal invoke dynamic operations","expired":"17","name":"TraceInvokeDynamic","obsoleted":"16","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"c2","defaultValue":"false","definedIn":"share/opto/c2_globals.hpp","description":"Print progress during Iterative Global Value Numbering","name":"TraceIterativeGVN","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","deprecated":"","description":"Trace JVMTI object tagging calls","expired":"17","name":"TraceJVMTIObjectTagging","obsoleted":"16","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"NULL","definedIn":"share/runtime/globals.hpp","description":"Trace flags for JVMTI functions and events","name":"TraceJVMTI","prefix":"-XX:","type":"ccstr"},
{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Trace java language assertions","name":"TraceJavaAssertions","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"c1","defaultValue":"0","definedIn":"share/c1/c1_globals.hpp","description":"Debug levels for the linear scan allocator","name":"TraceLinearScanLevel","prefix":"-XX:","range":"range(0, 4)","type":"intx"},
{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Trace the generation of liveness analysis information","name":"TraceLivenessGen","prefix":"-XX:","type":"bool"},
{"availability":"notproduct","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Trace queries of liveness analysis information","name":"TraceLivenessQuery","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Print out every time compilation is longer than \na given threshold","name":"TraceLongCompiles","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"c2","defaultValue":"false","definedIn":"share/opto/c2_globals.hpp","description":"Trace generation of loop limits checks","name":"TraceLoopLimitCheck","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"c2","defaultValue":"false","definedIn":"share/opto/c2_globals.hpp","description":"Trace executed loop optimizations","name":"TraceLoopOpts","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"c2","defaultValue":"false","definedIn":"share/opto/c2_globals.hpp","description":"Trace generation of loop predicates","name":"TraceLoopPredicate","prefix":"-XX:","type":"bool"},
{"availability":"notproduct","component":"c2","defaultValue":"false","definedIn":"share/opto/c2_globals.hpp","description":"Trace loop unswitching","name":"TraceLoopUnswitching","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","deprecated":"","description":"trace internal method handle operations","expired":"17","name":"TraceMethodHandles","obsoleted":"16","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Print when methods are replaced do to recompilation","name":"TraceMethodReplacement","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","deprecated":"13","description":"Trace nmethod installation","expired":"15","name":"TraceNMethodInstalls","obsoleted":"14","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Trace OopMapGeneration: print detailed cell states","name":"TraceNewOopMapGenerationDetailed","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Trace OopMapGeneration","name":"TraceNewOopMapGeneration","prefix":"-XX:","type":"bool"},
{"availability":"notproduct","component":"c2","defaultValue":"false","definedIn":"share/opto/c2_globals.hpp","description":"Trace creation of Vector nodes","name":"TraceNewVectors","prefix":"-XX:","type":"bool"},
{"availability":"notproduct","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Trace on stack replacement","name":"TraceOnStackReplacement","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Trace rewriting of method oops during oop map generation","name":"TraceOopMapRewrites","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"c2","defaultValue":"false","definedIn":"share/opto/c2_globals.hpp","description":"print detailed information about fill conversion","name":"TraceOptimizeFill","prefix":"-XX:","type":"bool"},
{"availability":"notproduct","component":"c2","defaultValue":"false","definedIn":"share/opto/c2_globals.hpp","description":"Trace pipelining information","name":"TraceOptoOutput","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"c2","defaultValue":"false","definedIn":"share/opto/c2_globals.hpp","description":"Trace bytecode parse and control-flow merge","name":"TraceOptoParse","prefix":"-XX:","type":"bool"},
{"availability":"notproduct","component":"c2","defaultValue":"false","definedIn":"share/opto/c2_globals.hpp","description":"Trace pipelining information","name":"TraceOptoPipelining","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"gc","defaultValue":"false","definedIn":"share/gc/parallel/parallel_globals.hpp","description":"Trace dense prefix computation for ParallelOldGC","name":"TraceParallelOldGCDensePrefix","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"gc","defaultValue":"false","definedIn":"share/gc/parallel/parallel_globals.hpp","description":"Trace marking phase in ParallelOldGC","name":"TraceParallelOldGCMarkingPhase","prefix":"-XX:","type":"bool"},
{"availability":"notproduct","component":"c2","defaultValue":"false","definedIn":"share/opto/c2_globals.hpp","description":"Trace partial peeling (loop rotation) information","name":"TracePartialPeeling","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"c1","defaultValue":"false","definedIn":"share/c1/c1_globals.hpp","description":"Trace patching of field access on uninitialized classes","name":"TracePatching","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Trace usage of frame::patch_pc","name":"TracePcPatching","prefix":"-XX:","type":"bool"},
{"availability":"notproduct","component":"c2","defaultValue":"false","definedIn":"share/opto/c2_globals.hpp","description":"Print progress during Conditional Constant Propagation","name":"TracePhaseCCP","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"c2","defaultValue":"false","definedIn":"share/opto/c2_globals.hpp","description":"Trace expanding nodes after\n register allocation.","name":"TracePostallocExpand","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"c1","defaultValue":"false","definedIn":"share/c1/c1_globals.hpp","description":"trace runtime traps caused by predicate failure","name":"TracePredicateFailedTraps","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Trace profiling at the bytecode level during interpretation. \nThis outputs the profiling information collected to improve \njit compilation.","name":"TraceProfileInterpreter","prefix":"-XX:","type":"bool"},
{"availability":"notproduct","component":"c2","defaultValue":"false","definedIn":"share/opto/c2_globals.hpp","description":"Trace profile loop trip count information","name":"TraceProfileTripCount","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"c1","defaultValue":"false","definedIn":"share/c1/c1_globals.hpp","description":"Trace Range Check Elimination","name":"TraceRangeCheckElimination","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"c2","defaultValue":"false","definedIn":"share/opto/c2_globals.hpp","description":"Trace additional overflow checks in RCE","name":"TraceRangeLimitCheck","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Trace the bytecode relocator","name":"TraceRelocator","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"c2","defaultValue":"false","definedIn":"share/opto/c2_globals.hpp","description":"Trace spilling","name":"TraceSpilling","prefix":"-XX:","type":"bool"},
{"availability":"notproduct","component":"c2","defaultValue":"false","definedIn":"share/opto/c2_globals.hpp","description":"Trace what Superword Level Parallelism analysis applies","name":"TraceSuperWordLoopUnrollAnalysis","prefix":"-XX:","type":"bool"},
{"availability":"notproduct","component":"c2","defaultValue":"false","definedIn":"share/opto/c2_globals.hpp","description":"Trace superword transforms","name":"TraceSuperWord","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","deprecated":"","description":"Trace external suspend wait failures","expired":"18","name":"TraceSuspendWaitFailures","obsoleted":"17","prefix":"-XX:","type":"bool"},
{"availability":"product","cpu":"aarch64","defaultValue":"false","definedIn":"cpu/aarch64/globals_aarch64.hpp","description":"Trace all traps the signal handler","name":"TraceTraps","prefix":"-XX:","type":"bool"},
{"availability":"product","cpu":"ppc","defaultValue":"false","definedIn":"cpu/ppc/globals_ppc.hpp","description":"Trace all traps the signal handler\nhandles.","name":"TraceTraps","prefix":"-XX:","type":"bool"},
{"availability":"product","cpu":"s390","defaultValue":"false","definedIn":"cpu/s390/globals_s390.hpp","description":"Trace all traps the signal handler\nhandles.","name":"TraceTraps","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"c2","defaultValue":"false","definedIn":"share/opto/c2_globals.hpp","description":"Trace type profile","name":"TraceTypeProfile","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"jvmci","defaultValue":"false","definedIn":"share/jvmci/jvmci_globals.hpp","description":"Print message when a failed speculation was not collected","name":"TraceUncollectedSpeculations","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"c2","defaultValue":"50","definedIn":"share/opto/c2_globals.hpp","description":"When initializing fields, track up to this many words","name":"TrackedInitializationLimit","prefix":"-XX:","range":"range(0, 65535)","type":"intx"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","deprecated":"","description":"Enable error report transmission on erroneous termination","expired":"13","name":"TransmitErrorReport","obsoleted":"12","prefix":"-XX:","type":"bool"},
{"availability":"product","cpu":"ppc","defaultValue":"true","definedIn":"cpu/ppc/globals_ppc.hpp","description":"Raise and handle SIGTRAP if inline cache miss detected.","name":"TrapBasedICMissChecks","prefix":"-XX:","type":"bool"},
{"availability":"product","cpu":"ppc","defaultValue":"true","definedIn":"cpu/ppc/globals_ppc.hpp","description":"Raise and handle SIGTRAP if calling not entrant or zombie\n method.","name":"TrapBasedNotEntrantChecks","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"aarch64","defaultValue":"false","definedIn":"cpu/aarch64/globals_aarch64.hpp","name":"TrapBasedNullChecks","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","comment":"// Not needed","cpu":"arm","defaultValue":"false","definedIn":"cpu/arm/globals_arm.hpp","name":"TrapBasedNullChecks","prefix":"-XX:","type":"bool"},
{"availability":"product_pd","component":"runtime","definedIn":"share/runtime/globals.hpp","description":"Generate code for null checks that uses a cmp and trap \ninstruction raising SIGTRAP. This is only used if an access to\nnull (+offset) will not raise a SIGSEGV, i.e.,\nImplicitNullChecks don't work (PPC64).","name":"TrapBasedNullChecks","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"ppc","defaultValue":"true","definedIn":"cpu/ppc/globals_ppc.hpp","name":"TrapBasedNullChecks","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"s390","defaultValue":"true","definedIn":"cpu/s390/globals_s390.hpp","name":"TrapBasedNullChecks","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","comment":"// Not needed on sparc.","cpu":"sparc","defaultValue":"false","definedIn":"cpu/sparc/globals_sparc.hpp","name":"TrapBasedNullChecks","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","comment":"// Not needed on x86.","cpu":"x86","defaultValue":"false","definedIn":"cpu/x86/globals_x86.hpp","name":"TrapBasedNullChecks","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"zero","defaultValue":"false","definedIn":"cpu/zero/globals_zero.hpp","name":"TrapBasedNullChecks","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","comment":"// Not needed.","cpu":"aarch64","defaultValue":"false","definedIn":"cpu/aarch64/c2_globals_aarch64.hpp","name":"TrapBasedRangeChecks","prefix":"-XX:","type":"bool"},
{"availability":"product_pd","component":"c2","definedIn":"share/opto/c2_globals.hpp","description":"Generate code for range checks that uses a cmp and trap \ninstruction raising SIGTRAP. Used on PPC64.","name":"TrapBasedRangeChecks","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"ppc","defaultValue":"true","definedIn":"cpu/ppc/c2_globals_ppc.hpp","name":"TrapBasedRangeChecks","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","comment":"// Not needed on z/Architecture.","cpu":"s390","defaultValue":"false","definedIn":"cpu/s390/c2_globals_s390.hpp","name":"TrapBasedRangeChecks","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","comment":"// Not needed on sparc.","cpu":"sparc","defaultValue":"false","definedIn":"cpu/sparc/c2_globals_sparc.hpp","name":"TrapBasedRangeChecks","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","comment":"// Not needed on x86.","cpu":"x86","defaultValue":"false","definedIn":"cpu/x86/c2_globals_x86.hpp","name":"TrapBasedRangeChecks","prefix":"-XX:","type":"bool"},
{"availability":"experimental","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"trust final non-static declarations for constant folding","name":"TrustFinalNonStaticFields","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"aarch64","defaultValue":"false","definedIn":"cpu/aarch64/c1_globals_aarch64.hpp","name":"TwoOperandLIRForm","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"arm","defaultValue":"false","definedIn":"cpu/arm/c1_globals_arm.hpp","name":"TwoOperandLIRForm","prefix":"-XX:","type":"bool"},
{"availability":"develop_pd","component":"c1","definedIn":"share/c1/c1_globals.hpp","description":"true if LIR requires src1 and dst to match in binary LIR ops","name":"TwoOperandLIRForm","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"ppc","defaultValue":"false","definedIn":"cpu/ppc/c1_globals_ppc.hpp","name":"TwoOperandLIRForm","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"s390","defaultValue":"true","definedIn":"cpu/s390/c1_globals_s390.hpp","name":"TwoOperandLIRForm","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"sparc","defaultValue":"false","definedIn":"cpu/sparc/c1_globals_sparc.hpp","name":"TwoOperandLIRForm","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"x86","defaultValue":"true","definedIn":"cpu/x86/c1_globals_x86.hpp","name":"TwoOperandLIRForm","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"2","definedIn":"share/runtime/globals.hpp","description":"max number of call arguments to consider for type profiling","name":"TypeProfileArgsLimit","prefix":"-XX:","range":"range(0, 16)","type":"intx"},
{"availability":"develop","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","description":"treat casts like calls for purposes of type profiling","name":"TypeProfileCasts","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"aarch64","defaultValue":"111","definedIn":"cpu/aarch64/globals_aarch64.hpp","name":"TypeProfileLevel","prefix":"-XX:","type":"uintx"},
{"availability":"define_pd_global","cpu":"arm","defaultValue":"0","definedIn":"cpu/arm/globals_arm.hpp","name":"TypeProfileLevel","prefix":"-XX:","type":"uintx"},
{"availability":"product_pd","component":"runtime","definedIn":"share/runtime/globals.hpp","description":"=XYZ, with Z: Type profiling of arguments at call; \nY: Type profiling of return value at call; \nX: Type profiling of parameters to methods; \nX, Y and Z in 0=off ; 1=jsr292 only; 2=all methods","name":"TypeProfileLevel","prefix":"-XX:","type":"uintx"},
{"availability":"define_pd_global","cpu":"ppc","defaultValue":"111","definedIn":"cpu/ppc/globals_ppc.hpp","name":"TypeProfileLevel","prefix":"-XX:","type":"uintx"},
{"availability":"define_pd_global","cpu":"s390","defaultValue":"111","definedIn":"cpu/s390/globals_s390.hpp","name":"TypeProfileLevel","prefix":"-XX:","type":"uintx"},
{"availability":"define_pd_global","cpu":"sparc","defaultValue":"111","definedIn":"cpu/sparc/globals_sparc.hpp","name":"TypeProfileLevel","prefix":"-XX:","type":"uintx"},
{"availability":"define_pd_global","cpu":"x86","defaultValue":"111","definedIn":"cpu/x86/globals_x86.hpp","name":"TypeProfileLevel","prefix":"-XX:","type":"uintx"},
{"availability":"define_pd_global","cpu":"zero","defaultValue":"0","definedIn":"cpu/zero/globals_zero.hpp","name":"TypeProfileLevel","prefix":"-XX:","type":"uintx"},
{"availability":"product","component":"c2","defaultValue":"90","definedIn":"share/opto/c2_globals.hpp","description":"% of major receiver type to all profiled receivers","name":"TypeProfileMajorReceiverPercent","prefix":"-XX:","range":"range(0, 100)","type":"intx"},
{"availability":"product","component":"runtime","defaultValue":"2","definedIn":"share/runtime/globals.hpp","description":"max number of incoming parameters to consider for type profiling\n, -1 for all","name":"TypeProfileParmsLimit","prefix":"-XX:","range":"range(-1, 64)","type":"intx"},
{"availability":"product","component":"runtime","defaultValue":"2","definedIn":"share/runtime/globals.hpp","description":"Number of receiver types to record in call/cast profile","name":"TypeProfileWidth","prefix":"-XX:","range":"range(0, 8)","type":"intx"},
{"availability":"define_pd_global","comment":"// Uncommon-trap NULLs past to check cast","cpu":"aarch64","defaultValue":"true","definedIn":"cpu/aarch64/globals_aarch64.hpp","name":"UncommonNullCast","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","comment":"// Uncommon-trap NULLs past to check cast","cpu":"arm","defaultValue":"true","definedIn":"cpu/arm/globals_arm.hpp","name":"UncommonNullCast","prefix":"-XX:","type":"bool"},
{"availability":"develop_pd","component":"runtime","definedIn":"share/runtime/globals.hpp","description":"track occurrences of null in casts; adjust compiler tactics","name":"UncommonNullCast","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","comment":"// Uncommon-trap NULLs passed to check cast.","cpu":"ppc","defaultValue":"true","definedIn":"cpu/ppc/globals_ppc.hpp","name":"UncommonNullCast","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","comment":"// Uncommon-trap NULLs passed to check cast.","cpu":"s390","defaultValue":"true","definedIn":"cpu/s390/globals_s390.hpp","name":"UncommonNullCast","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","comment":"// Uncommon-trap NULLs passed to check cast","cpu":"sparc","defaultValue":"true","definedIn":"cpu/sparc/globals_sparc.hpp","name":"UncommonNullCast","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","comment":"// Uncommon-trap NULLs passed to check cast","cpu":"x86","defaultValue":"true","definedIn":"cpu/x86/globals_x86.hpp","name":"UncommonNullCast","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"zero","defaultValue":"true","definedIn":"cpu/zero/globals_zero.hpp","name":"UncommonNullCast","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"0","definedIn":"share/runtime/globals.hpp","description":"Unguard page and retry on no-execute fault (Win32 only) \n\n0=off, 1=conservative, 2=aggressive","name":"UnguardOnExecutionViolation","prefix":"-XX:","range":"range(0, 2)","type":"intx"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","deprecated":"11","description":"Unlink unreferenced symbols from the symbol table at safepoints","expired":"13","name":"UnlinkSymbolsALot","obsoleted":"12","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"runtime","defaultValue":"trueInDebug","definedIn":"share/runtime/globals.hpp","description":"Enable normal processing of flags relating to field diagnostics","name":"UnlockDiagnosticVMOptions","prefix":"-XX:","type":"bool"},
{"availability":"experimental","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Enable normal processing of flags relating to experimental \nfeatures","name":"UnlockExperimentalVMOptions","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"c2","defaultValue":"1","definedIn":"share/opto/c2_globals.hpp","description":"Don't use profile_trip_cnt() to restrict unrolling until \nunrolling would push the number of unrolled iterations above \nUnrollLimitForProfileCheck. A higher value allows more \nunrolling. Zero acts as a very large value.","name":"UnrollLimitForProfileCheck","prefix":"-XX:","range":"range(0, max_intx)","type":"intx"},
{"availability":"develop","component":"c2","defaultValue":"true","definedIn":"share/opto/c2_globals.hpp","description":"Set 24-bit FPU mode on a per-compile basis","name":"Use24BitFPMode","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"c2","defaultValue":"true","definedIn":"share/opto/c2_globals.hpp","description":"use FP instructions that produce 24-bit precise results","name":"Use24BitFP","prefix":"-XX:","type":"bool"},
{"availability":"develop","defaultValue":"0","definedIn":"os/aix/globals_aix.hpp","description":"4K/64K page allocation threshold.","name":"Use64KPagesThreshold","os":"aix","prefix":"-XX:","type":"uintx"},
{"availability":"product","defaultValue":"true","definedIn":"os/aix/globals_aix.hpp","description":"Use 64K pages if available.","name":"Use64KPages","os":"aix","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Use intrinsics for the paralleled version of AES/CTR crypto","name":"UseAESCTRIntrinsics","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Use intrinsics for AES versions of crypto","name":"UseAESIntrinsics","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Control whether AES instructions are used when available","name":"UseAES","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Exit the VM if any of the AOT libraries has invalid config","name":"UseAOTStrictLoading","prefix":"-XX:","type":"bool"},
{"availability":"experimental","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Use AOT compiled files","name":"UseAOT","prefix":"-XX:","type":"bool"},
{"availability":"product","cpu":"x86","defaultValue":"3","definedIn":"cpu/x86/globals_x86.hpp","description":"Highest supported AVX instructions set on x86/x64","name":"UseAVX","prefix":"-XX:","range":"range(0, 99)","type":"intx"},
{"availability":"product","component":"gc","defaultValue":"false","definedIn":"share/gc/shared/gc_globals.hpp","deprecated":"","description":"Allow young-old boundary to move","expired":"16","name":"UseAdaptiveGCBoundary","obsoleted":"15","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"gc","defaultValue":"true","definedIn":"share/gc/shared/gc_globals.hpp","description":"Use adaptive young-old sizing policies at major collections","name":"UseAdaptiveGenerationSizePolicyAtMajorCollection","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"gc","defaultValue":"true","definedIn":"share/gc/shared/gc_globals.hpp","description":"Use adaptive young-old sizing policies at minor collections","name":"UseAdaptiveGenerationSizePolicyAtMinorCollection","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","description":"Enable adaptive chunk sizing for NUMA","name":"UseAdaptiveNUMAChunkSizing","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"gc","defaultValue":"true","definedIn":"share/gc/shared/gc_globals.hpp","description":"Adaptive size decays the major cost for long major intervals","name":"UseAdaptiveSizeDecayMajorGCCost","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"gc","defaultValue":"true","definedIn":"share/gc/shared/gc_globals.hpp","description":"Use adaptive minimum footprint as a goal","name":"UseAdaptiveSizePolicyFootprintGoal","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"gc","defaultValue":"false","definedIn":"share/gc/shared/gc_globals.hpp","description":"Include statistics from System.gc() for adaptive size policy","name":"UseAdaptiveSizePolicyWithSystemGC","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"gc","defaultValue":"true","definedIn":"share/gc/shared/gc_globals.hpp","description":"Use adaptive generation sizing policies","name":"UseAdaptiveSizePolicy","prefix":"-XX:","type":"bool"},
{"availability":"product","cpu":"x86","defaultValue":"false","definedIn":"cpu/x86/globals_x86.hpp","description":"Use '0F 1F [addr]' NOP instructions on x86 cpus","name":"UseAddressNop","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"use intrinsics for java.util.zip.Adler32","name":"UseAdler32Intrinsics","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Use intrinsics for java.util.Base64","name":"UseBASE64Intrinsics","prefix":"-XX:","type":"bool"},
{"availability":"product","cpu":"x86","defaultValue":"false","definedIn":"cpu/x86/globals_x86.hpp","description":"Use BMI1 instructions","name":"UseBMI1Instructions","prefix":"-XX:","type":"bool"},
{"availability":"product","cpu":"x86","defaultValue":"false","definedIn":"cpu/x86/globals_x86.hpp","description":"Use BMI2 instructions","name":"UseBMI2Instructions","prefix":"-XX:","type":"bool"},
{"availability":"product","cpu":"aarch64","defaultValue":"false","definedIn":"cpu/aarch64/globals_aarch64.hpp","deprecated":"","description":"Use memory barriers to implement volatile accesses","expired":"16","name":"UseBarriersForVolatile","obsoleted":"15","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","deprecated":"15","description":"Enable biased locking in JVM","expired":"19","name":"UseBiasedLocking","obsoleted":"18","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"c2","defaultValue":"true","definedIn":"share/opto/c2_globals.hpp","description":"Profiling based inlining for two receivers","name":"UseBimorphicInlining","prefix":"-XX:","type":"bool"},
{"availability":"product","cpu":"sparc","defaultValue":"false","definedIn":"cpu/sparc/globals_sparc.hpp","description":"Use special cpu instructions for block copy","name":"UseBlockCopy","prefix":"-XX:","type":"bool"},
{"availability":"product","cpu":"aarch64","defaultValue":"true","definedIn":"cpu/aarch64/globals_aarch64.hpp","description":"Use DC ZVA for block zeroing","name":"UseBlockZeroing","prefix":"-XX:","type":"bool"},
{"availability":"product","cpu":"sparc","defaultValue":"false","definedIn":"cpu/sparc/globals_sparc.hpp","description":"Use special cpu instructions for block zeroing","name":"UseBlockZeroing","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"runtime","defaultValue":"1","definedIn":"share/runtime/globals.hpp","description":"0: when resolving InDy or ConDy, force all BSM arguments to be \nresolved before the bootstrap method is called; 1: when a BSM \nthat may accept a BootstrapCallInfo is detected, use that API \nto pass BSM arguments, which allows the BSM to delay their \nresolution; 2+: stress test the BCI API by calling more BSMs \nvia that API, instead of with the eagerly-resolved array.","name":"UseBootstrapCallInfo","prefix":"-XX:","type":"int"},
{"availability":"product","defaultValue":"true","definedIn":"os/bsd/globals_bsd.hpp","deprecated":"","description":"enable fast Bsd Posix clocks where available","expired":"17","name":"UseBsdPosixThreadCPUClocks","obsoleted":"16","os":"bsd","prefix":"-XX:","type":"bool"},
{"availability":"product","cpu":"s390","defaultValue":"true","definedIn":"cpu/s390/globals_s390.hpp","description":"Use byte reverse instruction.","name":"UseByteReverseInstruction","prefix":"-XX:","type":"bool"},
{"availability":"product","cpu":"ppc","defaultValue":"false","definedIn":"cpu/ppc/globals_ppc.hpp","description":"Use byte reverse instructions.","name":"UseByteReverseInstructions","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"c1","defaultValue":"true","definedIn":"share/c1/c1_globals.hpp","description":"Turn on C1 optimizations","name":"UseC1Optimizations","prefix":"-XX:","type":"bool"},
{"availability":"develop","cpu":"sparc","defaultValue":"false","definedIn":"cpu/sparc/globals_sparc.hpp","description":"Do not use swap instructions, but only CAS (in a loop) on SPARC","name":"UseCASForSwap","prefix":"-XX:","type":"bool"},
{"availability":"product","cpu":"sparc","defaultValue":"false","definedIn":"cpu/sparc/globals_sparc.hpp","description":"Use compare and branch instruction on SPARC","name":"UseCBCond","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","description":"Enable CHA","name":"UseCHA","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"aarch64","defaultValue":"false","definedIn":"cpu/aarch64/c2_globals_aarch64.hpp","name":"UseCISCSpill","prefix":"-XX:","type":"bool"},
{"availability":"develop_pd","component":"c2","definedIn":"share/opto/c2_globals.hpp","description":"Use ADLC supplied cisc instructions during allocation","name":"UseCISCSpill","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"ppc","defaultValue":"false","definedIn":"cpu/ppc/c2_globals_ppc.hpp","name":"UseCISCSpill","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"s390","defaultValue":"true","definedIn":"cpu/s390/c2_globals_s390.hpp","name":"UseCISCSpill","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"sparc","defaultValue":"false","definedIn":"cpu/sparc/c2_globals_sparc.hpp","name":"UseCISCSpill","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"x86","defaultValue":"true","definedIn":"cpu/x86/c2_globals_x86.hpp","name":"UseCISCSpill","prefix":"-XX:","type":"bool"},
{"availability":"product","cpu":"x86","defaultValue":"false","definedIn":"cpu/x86/globals_x86.hpp","description":"Control whether CLMUL instructions can be used on x86/x64","name":"UseCLMUL","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"gc","defaultValue":"true","definedIn":"share/gc/cms/cms_globals.hpp","deprecated":"","description":"Use CMS best fit allocation strategy","expired":"15","name":"UseCMSBestFit","obsoleted":"14","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"gc","defaultValue":"false","definedIn":"share/gc/cms/cms_globals.hpp","deprecated":"","description":"Only use occupancy as a criterion for starting a CMS collection","expired":"15","name":"UseCMSInitiatingOccupancyOnly","obsoleted":"14","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"c2","defaultValue":"false","definedIn":"share/opto/c2_globals.hpp","description":"Use CMove (scalar and vector) ignoring profitability test.","name":"UseCMoveUnconditionally","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"use intrinsics for java.util.zip.CRC32C","name":"UseCRC32CIntrinsics","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"use intrinsics for java.util.zip.CRC32","name":"UseCRC32Intrinsics","prefix":"-XX:","type":"bool"},
{"availability":"product","cpu":"aarch64","defaultValue":"false","definedIn":"cpu/aarch64/globals_aarch64.hpp","description":"Use CRC32 instructions for CRC32 computation","name":"UseCRC32","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"c2","defaultValue":"false","definedIn":"share/opto/c2_globals.hpp","description":"Enables intrinsification of java.lang.Character functions","name":"UseCharacterCompareIntrinsics","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","description":"Insert counter to detect warm methods","name":"UseCodeAging","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","description":"Remove cold/old nmethods from the code cache","name":"UseCodeCacheFlushing","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","description":"Use Just-In-Time compilation","name":"UseCompiler","prefix":"-XX:","type":"bool"},
{"availability":"lp64_product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Use 32-bit class pointers in 64-bit VM. \nlp64_product means flag is always constant in 32 bit VM","name":"UseCompressedClassPointers","prefix":"-XX:","type":"bool"},
{"availability":"lp64_product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Use 32-bit object references in 64-bit VM. \nlp64_product means flag is always constant in 32 bit VM","name":"UseCompressedOops","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"gc","defaultValue":"false","definedIn":"share/gc/shared/gc_globals.hpp","deprecated":"","description":"Use Concurrent Mark-Sweep GC in the old generation","expired":"15","name":"UseConcMarkSweepGC","obsoleted":"14","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"gc","defaultValue":"false","definedIn":"share/gc/shared/gc_globals.hpp","description":"Check for already marked card before updating card table","name":"UseCondCardMark","prefix":"-XX:","type":"bool"},
{"availability":"product","defaultValue":"true","definedIn":"os/linux/globals_linux.hpp","description":"Enable detection and runtime container configuration support","name":"UseContainerSupport","os":"linux","prefix":"-XX:","type":"bool"},
{"availability":"product","cpu":"x86","defaultValue":"false","definedIn":"cpu/x86/globals_x86.hpp","description":"Use count leading zeros instruction","name":"UseCountLeadingZerosInstruction","prefix":"-XX:","type":"bool"},
{"availability":"product","cpu":"ppc","defaultValue":"true","definedIn":"cpu/ppc/globals_ppc.hpp","description":"Use count leading zeros instructions.","name":"UseCountLeadingZerosInstructionsPPC64","prefix":"-XX:","type":"bool"},
{"availability":"product","cpu":"x86","defaultValue":"false","definedIn":"cpu/x86/globals_x86.hpp","description":"Use count trailing zeros instruction","name":"UseCountTrailingZerosInstruction","prefix":"-XX:","type":"bool"},
{"availability":"product","cpu":"ppc","defaultValue":"false","definedIn":"cpu/ppc/globals_ppc.hpp","description":"Use count trailing zeros instructions.","name":"UseCountTrailingZerosInstructionsPPC64","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"c2","defaultValue":"false","definedIn":"share/opto/c2_globals.hpp","description":"Force counted loops to keep a safepoint","name":"UseCountedLoopSafepoints","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","description":"Adjust recompilation counters","name":"UseCounterDecay","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","defaultValue":"false","definedIn":"os/linux/globals_linux.hpp","description":"Use CPU_ALLOC code path in os::active_processor_count","name":"UseCpuAllocPath","os":"linux","prefix":"-XX:","type":"bool"},
{"availability":"experimental","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"ConcurrentMarkSweep thread runs at critical scheduling priority","name":"UseCriticalCMSThreadPriority","prefix":"-XX:","type":"bool"},
{"availability":"experimental","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Compiler thread(s) run at critical scheduling priority","name":"UseCriticalCompilerThreadPriority","prefix":"-XX:","type":"bool"},
{"availability":"experimental","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Java thread priority 10 maps to critical scheduling priority","name":"UseCriticalJavaThreadPriority","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","description":"Use detached threads that are recycled upon termination \n(for Solaris only)","name":"UseDetachedThreads","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"c2","defaultValue":"true","definedIn":"share/opto/c2_globals.hpp","description":"Use combined DivMod instruction if available","name":"UseDivMod","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","description":"Dynamically choose the number of parallel compiler threads","name":"UseDynamicNumberOfCompilerThreads","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"gc","defaultValue":"true","definedIn":"share/gc/shared/gc_globals.hpp","description":"Dynamically choose the number of threads up to a maximum of \nParallelGCThreads parallel collectors will use for garbage \ncollection work","name":"UseDynamicNumberOfGCThreads","prefix":"-XX:","type":"bool"},
{"availability":"experimental","component":"gc","defaultValue":"false","definedIn":"share/gc/shared/gc_globals.hpp","description":"Use the Epsilon (no-op) garbage collector","name":"UseEpsilonGC","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"c2","defaultValue":"true","definedIn":"share/opto/c2_globals.hpp","description":"Use exact types to eliminate array store checks and v-calls","name":"UseExactTypes","prefix":"-XX:","type":"bool"},
{"availability":"product","defaultValue":"false","definedIn":"os/aix/globals_aix.hpp","description":"Explicit commit for virtual memory.","name":"UseExplicitCommit","os":"aix","prefix":"-XX:","type":"bool"},
{"availability":"product","defaultValue":"true","definedIn":"os/solaris/globals_solaris.hpp","description":"Enable workaround for limitations of stdio FILE structure","name":"UseExtendedFileIO","os":"solaris","prefix":"-XX:","type":"bool"},
{"availability":"product","cpu":"ppc","defaultValue":"false","definedIn":"cpu/ppc/globals_ppc.hpp","description":"Use extended versions of load-and-reserve instructions.","name":"UseExtendedLoadAndReserveInstructionsPPC64","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Control whether FMA instructions are used when available","name":"UseFMA","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"c2","defaultValue":"false","definedIn":"share/opto/c2_globals.hpp","description":"Spill integer registers to FPU instead of stack when possible","name":"UseFPUForSpilling","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Tell whether the VM should use system time or a fake timer","name":"UseFakeTimers","prefix":"-XX:","type":"bool"},
{"availability":"product","cpu":"zero","defaultValue":"true","definedIn":"cpu/zero/globals_zero.hpp","description":"Use fast method entry code for accessor methods","name":"UseFastAccessorMethods","prefix":"-XX:","type":"bool"},
{"availability":"product","cpu":"zero","defaultValue":"true","definedIn":"cpu/zero/globals_zero.hpp","description":"Use fast method entry code for empty methods","name":"UseFastEmptyMethods","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","description":"Use optimized versions of Get<Primitive>Field","name":"UseFastJNIAccessors","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"c1","defaultValue":"true","definedIn":"share/c1/c1_globals.hpp","description":"Use fast inlined locking code","name":"UseFastLocking","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"c1","defaultValue":"true","definedIn":"share/c1/c1_globals.hpp","description":"Use fast inlined instance allocation","name":"UseFastNewInstance","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"c1","defaultValue":"true","definedIn":"share/c1/c1_globals.hpp","description":"Use fast inlined object array allocation","name":"UseFastNewObjectArray","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"c1","defaultValue":"true","definedIn":"share/c1/c1_globals.hpp","description":"Use fast inlined type array allocation","name":"UseFastNewTypeArray","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","description":"Use fast signature handlers for native calls","name":"UseFastSignatureHandlers","prefix":"-XX:","type":"bool"},
{"availability":"product","cpu":"x86","defaultValue":"false","definedIn":"cpu/x86/globals_x86.hpp","description":"Use fast-string operation for zeroing: rep stosb","name":"UseFastStosb","prefix":"-XX:","type":"bool"},
{"availability":"experimental","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Use platform unstable time where supported for timestamps only","name":"UseFastUnorderedTimeStamps","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"gc","defaultValue":"false","definedIn":"share/gc/shared/gc_globals.hpp","description":"Use the Garbage-First garbage collector","name":"UseG1GC","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"gc","defaultValue":"true","definedIn":"share/gc/shared/gc_globals.hpp","description":"Use policy to limit of proportion of time spent in GC \nbefore an OutOfMemory error is thrown","name":"UseGCOverheadLimit","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"gc","defaultValue":"false","definedIn":"share/gc/shared/gc_globals.hpp","deprecated":"","description":"Use worker affinity when asking for GCTasks","expired":"16","name":"UseGCTaskAffinity","obsoleted":"14","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Use intrinsics for GHASH versions of crypto","name":"UseGHASHIntrinsics","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"c1","defaultValue":"true","definedIn":"share/c1/c1_globals.hpp","description":"Use Global Value Numbering (separate phase)","name":"UseGlobalValueNumbering","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"use heavyweight instead of lightweight Java monitors","name":"UseHeavyMonitors","prefix":"-XX:","type":"bool"},
{"availability":"product","defaultValue":"false","definedIn":"os/bsd/globals_bsd.hpp","deprecated":"","description":"Use MAP_HUGETLB for large pages","expired":"13","name":"UseHugeTLBFS","obsoleted":"12","os":"bsd","prefix":"-XX:","type":"bool"},
{"availability":"product","defaultValue":"false","definedIn":"os/linux/globals_linux.hpp","deprecated":"","description":"Use MAP_HUGETLB for large pages","expired":"13","name":"UseHugeTLBFS","obsoleted":"12","os":"linux","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"c2","defaultValue":"true","definedIn":"share/opto/c2_globals.hpp","deprecated":"","description":"Mark well-known stable fields as such (e.g. String.value)","expired":"14","name":"UseImplicitStableValues","obsoleted":"13","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","cpu":"x86","defaultValue":"true","definedIn":"cpu/x86/globals_x86.hpp","description":"Use INC, DEC instructions on x86","name":"UseIncDec","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","description":"Use Inline Caches for virtual calls","name":"UseInlineCaches","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"c2","defaultValue":"true","definedIn":"share/opto/c2_globals.hpp","description":"Carry inline depth of profile point with speculative type \nand give priority to profiling from lower inline depth","name":"UseInlineDepthForSpeculativeTypes","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","description":"Use interpreter for non-compiled methods","name":"UseInterpreter","prefix":"-XX:","type":"bool"},
{"availability":"experimental","component":"jvmci","defaultValue":"false","definedIn":"share/jvmci/jvmci_globals.hpp","description":"Use JVMCI as the default compiler","name":"UseJVMCICompiler","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"c2","defaultValue":"true","definedIn":"share/opto/c2_globals.hpp","description":"Use JumpTables instead of a binary search tree for switches","name":"UseJumpTables","prefix":"-XX:","type":"bool"},
{"availability":"product","cpu":"aarch64","defaultValue":"false","definedIn":"cpu/aarch64/globals_aarch64.hpp","description":"Use LSE instructions","name":"UseLSE","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","deprecated":"","description":"Use LWP-based instead of libthread-based synchronization \n(SPARC only)","expired":"16","name":"UseLWPSynchronization","obsoleted":"15","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","deprecated":"15","description":"Use large page memory in metaspace. \nOnly used if UseLargePages is enabled.","expired":"17","name":"UseLargePagesInMetaspace","obsoleted":"16","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","defaultValue":"false","definedIn":"os/aix/globals_aix.hpp","name":"UseLargePagesIndividualAllocation","os":"aix","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","defaultValue":"false","definedIn":"os/bsd/globals_bsd.hpp","name":"UseLargePagesIndividualAllocation","os":"bsd","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","defaultValue":"false","definedIn":"os/linux/globals_linux.hpp","name":"UseLargePagesIndividualAllocation","os":"linux","prefix":"-XX:","type":"bool"},
{"availability":"product_pd","component":"runtime","definedIn":"share/runtime/globals.hpp","description":"Allocate large pages individually for better affinity","name":"UseLargePagesIndividualAllocation","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","defaultValue":"false","definedIn":"os/solaris/globals_solaris.hpp","name":"UseLargePagesIndividualAllocation","os":"solaris","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","defaultValue":"true","definedIn":"os/windows/globals_windows.hpp","name":"UseLargePagesIndividualAllocation","os":"windows","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","defaultValue":"false","definedIn":"os/aix/globals_aix.hpp","name":"UseLargePages","os":"aix","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","defaultValue":"false","definedIn":"os/bsd/globals_bsd.hpp","name":"UseLargePages","os":"bsd","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","defaultValue":"false","definedIn":"os/linux/globals_linux.hpp","name":"UseLargePages","os":"linux","prefix":"-XX:","type":"bool"},
{"availability":"product_pd","component":"runtime","definedIn":"share/runtime/globals.hpp","description":"Use large page memory","name":"UseLargePages","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","defaultValue":"true","definedIn":"os/solaris/globals_solaris.hpp","name":"UseLargePages","os":"solaris","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","defaultValue":"false","definedIn":"os/windows/globals_windows.hpp","name":"UseLargePages","os":"windows","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Use the original JNI name escaping scheme","name":"UseLegacyJNINameEscaping","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","cpu":"x86","defaultValue":"true","definedIn":"cpu/x86/globals_x86.hpp","description":"Use Libm Intrinsics","name":"UseLibmIntrinsic","prefix":"-XX:","type":"bool"},
{"availability":"product","defaultValue":"true","definedIn":"os/linux/globals_linux.hpp","description":"enable fast Linux Posix clocks where available","name":"UseLinuxPosixThreadCPUClocks","os":"linux","prefix":"-XX:","type":"bool"},
{"availability":"product","cpu":"ppc","defaultValue":"false","definedIn":"cpu/ppc/globals_ppc.hpp","description":"Use load instructions for stack banging.","name":"UseLoadInstructionsForStackBangingPPC64","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"c1","defaultValue":"true","definedIn":"share/c1/c1_globals.hpp","description":"Use Local Value Numbering (embedded in GraphBuilder)","name":"UseLocalValueNumbering","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","description":"Increment invocation counter on backward branch","name":"UseLoopCounter","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"c1","defaultValue":"true","definedIn":"share/c1/c1_globals.hpp","description":"Simple loop invariant code motion for short loops during GVN","name":"UseLoopInvariantCodeMotion","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"c2","defaultValue":"true","definedIn":"share/opto/c2_globals.hpp","description":"Generate a predicate to select fast/slow loop versions","name":"UseLoopPredicate","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","description":"Generate Safepoint nodes in every loop","name":"UseLoopSafepoints","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Use intrinsics for MD5 crypto hash function","name":"UseMD5Intrinsics","prefix":"-XX:","type":"bool"},
{"availability":"product","cpu":"sparc","defaultValue":"false","definedIn":"cpu/sparc/globals_sparc.hpp","description":"Use multi-precision multiply instruction (mpmul) on SPARC","name":"UseMPMUL","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Use only malloc/free for allocation (no resource area/arena)","name":"UseMallocOnly","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"c2","defaultValue":"true","definedIn":"share/opto/c2_globals.hpp","description":"Enables intrinsification of various java.lang.Math functions","name":"UseMathExactIntrinsics","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"gc","defaultValue":"true","definedIn":"share/gc/parallel/parallel_globals.hpp","description":"Use maximum compaction in the Parallel Old garbage collector \nfor a system GC","name":"UseMaximumCompactionOnSystemGC","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"aarch64","defaultValue":"true","definedIn":"cpu/aarch64/globals_aarch64.hpp","deprecated":"10","expired":"","name":"UseMembar","obsoleted":"12","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"arm","defaultValue":"true","definedIn":"cpu/arm/globals_arm.hpp","deprecated":"10","expired":"","name":"UseMembar","obsoleted":"12","prefix":"-XX:","type":"bool"},
{"availability":"product_pd","component":"runtime","definedIn":"share/runtime/globals.hpp","deprecated":"10","description":"(Unstable) Issues membars on thread state transitions","expired":"","name":"UseMembar","obsoleted":"12","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"ppc","defaultValue":"true","definedIn":"cpu/ppc/globals_ppc.hpp","deprecated":"10","expired":"","name":"UseMembar","obsoleted":"12","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"s390","defaultValue":"true","definedIn":"cpu/s390/globals_s390.hpp","deprecated":"10","expired":"","name":"UseMembar","obsoleted":"12","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"sparc","defaultValue":"true","definedIn":"cpu/sparc/globals_sparc.hpp","deprecated":"10","expired":"","name":"UseMembar","obsoleted":"12","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"x86","defaultValue":"true","definedIn":"cpu/x86/globals_x86.hpp","deprecated":"10","expired":"","name":"UseMembar","obsoleted":"12","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"zero","defaultValue":"true","definedIn":"cpu/zero/globals_zero.hpp","deprecated":"10","expired":"","name":"UseMembar","obsoleted":"12","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"c2","defaultValue":"false","definedIn":"share/opto/c2_globals.hpp","description":"Enables intrinsification of BigInteger.montgomeryMultiply()","name":"UseMontgomeryMultiplyIntrinsic","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"c2","defaultValue":"false","definedIn":"share/opto/c2_globals.hpp","description":"Enables intrinsification of BigInteger.montgomerySquare()","name":"UseMontgomerySquareIntrinsic","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"c2","defaultValue":"false","definedIn":"share/opto/c2_globals.hpp","description":"Enables intrinsification of BigInteger.mulAdd()","name":"UseMulAddIntrinsic","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"c2","defaultValue":"false","definedIn":"share/opto/c2_globals.hpp","description":"Enables intrinsification of BigInteger.multiplyToLen()","name":"UseMultiplyToLenIntrinsic","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Interleave memory across NUMA nodes if available","name":"UseNUMAInterleaving","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Use NUMA if available","name":"UseNUMA","prefix":"-XX:","type":"bool"},
{"availability":"product","cpu":"aarch64","defaultValue":"false","definedIn":"cpu/aarch64/globals_aarch64.hpp","description":"Use Neon for CRC32 computation","name":"UseNeon","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Testing Only: Use the new version while testing","name":"UseNewCode2","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Testing Only: Use the new version while testing","name":"UseNewCode3","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Testing Only: Use the new version while testing","name":"UseNewCode","prefix":"-XX:","type":"bool"},
{"availability":"product","cpu":"x86","defaultValue":"false","definedIn":"cpu/x86/globals_x86.hpp","description":"Use optimized bitwise shift left","name":"UseNewLongLShift","prefix":"-XX:","type":"bool"},
{"availability":"product","cpu":"sparc","defaultValue":"false","definedIn":"cpu/sparc/globals_sparc.hpp","description":"Use Niagara-efficient instruction subset","name":"UseNiagaraInstrs","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","defaultValue":"false","definedIn":"os/aix/globals_aix.hpp","name":"UseOSErrorReporting","os":"aix","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","defaultValue":"false","definedIn":"os/bsd/globals_bsd.hpp","name":"UseOSErrorReporting","os":"bsd","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","defaultValue":"false","definedIn":"os/linux/globals_linux.hpp","name":"UseOSErrorReporting","os":"linux","prefix":"-XX:","type":"bool"},
{"availability":"product_pd","component":"runtime","definedIn":"share/runtime/globals.hpp","description":"Let VM fatal error propagate to the OS (ie. WER on Windows)","name":"UseOSErrorReporting","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","defaultValue":"false","definedIn":"os/solaris/globals_solaris.hpp","name":"UseOSErrorReporting","os":"solaris","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","comment":"// for now.","defaultValue":"false","definedIn":"os/windows/globals_windows.hpp","name":"UseOSErrorReporting","os":"windows","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"aarch64","defaultValue":"true","definedIn":"cpu/aarch64/c1_globals_aarch64.hpp","name":"UseOnStackReplacement","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"arm","defaultValue":"true","definedIn":"cpu/arm/c2_globals_arm.hpp","name":"UseOnStackReplacement","prefix":"-XX:","type":"bool"},
{"availability":"product_pd","component":"runtime","definedIn":"share/runtime/globals.hpp","description":"Use on stack replacement, calls runtime if invoc. counter \noverflows in loop","name":"UseOnStackReplacement","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"ppc","defaultValue":"true","definedIn":"cpu/ppc/c1_globals_ppc.hpp","name":"UseOnStackReplacement","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"s390","defaultValue":"true","definedIn":"cpu/s390/c2_globals_s390.hpp","name":"UseOnStackReplacement","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"sparc","defaultValue":"true","definedIn":"cpu/sparc/c1_globals_sparc.hpp","name":"UseOnStackReplacement","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"x86","defaultValue":"true","definedIn":"cpu/x86/c1_globals_x86.hpp","name":"UseOnStackReplacement","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"c2","defaultValue":"true","definedIn":"share/opto/c2_globals.hpp","description":"Don't use BimorphicInlining if can't inline a second method","name":"UseOnlyInlinedBimorphic","prefix":"-XX:","type":"bool"},
{"availability":"product","defaultValue":"false","definedIn":"os/bsd/globals_bsd.hpp","deprecated":"","description":"enable support for Oprofile profiler","expired":"17","name":"UseOprofile","obsoleted":"16","os":"bsd","prefix":"-XX:","type":"bool"},
{"availability":"product","defaultValue":"false","definedIn":"os/linux/globals_linux.hpp","deprecated":"","description":"enable support for Oprofile profiler","expired":"17","name":"UseOprofile","obsoleted":"16","os":"linux","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"c2","defaultValue":"true","definedIn":"share/opto/c2_globals.hpp","deprecated":"15","description":"Generate biased locking code in C2 ideal graph","expired":"19","name":"UseOptoBiasInlining","obsoleted":"18","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"gc","defaultValue":"true","definedIn":"share/gc/shared/gc_globals.hpp","description":"Use adaptive survivor sizing policies","name":"UsePSAdaptiveSurvivorSizePolicy","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"gc","defaultValue":"false","definedIn":"share/gc/shared/gc_globals.hpp","description":"Use the Parallel Scavenge garbage collector","name":"UseParallelGC","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"gc","defaultValue":"false","definedIn":"share/gc/shared/gc_globals.hpp","deprecated":"14","description":"Use the Parallel Old garbage collector","expired":"16","name":"UseParallelOldGC","obsoleted":"15","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","description":"Flag to disable jvmstat instrumentation for performance testing \nand problem isolation purposes","name":"UsePerfData","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Use population count instruction","name":"UsePopCountInstruction","prefix":"-XX:","type":"bool"},
{"availability":"product","cpu":"ppc","defaultValue":"false","definedIn":"cpu/ppc/globals_ppc.hpp","description":"Use Power6 Scheduler.","name":"UsePower6SchedulerPPC64","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","description":"Enable the security JVM functions","name":"UsePrivilegedStack","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"c2","defaultValue":"true","definedIn":"share/opto/c2_globals.hpp","description":"move predicates out of loops based on profiling data","name":"UseProfiledLoopPredicate","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Use pthread-based instead of libthread-based synchronization \n(SPARC only)","name":"UsePthreads","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"c2","defaultValue":"false","definedIn":"share/opto/c2_globals.hpp","deprecated":"","description":"Use Sparc RDPC instruction for the constant table base.","expired":"17","name":"UseRDPCForConstantTableBase","obsoleted":"16","prefix":"-XX:","type":"bool"},
{"availability":"product","cpu":"ppc","defaultValue":"false","definedIn":"cpu/ppc/globals_ppc.hpp","description":"Perform deopt and recompilation based on RTM abort ratio","name":"UseRTMDeopt","prefix":"-XX:","type":"bool"},
{"availability":"product","cpu":"x86","defaultValue":"false","definedIn":"cpu/x86/globals_x86.hpp","description":"Perform deopt and recompilation based on RTM abort ratio","name":"UseRTMDeopt","prefix":"-XX:","type":"bool"},
{"availability":"experimental","cpu":"ppc","defaultValue":"false","definedIn":"cpu/ppc/globals_ppc.hpp","description":"Enable RTM lock eliding for stack locks in compiled code","name":"UseRTMForStackLocks","prefix":"-XX:","type":"bool"},
{"availability":"experimental","cpu":"x86","defaultValue":"false","definedIn":"cpu/x86/globals_x86.hpp","description":"Enable RTM lock eliding for stack locks in compiled code","name":"UseRTMForStackLocks","prefix":"-XX:","type":"bool"},
{"availability":"product","cpu":"ppc","defaultValue":"false","definedIn":"cpu/ppc/globals_ppc.hpp","description":"Enable RTM lock eliding for inflated locks in compiled code","name":"UseRTMLocking","prefix":"-XX:","type":"bool"},
{"availability":"product","cpu":"x86","defaultValue":"false","definedIn":"cpu/x86/globals_x86.hpp","description":"Enable RTM lock eliding for inflated locks in compiled code","name":"UseRTMLocking","prefix":"-XX:","type":"bool"},
{"availability":"experimental","cpu":"ppc","defaultValue":"true","definedIn":"cpu/ppc/globals_ppc.hpp","description":"Use RTM Xend instead of Xabort when lock busy","name":"UseRTMXendForLockBusy","prefix":"-XX:","type":"bool"},
{"availability":"experimental","cpu":"x86","defaultValue":"true","definedIn":"cpu/x86/globals_x86.hpp","description":"Use RTM Xend instead of Xabort when lock busy","name":"UseRTMXendForLockBusy","prefix":"-XX:","type":"bool"},
{"availability":"product","cpu":"ppc","defaultValue":"true","definedIn":"cpu/ppc/globals_ppc.hpp","description":"Use rotate and mask instructions.","name":"UseRotateAndMaskInstructionsPPC64","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Use intrinsics for SHA-1 crypto hash function. \nRequires that UseSHA is enabled.","name":"UseSHA1Intrinsics","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Use intrinsics for SHA-224 and SHA-256 crypto hash functions. \nRequires that UseSHA is enabled.","name":"UseSHA256Intrinsics","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Use intrinsics for SHA-384 and SHA-512 crypto hash functions. \nRequires that UseSHA is enabled.","name":"UseSHA512Intrinsics","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Control whether SHA instructions are used when available","name":"UseSHA","prefix":"-XX:","type":"bool"},
{"availability":"product","defaultValue":"false","definedIn":"os/bsd/globals_bsd.hpp","deprecated":"","description":"Use SYSV shared memory for large pages","expired":"13","name":"UseSHM","obsoleted":"12","os":"bsd","prefix":"-XX:","type":"bool"},
{"availability":"product","defaultValue":"false","definedIn":"os/linux/globals_linux.hpp","deprecated":"","description":"Use SYSV shared memory for large pages","expired":"13","name":"UseSHM","obsoleted":"12","os":"linux","prefix":"-XX:","type":"bool"},
{"availability":"product","cpu":"ppc","defaultValue":"true","definedIn":"cpu/ppc/globals_ppc.hpp","description":"Allow trap instructions that make use of SIGTRAP. Use this to \nswitch off all optimizations requiring SIGTRAP.","name":"UseSIGTRAP","prefix":"-XX:","type":"bool"},
{"availability":"product","cpu":"aarch64","defaultValue":"true","definedIn":"cpu/aarch64/globals_aarch64.hpp","description":"Use SIMD instructions in generated array equals code","name":"UseSIMDForArrayEquals","prefix":"-XX:","type":"bool"},
{"availability":"product","cpu":"aarch64","defaultValue":"false","definedIn":"cpu/aarch64/globals_aarch64.hpp","description":"Use SIMD instructions in generated memory move code","name":"UseSIMDForMemoryOps","prefix":"-XX:","type":"bool"},
{"availability":"product","cpu":"x86","defaultValue":"false","definedIn":"cpu/x86/globals_x86.hpp","description":"SSE4.2 versions of intrinsics","name":"UseSSE42Intrinsics","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"99","definedIn":"share/runtime/globals.hpp","deprecated":"","description":"Highest supported SSE instructions set on x86/x64","expired":"16","name":"UseSSE","obsoleted":"15","prefix":"-XX:","range":"range(0, 99)","type":"intx"},
{"availability":"diagnostic","component":"gc","defaultValue":"true","definedIn":"share/gc/shared/gc_globals.hpp","deprecated":"","description":"Use semaphore synchronization for the GC Threads, \ninstead of synchronization based on mutexes","expired":"17","name":"UseSemaphoreGCThreadsSynchronization","obsoleted":"16","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"gc","defaultValue":"false","definedIn":"share/gc/shared/gc_globals.hpp","description":"Use the Serial garbage collector","name":"UseSerialGC","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","description":"Use shared spaces for metadata","name":"UseSharedSpaces","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","description":"Use signal-chaining to invoke signal handlers installed \nby the application (Solaris & Linux only)","name":"UseSignalChaining","prefix":"-XX:","type":"bool"},
{"availability":"product","cpu":"aarch64","defaultValue":"false","definedIn":"cpu/aarch64/globals_aarch64.hpp","description":"Use simpliest and shortest implementation for array equals","name":"UseSimpleArrayEquals","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"c1","defaultValue":"false","definedIn":"share/c1/c1_globals.hpp","description":"For debugging: test slow cases by always using them","name":"UseSlowPath","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"c2","defaultValue":"false","definedIn":"share/opto/c2_globals.hpp","description":"Enables intrinsification of BigInteger.squareToLen()","name":"UseSquareToLenIntrinsic","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","description":"use stack banging for stack overflow checks (required for \nproper StackOverflow handling; disable only to measure cost \nof stackbanging)","name":"UseStackBanging","prefix":"-XX:","type":"bool"},
{"availability":"product","cpu":"ppc","defaultValue":"false","definedIn":"cpu/ppc/globals_ppc.hpp","description":"Use static branch prediction hints for uncommon paths.","name":"UseStaticBranchPredictionForUncommonPathsPPC64","prefix":"-XX:","type":"bool"},
{"availability":"product","cpu":"ppc","defaultValue":"true","definedIn":"cpu/ppc/globals_ppc.hpp","description":"Use static branch prediction hints in CAS operations.","name":"UseStaticBranchPredictionInCompareAndSwapPPC64","prefix":"-XX:","type":"bool"},
{"availability":"product","cpu":"x86","defaultValue":"true","definedIn":"cpu/x86/globals_x86.hpp","description":"Use store immediate 16-bits value instruction on x86","name":"UseStoreImmI16","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","description":"use strict fp if modifier strictfp is set","name":"UseStrictFP","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Use string deduplication","name":"UseStringDeduplication","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"c2","defaultValue":"true","definedIn":"share/opto/c2_globals.hpp","description":"Use Subword Analysis to set maximum vector size","name":"UseSubwordForMaxVector","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"c2","defaultValue":"true","definedIn":"share/opto/c2_globals.hpp","description":"Transform scalar operations into superword operations","name":"UseSuperWord","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","description":"leverage profiling for table/lookup switch","name":"UseSwitchProfiling","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"aarch64","defaultValue":"true","definedIn":"cpu/aarch64/c1_globals_aarch64.hpp","name":"UseTLAB","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"arm","defaultValue":"true","definedIn":"cpu/arm/c1_globals_arm.hpp","name":"UseTLAB","prefix":"-XX:","type":"bool"},
{"availability":"product_pd","component":"gc","definedIn":"share/gc/shared/gc_globals.hpp","description":"Use thread-local object allocation","name":"UseTLAB","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","name":"UseTLAB","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"ppc","defaultValue":"true","definedIn":"cpu/ppc/c1_globals_ppc.hpp","name":"UseTLAB","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"s390","defaultValue":"true","definedIn":"cpu/s390/c2_globals_s390.hpp","name":"UseTLAB","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"sparc","defaultValue":"true","definedIn":"cpu/sparc/c1_globals_sparc.hpp","name":"UseTLAB","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"x86","defaultValue":"true","definedIn":"cpu/x86/c1_globals_x86.hpp","name":"UseTLAB","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"c1","defaultValue":"true","definedIn":"share/c1/c1_globals.hpp","description":"Faster versions of lookup table using ranges","name":"UseTableRanges","prefix":"-XX:","type":"bool"},
{"availability":"product_pd","component":"runtime","definedIn":"share/runtime/globals.hpp","description":"Use native thread priorities","name":"UseThreadPriorities","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","defaultValue":"false","definedIn":"os/solaris/globals_solaris.hpp","name":"UseThreadPriorities","os":"solaris","prefix":"-XX:","type":"bool"},
{"availability":"product","defaultValue":"false","definedIn":"os/linux/globals_linux.hpp","description":"Use MADV_HUGEPAGE for large pages","name":"UseTransparentHugePages","os":"linux","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"aarch64","defaultValue":"false","definedIn":"cpu/aarch64/c1_globals_aarch64.hpp","name":"UseTypeProfile","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"arm","defaultValue":"false","definedIn":"cpu/arm/c1_globals_arm.hpp","name":"UseTypeProfile","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","description":"Check interpreter profile for historically monomorphic calls","name":"UseTypeProfile","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"ppc","defaultValue":"false","definedIn":"cpu/ppc/c1_globals_ppc.hpp","name":"UseTypeProfile","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"s390","defaultValue":"false","definedIn":"cpu/s390/c1_globals_s390.hpp","name":"UseTypeProfile","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"sparc","defaultValue":"false","definedIn":"cpu/sparc/c1_globals_sparc.hpp","name":"UseTypeProfile","prefix":"-XX:","type":"bool"},
{"availability":"define_pd_global","cpu":"x86","defaultValue":"false","definedIn":"cpu/x86/c1_globals_x86.hpp","name":"UseTypeProfile","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"c2","defaultValue":"true","definedIn":"share/opto/c2_globals.hpp","description":"Speculatively propagate types from profiles","name":"UseTypeSpeculation","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Use unaligned memory accesses in Unsafe","name":"UseUnalignedAccesses","prefix":"-XX:","type":"bool"},
{"availability":"product","cpu":"x86","defaultValue":"false","definedIn":"cpu/x86/globals_x86.hpp","description":"Use SSE2 MOVDQU instruction for Arraycopy","name":"UseUnalignedLoadStores","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"c2","defaultValue":"true","definedIn":"share/opto/c2_globals.hpp","description":"Narrow an abstract reference to the unique concrete subclass","name":"UseUniqueSubclasses","prefix":"-XX:","type":"bool"},
{"availability":"product","cpu":"sparc","defaultValue":"99","definedIn":"cpu/sparc/globals_sparc.hpp","description":"Highest supported VIS instructions set on SPARC","name":"UseVIS","prefix":"-XX:","range":"range(0, 99)","type":"intx"},
{"availability":"product","component":"c2","defaultValue":"false","definedIn":"share/opto/c2_globals.hpp","description":"Use Vectorized Cmov","name":"UseVectorCmov","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Enables intrinsification of ArraysSupport.vectorizedMismatch()","name":"UseVectorizedMismatchIntrinsic","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Use SSE2 MOVQ instruction for Arraycopy","name":"UseXMMForArrayCopy","prefix":"-XX:","type":"bool"},
{"availability":"product","cpu":"x86","defaultValue":"false","definedIn":"cpu/x86/globals_x86.hpp","description":"Use XMM/YMM MOVDQU instruction for Object Initialization","name":"UseXMMForObjInit","prefix":"-XX:","type":"bool"},
{"availability":"product","cpu":"x86","defaultValue":"false","definedIn":"cpu/x86/globals_x86.hpp","description":"Use SSE2 CVTDQ2PD instruction to convert Integer to Double","name":"UseXmmI2D","prefix":"-XX:","type":"bool"},
{"availability":"product","cpu":"x86","defaultValue":"false","definedIn":"cpu/x86/globals_x86.hpp","description":"Use SSE2 CVTDQ2PS instruction to convert Integer to Float","name":"UseXmmI2F","prefix":"-XX:","type":"bool"},
{"availability":"product","cpu":"x86","defaultValue":"true","definedIn":"cpu/x86/globals_x86.hpp","description":"Load low part of XMM register and clear upper part","name":"UseXmmLoadAndClearUpper","prefix":"-XX:","type":"bool"},
{"availability":"product","cpu":"x86","defaultValue":"false","definedIn":"cpu/x86/globals_x86.hpp","description":"Copy all XMM register bits when moving value between registers","name":"UseXmmRegToRegMoveAll","prefix":"-XX:","type":"bool"},
{"availability":"experimental","component":"gc","defaultValue":"false","definedIn":"share/gc/shared/gc_globals.hpp","description":"Use the Z garbage collector","name":"UseZGC","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","deprecated":"11","description":"(Solaris only) Give VM thread an extra quanta","expired":"13","name":"VMThreadHintNoPreempt","obsoleted":"12","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"-1","definedIn":"share/runtime/globals.hpp","description":"The native priority at which the VM thread should run \n(-1 means no change)","name":"VMThreadPriority","prefix":"-XX:","range":"range(-1, 127)","type":"intx"},
{"availability":"define_pd_global","cpu":"ppc","defaultValue":"2048","definedIn":"os_cpu/aix_ppc/globals_aix_ppc.hpp","name":"VMThreadStackSize","os":"aix","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"x86","defaultValue":"512","definedIn":"os_cpu/bsd_x86/globals_bsd_x86.hpp","name":"VMThreadStackSize","os":"bsd","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"zero","defaultValue":"512","definedIn":"os_cpu/bsd_zero/globals_bsd_zero.hpp","name":"VMThreadStackSize","os":"bsd","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"aarch64","defaultValue":"2048","definedIn":"os_cpu/linux_aarch64/globals_linux_aarch64.hpp","name":"VMThreadStackSize","os":"linux","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"arm","defaultValue":"512","definedIn":"os_cpu/linux_arm/globals_linux_arm.hpp","name":"VMThreadStackSize","os":"linux","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"ppc","defaultValue":"2048","definedIn":"os_cpu/linux_ppc/globals_linux_ppc.hpp","name":"VMThreadStackSize","os":"linux","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"s390","defaultValue":"1024","definedIn":"os_cpu/linux_s390/globals_linux_s390.hpp","name":"VMThreadStackSize","os":"linux","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"x86","defaultValue":"512","definedIn":"os_cpu/linux_x86/globals_linux_x86.hpp","name":"VMThreadStackSize","os":"linux","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"zero","defaultValue":"512","definedIn":"os_cpu/linux_zero/globals_linux_zero.hpp","name":"VMThreadStackSize","os":"linux","prefix":"-XX:","type":"intx"},
{"availability":"product_pd","component":"runtime","definedIn":"share/runtime/globals.hpp","description":"Non-Java Thread Stack Size (in Kbytes)","name":"VMThreadStackSize","prefix":"-XX:","range":"range(0, max_intx/(1 * K))","type":"intx"},
{"availability":"define_pd_global","cpu":"sparc","defaultValue":"1024","definedIn":"cpu/sparc/globals_sparc.hpp","name":"VMThreadStackSize","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","cpu":"x86","defaultValue":"512","definedIn":"os_cpu/solaris_x86/globals_solaris_x86.hpp","name":"VMThreadStackSize","os":"solaris","prefix":"-XX:","type":"intx"},
{"availability":"define_pd_global","comment":"// 0 => use system default","cpu":"x86","defaultValue":"0","definedIn":"os_cpu/windows_x86/globals_windows_x86.hpp","name":"VMThreadStackSize","os":"windows","prefix":"-XX:","type":"intx"},
{"availability":"product","component":"c1","defaultValue":"11","definedIn":"share/c1/c1_globals.hpp","description":"Initial size of a value map","name":"ValueMapInitialSize","prefix":"-XX:","range":"range(1, NOT_LP64(1*K) LP64_ONLY(32*K))","type":"intx"},
{"availability":"product","component":"c1","defaultValue":"8","definedIn":"share/c1/c1_globals.hpp","description":"maximum size of a loop optimized by global value numbering","name":"ValueMapMaxLoopSize","prefix":"-XX:","range":"range(0, 128)","type":"intx"},
{"availability":"product","component":"c2","defaultValue":"1000","definedIn":"share/opto/c2_globals.hpp","description":"Recursion limit in PhaseMacroExpand::value_from_mem_phi","name":"ValueSearchLimit","prefix":"-XX:","range":"range(0, max_jint)","type":"intx"},
{"availability":"notproduct","component":"gc","defaultValue":"false","definedIn":"share/gc/shared/gc_globals.hpp","description":"Turn on logging for internal VM tests.","name":"VerboseInternalVMTests","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Print additional debugging information from other modes","name":"Verbose","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Verify that activation frame didn't become smaller than its \nminimal size","name":"VerifyActivationFrameSize","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"runtime","defaultValue":"trueInDebug","definedIn":"share/runtime/globals.hpp","description":"Verify that i2c/c2i adapters are called properly","name":"VerifyAdapterCalls","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Verify that the code for shared adapters is the equivalent","name":"VerifyAdapterSharing","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"gc","defaultValue":"false","definedIn":"share/gc/shared/gc_globals.hpp","description":"Verify memory system after GC","name":"VerifyAfterGC","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"c2","defaultValue":"false","definedIn":"share/opto/c2_globals.hpp","description":"perform extra checks on the results of alias analysis","name":"VerifyAliases","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"gc","defaultValue":"trueInDebug","definedIn":"share/gc/shared/gc_globals.hpp","description":"Verify system before exiting","name":"VerifyBeforeExit","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"gc","defaultValue":"false","definedIn":"share/gc/shared/gc_globals.hpp","description":"Verify memory system before GC","name":"VerifyBeforeGC","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Verify memory system before JVMTI iteration","name":"VerifyBeforeIteration","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"gc","defaultValue":"false","definedIn":"share/gc/shared/gc_globals.hpp","description":"Do (expensive) block offset array verification","name":"VerifyBlockOffsetArray","prefix":"-XX:","type":"bool"},
{"availability":"notproduct","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Verify code cache on memory allocation/deallocation","name":"VerifyCodeCache","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Include miscellaneous runtime verifications in nmethod code; \ndefault off because it disturbs nmethod size heuristics","name":"VerifyCompiledCode","prefix":"-XX:","type":"bool"},
{"availability":"notproduct","component":"c2","defaultValue":"true","definedIn":"share/opto/c2_globals.hpp","description":"Verify Connection Graph construction in Escape Analysis","name":"VerifyConnectionGraph","prefix":"-XX:","type":"bool"},
{"availability":"notproduct","component":"c2","defaultValue":"true","definedIn":"share/opto/c2_globals.hpp","description":"Verify the safety of all iterations of Bi-directional Edges","name":"VerifyDUIterators","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"trueInDebug","definedIn":"share/runtime/globals.hpp","description":"Verify the method data pointer during interpreter profiling","name":"VerifyDataPointer","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"trueInDebug","definedIn":"share/runtime/globals.hpp","description":"Exercise and verify the compilation dependency mechanism","name":"VerifyDependencies","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"gc","defaultValue":"false","definedIn":"share/gc/shared/gc_globals.hpp","description":"Verify memory system during GC (between phases)","name":"VerifyDuringGC","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"gc","defaultValue":"false","definedIn":"share/gc/shared/gc_globals.hpp","description":"Verify memory system before executing any Java code \nduring VM initialization","name":"VerifyDuringStartup","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Verify FPU state (check for NaN's, etc.)","name":"VerifyFPU","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"gc","defaultValue":"0","definedIn":"share/gc/shared/gc_globals.hpp","description":"Generation level at which to start +VerifyBefore/AfterGC","name":"VerifyGCLevel","prefix":"-XX:","range":"range(0, 1)","type":"intx"},
{"availability":"diagnostic","component":"gc","defaultValue":"0","definedIn":"share/gc/shared/gc_globals.hpp","description":"GC invoke count where +VerifyBefore/AfterGC kicks in","name":"VerifyGCStartAt","prefix":"-XX:","range":"range(0, max_uintx)","type":"uintx"},
{"availability":"diagnostic","component":"gc","defaultValue":"<br>","definedIn":"share/gc/shared/gc_globals.hpp","description":"GC type(s) to verify when Verify*GC is enabled.\nAvailable types are collector specific.","name":"VerifyGCType","prefix":"-XX:","type":"ccstrlist"},
{"availability":"notproduct","component":"c2","defaultValue":"false","definedIn":"share/opto/c2_globals.hpp","description":"Verify Bi-directional Edges","name":"VerifyGraphEdges","prefix":"-XX:","type":"bool"},
{"availability":"notproduct","component":"c2","defaultValue":"true","definedIn":"share/opto/c2_globals.hpp","description":"Verify the immutability of keys in the VN hash tables","name":"VerifyHashTableKeys","prefix":"-XX:","type":"bool"},
{"availability":"notproduct","component":"c2","defaultValue":"false","definedIn":"share/opto/c2_globals.hpp","description":"Verify that tracked dead ideal node count is accurate","name":"VerifyIdealNodeCount","prefix":"-XX:","type":"bool"},
{"availability":"develop","cpu":"arm","defaultValue":"false","definedIn":"cpu/arm/globals_arm.hpp","description":"Verify interpreter stack top at every stack expansion (AArch64 only)","name":"VerifyInterpreterStackTop","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"c2","defaultValue":"false","definedIn":"share/opto/c2_globals.hpp","description":"Verify Def-Use modifications during sparse Iterative Global \nValue Numbering","name":"VerifyIterativeGVN","prefix":"-XX:","type":"bool"},
{"availability":"notproduct","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Verify JNIEnv.thread == Thread::current() when entering VM \nfrom JNI","name":"VerifyJNIEnvThread","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"trueInDebug","definedIn":"share/runtime/globals.hpp","description":"Verify jfieldIDs for instance fields","name":"VerifyJNIFields","prefix":"-XX:","type":"bool"},
{"availability":"notproduct","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Verify oops on last frame on entry to VM","name":"VerifyLastFrame","prefix":"-XX:","type":"bool"},
{"availability":"notproduct","component":"c2","defaultValue":"false","definedIn":"share/opto/c2_globals.hpp","description":"verify major loop optimizations","name":"VerifyLoopOptimizations","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"true","definedIn":"share/runtime/globals.hpp","deprecated":"","description":"Verify bytecodes after RedefineClasses constant pool merging","expired":"17","name":"VerifyMergedCPBytecodes","obsoleted":"16","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Verify metaspace on chunk movements.","name":"VerifyMetaspace","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"runtime","defaultValue":"trueInDebug","definedIn":"share/runtime/globals.hpp","description":"perform extra checks when constructing method handles","name":"VerifyMethodHandles","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"gc","defaultValue":"true","definedIn":"share/gc/shared/gc_globals.hpp","description":"Verify GC object start array if verify before/after","name":"VerifyObjectStartArray","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Do plausibility checks for oops","name":"VerifyOops","prefix":"-XX:","type":"bool"},
{"availability":"notproduct","component":"c2","defaultValue":"false","definedIn":"share/opto/c2_globals.hpp","description":"Check types of base addresses in field references","name":"VerifyOptoOopOffsets","prefix":"-XX:","type":"bool"},
{"availability":"notproduct","component":"c2","defaultValue":"false","definedIn":"share/opto/c2_globals.hpp","description":"Apply more time consuming verification during compilation","name":"VerifyOpto","prefix":"-XX:","type":"bool"},
{"availability":"notproduct","component":"c2","defaultValue":"false","definedIn":"share/opto/c2_globals.hpp","description":"Verify Register Allocator","name":"VerifyRegisterAllocator","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"gc","defaultValue":"false","definedIn":"share/gc/shared/gc_globals.hpp","description":"Verify GC remembered sets","name":"VerifyRememberedSets","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Verify shared spaces (false for default archive, true for \narchive specified by -XX:SharedArchiveFile)","name":"VerifySharedSpaces","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Verify that the stack pointer is unchanged after calls","name":"VerifyStackAtCalls","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Verify stack of each thread when it is entering a runtime call","name":"VerifyStack","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"verify StringTable contents at exit","name":"VerifyStringTableAtExit","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"gc","defaultValue":"<br>","definedIn":"share/gc/shared/gc_globals.hpp","description":"Memory sub-systems to verify when Verify*GC flag(s) \nare enabled. One or more sub-systems can be specified \nin a comma separated string. Sub-systems are: \nthreads, heap, symbol_table, string_table, codecache, \ndictionary, classloader_data_graph, metaspace, jni_handles, \ncodecache_oops","name":"VerifySubSet","prefix":"-XX:","type":"ccstrlist"},
{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Watch the thread register for corruption (SPARC only)","name":"VerifyThread","prefix":"-XX:","type":"bool"},
{"availability":"notproduct","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Trace stack (no print) at every exit from the runtime system","name":"WalkStackALot","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"c2","defaultValue":"999999","definedIn":"share/opto/c2_globals.hpp","description":"size of the largest inlinable method","name":"WarmCallMaxSize","prefix":"-XX:","range":"range(0, ((intx)MIN2((int64_t)max_intx,(int64_t)(+1.0e10))))","type":"intx"},
{"availability":"develop","component":"c2","defaultValue":"999999","definedIn":"share/opto/c2_globals.hpp","description":"execution time of the largest inlinable method","name":"WarmCallMaxWork","prefix":"-XX:","range":"range(0, ((intx)MIN2((int64_t)max_intx,(int64_t)(+1.0e10))))","type":"intx"},
{"availability":"develop","component":"c2","defaultValue":"-1","definedIn":"share/opto/c2_globals.hpp","description":"number of calls (per method invocation) to enable inlining","name":"WarmCallMinCount","prefix":"-XX:","range":"range(-1, ((intx)MIN2((int64_t)max_intx,(int64_t)(+1.0e10))))","type":"intx"},
{"availability":"develop","component":"c2","defaultValue":"-1","definedIn":"share/opto/c2_globals.hpp","description":"number of calls (per method invocation) to enable inlining","name":"WarmCallMinProfit","prefix":"-XX:","range":"range(-1, ((intx)MIN2((int64_t)max_intx,(int64_t)(+1.0e10))))","type":"intx"},
{"availability":"notproduct","component":"runtime","defaultValue":"0","definedIn":"share/runtime/globals.hpp","description":"Print warnings for stalled SpinLocks","name":"WarnOnStalledSpinLock","prefix":"-XX:","type":"uintx"},
{"availability":"diagnostic","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Enable internal testing APIs","name":"WhiteBoxAPI","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Print much more debugging information","name":"WizardMode","prefix":"-XX:","type":"bool"},
{"availability":"experimental","component":"gc","defaultValue":"4096","definedIn":"share/gc/shared/gc_globals.hpp","description":"Number of iterations in a spin loop between checks on \ntime out of hard spin","name":"WorkStealingHardSpins","prefix":"-XX:","type":"uintx"},
{"availability":"experimental","component":"gc","defaultValue":"1","definedIn":"share/gc/shared/gc_globals.hpp","description":"Sleep time when sleep is used for yields","name":"WorkStealingSleepMillis","prefix":"-XX:","type":"uintx"},
{"availability":"experimental","component":"gc","defaultValue":"10","definedIn":"share/gc/shared/gc_globals.hpp","description":"Ratio of hard spins to calls to yield","name":"WorkStealingSpinToYieldRatio","prefix":"-XX:","type":"uintx"},
{"availability":"experimental","component":"gc","defaultValue":"5000","definedIn":"share/gc/shared/gc_globals.hpp","description":"Number of yields before a sleep is done during work stealing","name":"WorkStealingYieldsBeforeSleep","prefix":"-XX:","type":"uintx"},
{"availability":"product","component":"gc","defaultValue":"20","definedIn":"share/gc/shared/gc_globals.hpp","description":"Adaptive size percentage change in young generation","name":"YoungGenerationSizeIncrement","prefix":"-XX:","range":"range(0, 100)","type":"uintx"},
{"availability":"product","component":"gc","defaultValue":"8","definedIn":"share/gc/shared/gc_globals.hpp","description":"Decay factor to YoungedGenerationSizeSupplement","name":"YoungGenerationSizeSupplementDecay","prefix":"-XX:","range":"range(1, max_uintx)","type":"uintx"},
{"availability":"product","component":"gc","defaultValue":"80","definedIn":"share/gc/shared/gc_globals.hpp","description":"Supplement to YoungedGenerationSizeIncrement used at startup","name":"YoungGenerationSizeSupplement","prefix":"-XX:","range":"range(0, 100)","type":"uintx"},
{"availability":"product","component":"gc","defaultValue":"4096","definedIn":"share/gc/shared/gc_globals.hpp","description":"Size of young gen promotion LAB's (in HeapWords)","name":"YoungPLABSize","prefix":"-XX:","type":"size_t"},
{"availability":"product","component":"gc","defaultValue":"2.0","definedIn":"share/gc/z/z_globals.hpp","description":"Allocation spike tolerance factor","name":"ZAllocationSpikeTolerance","prefix":"-XX:","type":"double"},
{"availability":"product","component":"gc","defaultValue":"0","definedIn":"share/gc/z/z_globals.hpp","description":"Force GC at a fixed time interval (in seconds)","name":"ZCollectionInterval","prefix":"-XX:","type":"uint"},
{"availability":"diagnostic","component":"gc","defaultValue":"true","definedIn":"share/gc/z/z_globals.hpp","description":"Clean JNI WeakGlobalRefs concurrently","name":"ZConcurrentJNIWeakGlobalHandles","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"gc","defaultValue":"true","definedIn":"share/gc/z/z_globals.hpp","description":"Clean StringTable concurrently","name":"ZConcurrentStringTable","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"gc","defaultValue":"true","definedIn":"share/gc/z/z_globals.hpp","description":"Clean VM WeakHandles concurrently","name":"ZConcurrentVMWeakHandles","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"gc","defaultValue":"25.0","definedIn":"share/gc/z/z_globals.hpp","description":"Maximum allowed heap fragmentation","name":"ZFragmentationLimit","prefix":"-XX:","type":"double"},
{"availability":"product","component":"gc","defaultValue":"NOT_LP64(512*M) LP64_ONLY(8*G)","definedIn":"share/gc/z/z_globals.hpp","description":"Maximum number of bytes allocated for marking stacks","name":"ZMarkStacksMax","prefix":"-XX:","range":"range(32*M, NOT_LP64(512*M) LP64_ONLY(1024*G))","type":"size_t"},
{"availability":"diagnostic","component":"gc","defaultValue":"true","definedIn":"share/gc/z/z_globals.hpp","description":"Apply load barrier optimizations","name":"ZOptimizeLoadBarriers","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"gc","defaultValue":"NULL","definedIn":"share/gc/z/z_globals.hpp","description":"Filesystem path for Java heap backing storage \n(must be a tmpfs or a hugetlbfs filesystem)","name":"ZPath","prefix":"-XX:","type":"ccstr"},
{"availability":"diagnostic","component":"gc","defaultValue":"true","definedIn":"share/gc/z/z_globals.hpp","description":"Enable proactive GC cycles","name":"ZProactive","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"gc","defaultValue":"true","definedIn":"share/gc/z/z_globals.hpp","description":"Allow Java threads to stall and wait for GC to complete \ninstead of immediately throwing an OutOfMemoryError","name":"ZStallOnOutOfMemory","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"gc","defaultValue":"false","definedIn":"share/gc/z/z_globals.hpp","description":"Force tracing of ZStats","name":"ZStatisticsForceTrace","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"gc","defaultValue":"10","definedIn":"share/gc/z/z_globals.hpp","description":"Time between statistics print outs (in seconds)","name":"ZStatisticsInterval","prefix":"-XX:","range":"range(1, (uint)-1)","type":"uint"},
{"availability":"diagnostic","component":"gc","defaultValue":"false","definedIn":"share/gc/z/z_globals.hpp","description":"Unload unused VM symbols","name":"ZSymbolTableUnloading","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"gc","defaultValue":"false","definedIn":"share/gc/z/z_globals.hpp","description":"Unmap bad (inactive) heap views","name":"ZUnmapBadViews","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"gc","defaultValue":"false","definedIn":"share/gc/z/z_globals.hpp","description":"Verify forwarding tables","name":"ZVerifyForwarding","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"gc","defaultValue":"false","definedIn":"share/gc/z/z_globals.hpp","description":"Verify that reference loads are followed by barriers","name":"ZVerifyLoadBarriers","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"gc","defaultValue":"false","definedIn":"share/gc/z/z_globals.hpp","description":"Verify marking stacks","name":"ZVerifyMarking","prefix":"-XX:","type":"bool"},
{"availability":"diagnostic","component":"gc","defaultValue":"true","definedIn":"share/gc/z/z_globals.hpp","description":"Treat JNI WeakGlobalRefs and StringTable as weak roots","name":"ZWeakRoots","prefix":"-XX:","type":"bool"},
{"availability":"develop","cpu":"s390","defaultValue":"false","definedIn":"cpu/s390/globals_s390.hpp","description":"Write 0x0101... to empty stack\n fields. Use this to ease stack debugging.","name":"ZapEmptyStackFields","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"trueInDebug","definedIn":"share/runtime/globals.hpp","description":"Zap filler objects with 0xDEAFBABE","name":"ZapFillerObjects","prefix":"-XX:","type":"bool"},
{"availability":"develop","cpu":"arm","defaultValue":"false","definedIn":"cpu/arm/globals_arm.hpp","description":"Zap high non-significant bits of values (AArch64 only)","name":"ZapHighNonSignificantBits","prefix":"-XX:","type":"bool"},
{"availability":"product","cpu":"ppc","defaultValue":"false","definedIn":"cpu/ppc/globals_ppc.hpp","description":"Write 0x0101... to empty memory.\n Use this to ease debugging.","name":"ZapMemory","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"trueInDebug","definedIn":"share/runtime/globals.hpp","description":"Zap freed resource/arena space with 0xABABABAB","name":"ZapResourceArea","prefix":"-XX:","type":"bool"},
{"availability":"notproduct","component":"runtime","defaultValue":"trueInDebug","definedIn":"share/runtime/globals.hpp","description":"Zap allocated/freed stack segments with 0xFADFADED","name":"ZapStackSegments","prefix":"-XX:","type":"bool"},
{"availability":"develop","component":"runtime","defaultValue":"trueInDebug","definedIn":"share/runtime/globals.hpp","description":"Zap unused heap space with 0xBAADBABE","name":"ZapUnusedHeapArea","prefix":"-XX:","type":"bool"},
{"availability":"notproduct","component":"runtime","defaultValue":"trueInDebug","definedIn":"share/runtime/globals.hpp","description":"Zap freed VM handle space with 0xBCBCBCBC","name":"ZapVMHandleArea","prefix":"-XX:","type":"bool"},
{"availability":"product","component":"gc","defaultValue":"false","definedIn":"share/gc/shared/gc_globals.hpp","description":"Zero out the newly created TLAB","name":"ZeroTLAB","prefix":"-XX:","type":"bool"},
{"availability":"notproduct","component":"runtime","defaultValue":"5","definedIn":"share/runtime/globals.hpp","description":"Number of exits until ZombieALot kicks in","name":"ZombieALotInterval","prefix":"-XX:","type":"intx"},
{"availability":"notproduct","component":"runtime","defaultValue":"false","definedIn":"share/runtime/globals.hpp","description":"Create zombies (non-entrant) at exit from the runtime system","name":"ZombieALot","prefix":"-XX:","type":"bool"},
{"definedIn":"Xusage.txt","description":"disable background compilation","name":"batch","prefix":"-X"},
{"definedIn":"Xusage.txt","description":"\nappend to end of bootstrap class path","name":"bootclasspath/a","prefix":"-X","type":"<dirs/jars>"},
{"definedIn":"Xusage.txt","description":"\nprepend in front of bootstrap class path","name":"bootclasspath/p","prefix":"-X","type":"<dirs/jars>"},
{"definedIn":"Xusage.txt","description":"\nset search path for bootstrap classes and resources","name":"bootclasspath","prefix":"-X","type":"<dirs/jars>"},
{"definedIn":"Xusage.txt","description":"perform additional checks for JNI functions","name":"check:jni","prefix":"-X"},
{"definedIn":"Xusage.txt","description":"enable strictest checks, anticipating future default","name":"future","prefix":"-X"},
{"availability":"experimental","component":"runtime","defaultValue":"5","definedIn":"share/runtime/globals.hpp","description":"(Unstable) select hashCode generation algorithm","name":"hashCode","prefix":"-XX:","type":"intx"},
{"definedIn":"Xusage.txt","description":"interpreted mode execution only","name":"int","prefix":"-X"},
{"definedIn":"Xusage.txt","description":"control JVM logging, use -Xlog:help for details","name":"log","prefix":"-X","type":"<opts>"},
{"definedIn":"Xusage.txt","description":"mixed mode execution (default)","name":"mixed","prefix":"-X"},
{"definedIn":"Xusage.txt","description":"set initial Java heap size","name":"ms","prefix":"-X","type":"<size>"},
{"definedIn":"Xusage.txt","description":"set maximum Java heap size","name":"mx","prefix":"-X","type":"<size>"},
{"definedIn":"Xusage.txt","description":"disable class garbage collection","name":"noclassgc","prefix":"-X"},
{"definedIn":"Xusage.txt","description":"reduce use of OS signals by Java/VM (see documentation)","name":"rs","prefix":"-X"},
{"definedIn":"Xusage.txt","description":"use shared class data if possible (default)","name":"share:auto","prefix":"-X"},
{"definedIn":"Xusage.txt","description":"do not attempt to use shared class data","name":"share:off","prefix":"-X"},
{"definedIn":"Xusage.txt","description":"require using shared class data, otherwise fail.\n\nThe -X options are non-standard and subject to change without notice.","name":"share:on","prefix":"-X"},
{"definedIn":"Xusage.txt","description":"set java thread stack size","name":"ss","prefix":"-X","type":"<size>"}
] }